.class public Lcom/android/providers/telephony/MmsSmsDatabaseHelper;
.super Landroid/database/sqlite/SQLiteOpenHelper;
.source "MmsSmsDatabaseHelper.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/android/providers/telephony/MmsSmsDatabaseHelper$UserAccountReceiver;,
        Lcom/android/providers/telephony/MmsSmsDatabaseHelper$LowStorageMonitor;,
        Lcom/android/providers/telephony/MmsSmsDatabaseHelper$SubjectPairs;,
        Lcom/android/providers/telephony/MmsSmsDatabaseHelper$MmsSmsDatabaseErrorHandler;
    }
.end annotation


# static fields
.field public static CREATE_ATTACHMENTS_TABLE_STRING:Ljava/lang/String; = null
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation
.end field

.field public static CREATE_SMS_TABLE_STRING:Ljava/lang/String; = null
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation
.end field

.field private static final MESSAGE_TYPE_UPDATE_IM_THREADS_ON_DELETE_TRIGGER:Ljava/lang/String;

.field private static final MESSAGE_TYPE_UPDATE_IM_THREADS_ON_DELETE_WITHOUT_TRIGGER:Ljava/lang/String;

.field public static final MESSAGE_TYPE_UPDATE_IM_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

.field private static final MESSAGE_TYPE_UPDATE_THREADS_ON_DELETE_TRIGGER:Ljava/lang/String;

.field public static final MESSAGE_TYPE_UPDATE_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

.field private static final MESSAGE_TYPE_UPDATE_THREADS_TRIGGER:Ljava/lang/String;

.field private static THREAD_TYPE_FT_CANCELLED:I = 0x20

.field private static THREAD_TYPE_MMS_SENDING:I = 0x15

.field private static THREAD_TYPE_SMS_PENDING:I = 0xb

.field private static THREAD_TYPE_SMS_SENDING:I = 0xa

.field private static THREAD_TYPE_UNDELIVERED:I = 0x1f

.field private static final UPDATE_THREAD_FT_EASYSHARE_SELECTION:Ljava/lang/String;

.field private static final UPDATE_THREAD_IM_STICKER_SELECTION:Ljava/lang/String;

.field private static final UPDATE_THREAD_IM_UPDATE_SELECTION:Ljava/lang/String;

.field public static final UPDATE_THREAD_PDU_UPDATE_SELECTION:Ljava/lang/String;

.field private static final UPDATE_THREAD_VIEW_MSG_QUERY:Ljava/lang/String;

.field private static final UPDATE_THREAD_VIEW_MSG_QUERY_PARAMS_COUNT:I

.field private static final UPDATE_THREAD_VIEW_MSG_VIEW:Ljava/lang/String;

.field private static final UPDATE_THREAD_VIEW_RCS_DATE:Ljava/lang/String;

.field private static final UPDATE_THREAD_VIEW_RCS_QUERY:Ljava/lang/String;

.field private static final UPDATE_THREAD_VIEW_RCS_QUERY_PARAMS_COUNT:I

.field private static final UPDATE_THREAD_VIEW_RCS_SNIPPET:Ljava/lang/String;

.field private static final UPDATE_THREAD_VIEW_RCS_SNIPPET_TYPE:Ljava/lang/String;

.field private static sCeInstance:Lcom/android/providers/telephony/MmsSmsDatabaseHelper;

.field private static sDbErrorHandler:Lcom/android/providers/telephony/MmsSmsDatabaseHelper$MmsSmsDatabaseErrorHandler;

.field private static sDeInstance:Lcom/android/providers/telephony/MmsSmsDatabaseHelper;

.field private static sEnableCpm:Z

.field private static sFakeLowStorageTest:Z

.field private static sInitialCreateDone:Ljava/util/concurrent/atomic/AtomicBoolean;

.field private static sIsFirstCall:Z

.field private static sTriedAutoIncrement:Z

.field private static sUpgradeVersion:I


# instance fields
.field private final mContext:Landroid/content/Context;

.field private mLowStorageMonitor:Lcom/android/providers/telephony/MmsSmsDatabaseHelper$LowStorageMonitor;

.field private final mMessageTables:[Ljava/lang/String;

.field private mUserAccountReceiver:Lcom/android/providers/telephony/MmsSmsDatabaseHelper$UserAccountReceiver;


# direct methods
.method static constructor <clinit>()V
    .locals 21

    .line 707
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "UPDATE threads set message_type =  (SELECT    CASE    WHEN type = \'sms\' THEN        CASE            WHEN box_type = 3 THEN 1           WHEN box_type = 4 THEN "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_SMS_SENDING:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, "           WHEN box_type = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v2, 0x6

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " THEN "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v4, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_SMS_PENDING:I

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v4, 0x5

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v5, 0x3

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v6, "           ELSE "

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v7, 0x0

    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v8, "       END    WHEN type = \'mms\' THEN        CASE            WHEN box_type = "

    invoke-virtual {v0, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v8, 0x1

    invoke-virtual {v0, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v9, 0x4

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v10, " THEN                CASE                    WHEN "

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, "err_type"

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v11, " >= 10 THEN "

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v11, "                   ELSE "

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v12, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_MMS_SENDING:I

    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v12, "               END            ELSE "

    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v13, "       END    END FROM (SELECT "

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v13, "date"

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v13, " *1000 AS date, "

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v13, "msg_box"

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v13, " AS box_type, "

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v13, ", \'mms\' AS type, thread_id FROM pdu, pending_msgs        WHERE pending_msgs.proto_type = 1 AND pdu._id = new.msg_id AND pdu._id = pending_msgs.msg_id))"

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_TRIGGER:Ljava/lang/String;

    .line 734
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "UPDATE threads set message_type =  (SELECT    CASE    WHEN type = \'sms\' THEN        CASE            WHEN box_type = 3 THEN 1           WHEN box_type = 4 THEN "

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v13, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_SMS_SENDING:I

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v13, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_SMS_PENDING:I

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v13, "       END    WHEN type = \'mms\' THEN        CASE            WHEN box_type = "

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v13, " THEN                CASE                    WHEN "

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v13, " >= 10 THEN "

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v13, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_MMS_SENDING:I

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v13, "       END    END FROM (SELECT "

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v13, "date"

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v13, " *1000 AS date, "

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v13, "msg_box"

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v13, " AS box_type, "

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v13, ", \'mms\' AS type, thread_id FROM pdu, pending_msgs    WHERE pdu._id = NEW._id AND pdu._id = pending_msgs.msg_id    UNION SELECT date, "

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v13, "type"

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v14, " AS box_type, -1 AS err_type, \'sms\' AS type, thread_id FROM sms WHERE group_id IS NULL AND thread_id=new.thread_id AND reserved = 0    UNION SELECT date,  group_type AS box_type, -1 AS err_type, \'sms\' AS type, thread_id FROM sms WHERE _id=group_id AND thread_id=new.thread_id AND reserved = 0 ORDER BY date DESC LIMIT 1))"

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    .line 785
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v14, "UPDATE threads set message_type =  (SELECT    CASE    WHEN type = \'sms\' THEN        CASE            WHEN box_type = 3 THEN 1           WHEN box_type = 4 THEN "

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v14, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_SMS_SENDING:I

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v14, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_SMS_PENDING:I

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v14, "       END    WHEN type = \'mms\' THEN        CASE            WHEN box_type = "

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v14, " THEN                CASE                    WHEN "

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v14, " >= 10 THEN "

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v14, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_MMS_SENDING:I

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v14, "       END    END FROM (SELECT "

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v14, "date"

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v14, " *1000 AS date, "

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v14, "msg_box"

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v14, " AS box_type, "

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, ", \'mms\' AS type, thread_id FROM pdu    LEFT OUTER JOIN pending_msgs ON pdu._id = pending_msgs.msg_id WHERE thread_id = old.thread_id AND reserved = 0    UNION SELECT date, "

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " AS box_type, -1 AS err_type, \'sms\' AS type, thread_id FROM sms WHERE group_id IS NULL AND thread_id=old.thread_id AND reserved = 0    UNION SELECT date,  group_type AS box_type, -1 AS err_type, \'sms\' AS type, thread_id FROM sms WHERE _id=group_id AND thread_id=old.thread_id AND reserved = 0 ORDER BY date DESC LIMIT 1))"

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_DELETE_TRIGGER:Ljava/lang/String;

    .line 813
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "UPDATE im_threads set message_type =  (SELECT    CASE    WHEN type = \'im\' THEN        CASE            WHEN box_type = 3 THEN 1           WHEN box_type = 4 THEN "

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v10, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_SMS_SENDING:I

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v10, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_SMS_PENDING:I

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 v10, 0x9

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v10, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_UNDELIVERED:I

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v10, "       END    WHEN type = \'ft\' THEN        CASE            WHEN box_type = "

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v10, 0x2

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v14, " THEN                CASE                    WHEN status="

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v15, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_SMS_SENDING:I

    invoke-virtual {v0, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v15, "                   WHEN status="

    invoke-virtual {v0, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " AND cancel_reason in ("

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 v2, 0x7d0

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " )  THEN "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v10, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_FT_CANCELLED:I

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v10, "               END            WHEN box_type = "

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v10, " , "

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v10, 0x2

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v10, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_FT_CANCELLED:I

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v10, "       END    END FROM ( SELECT date, "

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " AS box_type, -1 AS err_type, \'im\' AS type, thread_id, status, 0 as cancel_reason FROM im WHERE thread_id=old.thread_id    UNION SELECT date, "

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " AS box_type, -1 AS err_type, \'ft\' AS type, thread_id, status, cancel_reason FROM ft WHERE thread_id=old.thread_id ORDER BY date DESC LIMIT 1))"

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_IM_THREADS_ON_DELETE_TRIGGER:Ljava/lang/String;

    .line 847
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "UPDATE im_threads set message_type =  (SELECT    CASE    WHEN type = \'im\' THEN        CASE            WHEN box_type = 3 THEN 1           WHEN box_type = 4 THEN "

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v10, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_SMS_SENDING:I

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v10, 0x6

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v10, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_SMS_PENDING:I

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v10, 0x5

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 v10, 0x9

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v10, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_UNDELIVERED:I

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v10, "       END    WHEN type = \'ft\' THEN        CASE            WHEN box_type = "

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v10, 0x2

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v10, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_SMS_SENDING:I

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 v10, 0x7d0

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v10, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_FT_CANCELLED:I

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v10, "               END            WHEN box_type = "

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v10, " , "

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v10, 0x2

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v10, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_FT_CANCELLED:I

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v10, "       END    END FROM ( SELECT date, "

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " AS box_type, -1 AS err_type, \'im\' AS type, thread_id, status, 0 as cancel_reason FROM im WHERE thread_id=new.thread_id    UNION SELECT date, "

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " AS box_type, -1 AS err_type, \'ft\' AS type, thread_id, status, cancel_reason FROM ft WHERE thread_id=new.thread_id ORDER BY date DESC LIMIT 1))"

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_IM_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    .line 884
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "m_type IN ("

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    new-array v10, v5, [Ljava/lang/Integer;

    const/16 v19, 0x84

    .line 887
    invoke-static/range {v19 .. v19}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v19

    aput-object v19, v10, v7

    const/16 v19, 0x82

    .line 888
    invoke-static/range {v19 .. v19}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v19

    aput-object v19, v10, v8

    const/16 v19, 0x80

    .line 889
    invoke-static/range {v19 .. v19}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v19

    const/16 v18, 0x2

    aput-object v19, v10, v18

    const-string v9, ","

    .line 886
    invoke-static {v9, v10}, Landroid/text/TextUtils;->join(Ljava/lang/CharSequence;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, ") AND (  reserved=0 OR (reserved=1 AND msg_box="

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v9, "))"

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_PDU_UPDATE_SELECTION:Ljava/lang/String;

    .line 894
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "(  message_type IN ("

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 v9, 0xa

    new-array v9, v9, [Ljava/lang/Integer;

    .line 898
    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v10

    aput-object v10, v9, v7

    const/4 v10, 0x5

    .line 899
    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v20

    aput-object v20, v9, v8

    const/4 v10, 0x6

    .line 900
    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v20

    const/4 v10, 0x2

    aput-object v20, v9, v10

    const/16 v10, 0x64

    .line 901
    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v10

    aput-object v10, v9, v5

    const/16 v10, 0x65

    .line 902
    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v10

    const/16 v19, 0x4

    aput-object v10, v9, v19

    const/16 v10, 0x66

    .line 903
    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v10

    const/16 v16, 0x5

    aput-object v10, v9, v16

    const/16 v10, 0x67

    .line 904
    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v10

    const/16 v17, 0x6

    aput-object v10, v9, v17

    const/16 v10, 0x68

    .line 905
    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v10

    const/16 v20, 0x7

    aput-object v10, v9, v20

    const/16 v10, 0x1e

    .line 906
    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v10

    const/16 v20, 0x8

    aput-object v10, v9, v20

    const/16 v10, 0x28

    .line 907
    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v10

    const/16 v20, 0x9

    aput-object v10, v9, v20

    const-string v10, ","

    .line 897
    invoke-static {v10, v9}, Landroid/text/TextUtils;->join(Ljava/lang/CharSequence;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, "  ) OR (    "

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, "message_type"

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, " IN ("

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v9, 0x5

    new-array v10, v9, [Ljava/lang/Integer;

    const/16 v9, 0x69

    .line 912
    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    aput-object v9, v10, v7

    const/16 v9, 0x6a

    .line 913
    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    aput-object v9, v10, v8

    const/16 v9, 0x6b

    .line 914
    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    const/16 v18, 0x2

    aput-object v9, v10, v18

    const/16 v9, 0x6c

    .line 915
    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    aput-object v9, v10, v5

    const/16 v9, 0x6d

    .line 916
    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    const/16 v19, 0x4

    aput-object v9, v10, v19

    const-string v9, ","

    .line 911
    invoke-static {v9, v10}, Landroid/text/TextUtils;->join(Ljava/lang/CharSequence;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, "    ) AND body IS NOT NULL  )) AND reserved=0 AND hidden=0"

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_IM_UPDATE_SELECTION:Ljava/lang/String;

    .line 921
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "(  (content_type=107 AND service_type=1)  OR  (message_type IN ("

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v9, 0x5

    new-array v10, v9, [Ljava/lang/Integer;

    const/16 v9, 0x69

    .line 927
    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    aput-object v9, v10, v7

    const/16 v9, 0x6a

    .line 928
    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    aput-object v9, v10, v8

    const/16 v9, 0x6b

    .line 929
    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    const/16 v18, 0x2

    aput-object v9, v10, v18

    const/16 v9, 0x6c

    .line 930
    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    aput-object v9, v10, v5

    const/16 v9, 0x6d

    .line 931
    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    const/16 v19, 0x4

    aput-object v9, v10, v19

    const-string v9, ","

    .line 926
    invoke-static {v9, v10}, Landroid/text/TextUtils;->join(Ljava/lang/CharSequence;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, "    ) AND body IS NOT NULL  )) AND reserved=0 AND hidden=0"

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_IM_STICKER_SELECTION:Ljava/lang/String;

    .line 944
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "message_type IN ("

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v9, 0x2

    new-array v10, v9, [Ljava/lang/Integer;

    const/16 v9, 0x50

    .line 947
    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    aput-object v9, v10, v7

    const/16 v9, 0x51

    .line 948
    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    aput-object v9, v10, v8

    const-string v9, ","

    .line 946
    invoke-static {v9, v10}, Landroid/text/TextUtils;->join(Ljava/lang/CharSequence;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, ") AND reserved=0 AND hidden=0"

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_FT_EASYSHARE_SELECTION:Ljava/lang/String;

    .line 976
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, " SELECT * FROM (   SELECT date, substr(body,1,300) AS snippet, 0 AS snippet_cs, type AS snippet_type, safe_message   FROM ( SELECT _id, type, read, date, reserved, body, safe_message FROM sms INDEXED BY index_date_ordered_sms WHERE thread_id=?) WHERE reserved=0 LIMIT 1 ) UNION ALL SELECT * FROM (   SELECT date, body AS snippet, 0 AS snippet_cs, 1 AS snippet_type, 0 AS safe_message   FROM ( SELECT _id, read, date, body FROM wpm INDEXED BY index_date_ordered_wpm WHERE thread_id=?) LIMIT 1 ) UNION ALL SELECT * FROM (   SELECT date * 1000 AS date, substr(sub,1,500) AS snippet, sub_cs AS snippet_cs, msg_box AS snippet_type, safe_message   FROM ( SELECT _id, m_type, msg_box, read, date, reserved, sub, sub_cs, safe_message FROM pdu INDEXED BY index_date_ordered_pdu WHERE thread_id=?) WHERE "

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v9, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_PDU_UPDATE_SELECTION:Ljava/lang/String;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, " LIMIT 1 ) ORDER BY date DESC LIMIT 1"

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_MSG_VIEW:Ljava/lang/String;

    .line 992
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, " UPDATE threads SET   message_count=( (SELECT count(*) FROM ( SELECT _id, type, read, date, reserved, body, safe_message FROM sms INDEXED BY index_date_ordered_sms WHERE thread_id=?) WHERE type!=3) + (SELECT count(*) FROM ( SELECT _id, read, date, body FROM wpm INDEXED BY index_date_ordered_wpm WHERE thread_id=?)) + (SELECT count(*) FROM ( SELECT _id, m_type, msg_box, read, date, reserved, sub, sub_cs, safe_message FROM pdu INDEXED BY index_date_ordered_pdu WHERE thread_id=?) WHERE m_type IN (128, 130, 132) AND msg_box!=3)),   unread_count=( (SELECT count(*) FROM ( SELECT _id, type, read, date, reserved, body, safe_message FROM sms INDEXED BY index_date_ordered_sms WHERE thread_id=?) WHERE read=0 AND type=1) + (SELECT count(*) FROM ( SELECT _id, read, date, body FROM wpm INDEXED BY index_date_ordered_wpm WHERE thread_id=?) WHERE read=0) + (SELECT count(*) FROM ( SELECT _id, m_type, msg_box, read, date, reserved, sub, sub_cs, safe_message FROM pdu INDEXED BY index_date_ordered_pdu WHERE thread_id=?) WHERE m_type IN (128, 130, 132) AND msg_box=1 AND read=0)),   read=(CASE ( (SELECT count(*) FROM ( SELECT _id, type, read, date, reserved, body, safe_message FROM sms INDEXED BY index_date_ordered_sms WHERE thread_id=?) WHERE read=0 AND type=1) + (SELECT count(*) FROM ( SELECT _id, read, date, body FROM wpm INDEXED BY index_date_ordered_wpm WHERE thread_id=?) WHERE read=0) + (SELECT count(*) FROM ( SELECT _id, m_type, msg_box, read, date, reserved, sub, sub_cs, safe_message FROM pdu INDEXED BY index_date_ordered_pdu WHERE thread_id=?) WHERE m_type IN (128, 130, 132) AND msg_box=1 AND read=0)) WHEN 0 THEN 1 ELSE 0 END),   date=(SELECT date FROM ("

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v9, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_MSG_VIEW:Ljava/lang/String;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, ")),   snippet=(SELECT snippet FROM ("

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v9, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_MSG_VIEW:Ljava/lang/String;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, ")),   snippet_cs=(SELECT snippet_cs FROM ("

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v9, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_MSG_VIEW:Ljava/lang/String;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, ")),   snippet_type=(SELECT snippet_type FROM ("

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v9, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_MSG_VIEW:Ljava/lang/String;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, ")),   safe_message=(SELECT safe_message FROM ("

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v9, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_MSG_VIEW:Ljava/lang/String;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, ")) WHERE threads._id=?"

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_MSG_QUERY:Ljava/lang/String;

    .line 1003
    new-instance v0, Ljava/util/StringTokenizer;

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, " "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v10, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_MSG_QUERY:Ljava/lang/String;

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    const-string v10, "?"

    invoke-direct {v0, v9, v10}, Ljava/util/StringTokenizer;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 1004
    invoke-virtual {v0}, Ljava/util/StringTokenizer;->countTokens()I

    move-result v0

    sub-int/2addr v0, v8

    sput v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_MSG_QUERY_PARAMS_COUNT:I

    .line 1021
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, " SELECT (CASE WHEN(count(date)>=1) THEN date ELSE (   CASE WHEN (SELECT im_type FROM im_threads WHERE normal_thread_id=?) IN (2,3)     THEN ? ELSE 0 END) END) AS date FROM (   SELECT date FROM (     SELECT * FROM (       SELECT date FROM ( SELECT _id, type, read, message_type, reserved, hidden, date, secret_message, display_notification_status, body, content_type, service_type FROM im INDEXED BY index_date_ordered_im WHERE thread_id=?)       WHERE "

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v9, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_IM_UPDATE_SELECTION:Ljava/lang/String;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, " LIMIT 1)     UNION ALL     SELECT * FROM (       SELECT date FROM ("

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, " SELECT _id, type, read, message_type, reserved, hidden, date, secret_message, display_notification_status, body, content_type, service_type FROM im INDEXED BY index_date_ordered_im WHERE thread_id=?"

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, ")       WHERE "

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v9, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_IM_STICKER_SELECTION:Ljava/lang/String;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, " LIMIT 1)     UNION ALL     SELECT * FROM (       SELECT date FROM ("

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, " SELECT _id, type, read, message_type, reserved, hidden, date, secret_message, display_notification_status, body, content_type, service_type FROM im INDEXED BY index_date_ordered_im WHERE thread_id=?"

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, ")       WHERE "

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, "display_notification_status=22 AND reserved=0 AND hidden=0"

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, " LIMIT 1)     UNION ALL     SELECT * FROM (       SELECT date FROM ("

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, " SELECT _id, type, read, message_type, reserved, hidden, date, secret_message, display_notification_status, body, content_type, service_type FROM im INDEXED BY index_date_ordered_im WHERE thread_id=?"

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, ")       WHERE "

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, "message_type=2 AND service_type=1"

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, " LIMIT 1)     UNION ALL     SELECT * FROM (       SELECT date FROM ("

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, " SELECT _id, type, read, message_type, reserved, hidden, date, secret_message, display_notification_status, file_name FROM ft INDEXED BY index_date_ordered_ft WHERE thread_id=?"

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, ")       WHERE "

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, "reserved=0 AND hidden=0"

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, " LIMIT 1)   )   ORDER BY date DESC LIMIT 1 )"

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_RCS_DATE:Ljava/lang/String;

    .line 1049
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, " SELECT snippet FROM (   SELECT * FROM (     SELECT date, body AS snippet, 10 AS priority     FROM ( SELECT _id, type, read, message_type, reserved, hidden, date, secret_message, display_notification_status, body, content_type, service_type FROM im INDEXED BY index_date_ordered_im WHERE thread_id=?)     WHERE "

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v9, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_IM_UPDATE_SELECTION:Ljava/lang/String;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, " LIMIT 1)   UNION ALL   SELECT * FROM (     SELECT date, \'/#Sticker@/\' AS snippet, 2 AS priority     FROM ("

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, " SELECT _id, type, read, message_type, reserved, hidden, date, secret_message, display_notification_status, body, content_type, service_type FROM im INDEXED BY index_date_ordered_im WHERE thread_id=?"

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, ")     WHERE "

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v10, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_IM_STICKER_SELECTION:Ljava/lang/String;

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " LIMIT 1)   UNION ALL   SELECT * FROM (     SELECT date, \'/#RcsSecretMessage@/\' AS snippet, 3 AS priority     FROM ("

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " SELECT _id, type, read, message_type, reserved, hidden, date, secret_message, display_notification_status, body, content_type, service_type FROM im INDEXED BY index_date_ordered_im WHERE thread_id=?"

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, "secret_message=1 AND reserved=0"

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " LIMIT 1)   UNION ALL   SELECT * FROM (     SELECT date, \'/#UnreadTimedMsg@/\'AS snippet, 1 AS priority     FROM ("

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " SELECT _id, type, read, message_type, reserved, hidden, date, secret_message, display_notification_status, body, content_type, service_type FROM im INDEXED BY index_date_ordered_im WHERE thread_id=?"

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, "display_notification_status=22 AND reserved=0 AND hidden=0"

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " LIMIT 1)   UNION ALL   SELECT * FROM (     SELECT date, file_name AS snippet, 10 AS priority     FROM ("

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " SELECT _id, type, read, message_type, reserved, hidden, date, secret_message, display_notification_status, file_name FROM ft INDEXED BY index_date_ordered_ft WHERE thread_id=?"

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, "reserved=0 AND hidden=0"

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " LIMIT 1)   UNION ALL   SELECT * FROM (     SELECT date, \'/#EasyShare@/\' AS snippet, 0 AS priority     FROM ("

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " SELECT _id, type, read, message_type, reserved, hidden, date, secret_message, display_notification_status, file_name FROM ft INDEXED BY index_date_ordered_ft WHERE thread_id=?"

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v10, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_FT_EASYSHARE_SELECTION:Ljava/lang/String;

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " LIMIT 1)   UNION ALL   SELECT * FROM (     SELECT date, \'/#RcsSecretMessage@/\' AS snippet, 3 AS priority     FROM ("

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " SELECT _id, type, read, message_type, reserved, hidden, date, secret_message, display_notification_status, file_name FROM ft INDEXED BY index_date_ordered_ft WHERE thread_id=?"

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, "secret_message=1 AND reserved=0"

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " LIMIT 1)   UNION ALL   SELECT * FROM (     SELECT date, \'/#UnreadTimedMsg@/\' AS snippet, 1 AS priority     FROM ("

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " SELECT _id, type, read, message_type, reserved, hidden, date, secret_message, display_notification_status, file_name FROM ft INDEXED BY index_date_ordered_ft WHERE thread_id=?"

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, "display_notification_status=22 AND reserved=0 AND hidden=0"

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " LIMIT 1) ) ORDER BY date DESC, priority LIMIT 1"

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_RCS_SNIPPET:Ljava/lang/String;

    .line 1092
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, " SELECT snippet_type FROM (   SELECT * FROM (     SELECT date, type AS snippet_type     FROM ( SELECT _id, type, read, message_type, reserved, hidden, date, secret_message, display_notification_status, body, content_type, service_type FROM im INDEXED BY index_date_ordered_im WHERE thread_id=?)     WHERE "

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v10, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_IM_UPDATE_SELECTION:Ljava/lang/String;

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " LIMIT 1)   UNION ALL   SELECT * FROM (     SELECT date, type AS snippet_type     FROM ("

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " SELECT _id, type, read, message_type, reserved, hidden, date, secret_message, display_notification_status, file_name FROM ft INDEXED BY index_date_ordered_ft WHERE thread_id=?"

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, "reserved=0 AND hidden=0"

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, " LIMIT 1) ) ORDER BY date DESC LIMIT 1"

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_RCS_SNIPPET_TYPE:Ljava/lang/String;

    .line 1105
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, " UPDATE im_threads SET   message_count=( (SELECT count(*) FROM ( SELECT _id, type, read, message_type, reserved, hidden, date, secret_message, display_notification_status, body, content_type, service_type FROM im INDEXED BY index_date_ordered_im WHERE thread_id=?) WHERE type!=3) + (SELECT count(*) FROM ( SELECT _id, type, read, message_type, reserved, hidden, date, secret_message, display_notification_status, file_name FROM ft INDEXED BY index_date_ordered_ft WHERE thread_id=?))),   unread_count=( (SELECT count(*) FROM ( SELECT _id, type, read, message_type, reserved, hidden, date, secret_message, display_notification_status, body, content_type, service_type FROM im INDEXED BY index_date_ordered_im WHERE thread_id=?) WHERE read=0 AND type=1) + (SELECT count(*) FROM ( SELECT _id, type, read, message_type, reserved, hidden, date, secret_message, display_notification_status, file_name FROM ft INDEXED BY index_date_ordered_ft WHERE thread_id=?) WHERE read=0 AND type=1)),   read=(CASE ( (SELECT count(*) FROM ( SELECT _id, type, read, message_type, reserved, hidden, date, secret_message, display_notification_status, body, content_type, service_type FROM im INDEXED BY index_date_ordered_im WHERE thread_id=?) WHERE read=0 AND type=1) + (SELECT count(*) FROM ( SELECT _id, type, read, message_type, reserved, hidden, date, secret_message, display_notification_status, file_name FROM ft INDEXED BY index_date_ordered_ft WHERE thread_id=?) WHERE read=0 AND type=1)) WHEN 0 THEN 1 ELSE 0 END),   date=("

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v9, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_RCS_DATE:Ljava/lang/String;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, "),   snippet=("

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v9, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_RCS_SNIPPET:Ljava/lang/String;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, "),   snippet_cs=0,   snippet_type=("

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v9, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_RCS_SNIPPET_TYPE:Ljava/lang/String;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, ") WHERE im_threads.normal_thread_id=?"

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_RCS_QUERY:Ljava/lang/String;

    .line 1115
    new-instance v0, Ljava/util/StringTokenizer;

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, " "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v10, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_RCS_QUERY:Ljava/lang/String;

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    const-string v10, "?"

    invoke-direct {v0, v9, v10}, Ljava/util/StringTokenizer;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 1116
    invoke-virtual {v0}, Ljava/util/StringTokenizer;->countTokens()I

    move-result v0

    sub-int/2addr v0, v8

    sput v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_RCS_QUERY_PARAMS_COUNT:I

    .line 1121
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "UPDATE im_threads set message_type =  (SELECT    CASE    WHEN type = \'im\' THEN        CASE            WHEN box_type = 3 THEN 1           WHEN box_type = 4 THEN "

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v9, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_SMS_SENDING:I

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v9, 0x6

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v9, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_SMS_PENDING:I

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v9, 0x5

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 v1, 0x9

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_UNDELIVERED:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, "       END    WHEN type = \'ft\' THEN        CASE            WHEN box_type = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v1, 0x2

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_SMS_SENDING:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v1, 0x4

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 v6, 0x7d0

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v6, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_FT_CANCELLED:I

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, "               END            WHEN box_type = "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " , "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v1, 0x2

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->THREAD_TYPE_FT_CANCELLED:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, "       END    END FROM ( SELECT date, "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " AS box_type, -1 AS err_type, \'im\' AS type, thread_id, status, 0 as cancel_reason FROM im WHERE thread_id=?    UNION SELECT date, "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " AS box_type, -1 AS err_type, \'ft\' AS type, thread_id, status, cancel_reason FROM ft WHERE thread_id=? ORDER BY date DESC LIMIT 1))WHERE normal_thread_id=?"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_IM_THREADS_ON_DELETE_WITHOUT_TRIGGER:Ljava/lang/String;

    const/4 v0, 0x0

    .line 1156
    sput-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sDeInstance:Lcom/android/providers/telephony/MmsSmsDatabaseHelper;

    .line 1157
    sput-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sCeInstance:Lcom/android/providers/telephony/MmsSmsDatabaseHelper;

    .line 1158
    sput-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sDbErrorHandler:Lcom/android/providers/telephony/MmsSmsDatabaseHelper$MmsSmsDatabaseErrorHandler;

    .line 1168
    sput-boolean v7, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sTriedAutoIncrement:Z

    .line 1169
    sput-boolean v7, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sFakeLowStorageTest:Z

    .line 1181
    sput-boolean v7, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sEnableCpm:Z

    .line 1188
    new-instance v0, Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-direct {v0, v7}, Ljava/util/concurrent/atomic/AtomicBoolean;-><init>(Z)V

    sput-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sInitialCreateDone:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 2665
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "CREATE TABLE sms (_id INTEGER PRIMARY KEY AUTOINCREMENT,thread_id INTEGER,address TEXT,person INTEGER,date INTEGER,date_sent INTEGER DEFAULT 0,protocol INTEGER,read INTEGER DEFAULT 0,status INTEGER DEFAULT -1,type INTEGER,reply_path_present INTEGER,subject TEXT,body TEXT,service_center TEXT,locked INTEGER DEFAULT 0,error_code INTEGER DEFAULT -1,"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "sms"

    .line 2683
    invoke-static {v1}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "  INTEGER DEFAULT "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "default"

    invoke-static {v1}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, ", creator TEXT,seen INTEGER DEFAULT 0,deletable INTEGER DEFAULT 0,"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "sim_slot"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " INTEGER DEFAULT 0,"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "sim_imsi"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " TEXT,hidden INTEGER DEFAULT 0,group_id INTEGER,group_type INTEGER,delivery_date INTEGER,app_id INTEGER DEFAULT 0,msg_id INTEGER DEFAULT 0,callback_number TEXT,reserved INTEGER DEFAULT 0,"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "pri"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " INTEGER DEFAULT 0,teleservice_id INTEGER DEFAULT 0,link_url TEXT,svc_cmd INTEGER DEFAULT 0,svc_cmd_content TEXT,roam_pending INTEGER DEFAULT 0,spam_report INTEGER DEFAULT 0,secret_mode INTEGER DEFAULT 0,safe_message INTEGER DEFAULT 0,favorite INTEGER DEFAULT 0,"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "d_rpt_cnt"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " INTEGER DEFAULT 0,"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "using_mode"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " INTEGER DEFAULT 0,"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "from_address"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " TEXT,announcements_subtype INTEGER DEFAULT 0,announcements_scenario_id TEXT,"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "device_name"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " TEXT,"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "correlation_tag"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "object_id"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "cmc_prop"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "bin_info"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " INTEGER DEFAULT 0,"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "re_original_body"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "re_body"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "re_original_key"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "re_recipient_address"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "re_content_uri"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "re_content_type"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "re_file_name"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "re_type"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " INTEGER DEFAULT -1,"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "re_count_info"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " TEXT);"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->CREATE_SMS_TABLE_STRING:Ljava/lang/String;

    const-string v0, "CREATE TABLE attachments (sms_id INTEGER,content_url TEXT,offset INTEGER);"

    .line 2731
    sput-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->CREATE_ATTACHMENTS_TABLE_STRING:Ljava/lang/String;

    new-array v0, v5, [Ljava/lang/Object;

    const-string v1, "new."

    aput-object v1, v0, v7

    aput-object v1, v0, v8

    const/4 v2, 0x2

    aput-object v1, v0, v2

    const-string v3, "(%sscheduled = 0 OR (%sscheduled = 1 AND %sbox_type = 3))"

    .line 3534
    invoke-static {v3, v0}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    new-array v0, v5, [Ljava/lang/Object;

    const-string v3, "old."

    aput-object v3, v0, v7

    const-string v3, "old."

    aput-object v3, v0, v8

    const-string v3, "old."

    aput-object v3, v0, v2

    const-string v3, "(%sscheduled = 0 OR (%sscheduled = 1 AND %sbox_type = 3))"

    .line 3535
    invoke-static {v3, v0}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    new-array v0, v5, [Ljava/lang/Object;

    const-string v3, ""

    aput-object v3, v0, v7

    aput-object v3, v0, v8

    aput-object v3, v0, v2

    const-string v4, "(%sscheduled = 0 OR (%sscheduled = 1 AND %sbox_type = 3))"

    .line 3536
    invoke-static {v4, v0}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    const/4 v0, 0x6

    new-array v4, v0, [Ljava/lang/Object;

    aput-object v1, v4, v7

    aput-object v1, v4, v8

    aput-object v1, v4, v2

    aput-object v1, v4, v5

    const/4 v6, 0x4

    aput-object v1, v4, v6

    const/4 v9, 0x5

    aput-object v1, v4, v9

    const-string v1, "((%stransport_type=\'em\' OR %stransport_type=\'rcs\' OR %stransport_type=\'em_ft\' OR %stransport_type=\'rcs_ft\' OR %stransport_type=\'fax\') AND %scontent_type not in (\'1\',\'2\',\'3\',\'4\',\'8\',\'9\',\'10\',\'11\',\'12\',\'13\'))"

    .line 3537
    invoke-static {v1, v4}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v3, v0, v7

    aput-object v3, v0, v8

    aput-object v3, v0, v2

    aput-object v3, v0, v5

    aput-object v3, v0, v6

    aput-object v3, v0, v9

    const-string v1, "((%stransport_type=\'em\' OR %stransport_type=\'rcs\' OR %stransport_type=\'em_ft\' OR %stransport_type=\'rcs_ft\' OR %stransport_type=\'fax\') AND %scontent_type not in (\'1\',\'2\',\'3\',\'4\',\'8\',\'9\',\'10\',\'11\',\'12\',\'13\'))"

    .line 3538
    invoke-static {v1, v0}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 9920
    sput-boolean v8, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sIsFirstCall:Z

    return-void
.end method

.method constructor <init>(Landroid/content/Context;Lcom/android/providers/telephony/MmsSmsDatabaseHelper$MmsSmsDatabaseErrorHandler;)V
    .locals 21
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    move-object/from16 v6, p0

    const-string v2, "mmssms.db"

    const/4 v3, 0x0

    const/16 v4, 0x19b

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v5, p2

    .line 1215
    invoke-direct/range {v0 .. v5}, Landroid/database/sqlite/SQLiteOpenHelper;-><init>(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;ILandroid/database/DatabaseErrorHandler;)V

    const-string v7, "sms"

    const-string v8, "spam_sms"

    const-string v9, "pdu"

    const-string v10, "spam_pdu"

    const-string v11, "im"

    const-string v12, "spam_im"

    const-string v13, "ft"

    const-string v14, "spam_ft"

    const-string v15, "wpm"

    const-string v16, "bin_sms"

    const-string v17, "bin_pdu"

    const-string v18, "bin_wpm"

    const-string v19, "bin_im"

    const-string v20, "bin_ft"

    .line 1162
    filled-new-array/range {v7 .. v20}, [Ljava/lang/String;

    move-result-object v0

    iput-object v0, v6, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mMessageTables:[Ljava/lang/String;

    move-object/from16 v0, p1

    .line 1216
    iput-object v0, v6, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mContext:Landroid/content/Context;

    const/4 v0, 0x1

    .line 1218
    invoke-virtual {v6, v0}, Landroid/database/sqlite/SQLiteOpenHelper;->setWriteAheadLoggingEnabled(Z)V

    const-wide/16 v0, 0x7530

    .line 1220
    invoke-virtual {v6, v0, v1}, Landroid/database/sqlite/SQLiteOpenHelper;->setIdleConnectionTimeout(J)V

    .line 1222
    invoke-static {}, Lcom/samsung/android/feature/SemCscFeature;->getInstance()Lcom/samsung/android/feature/SemCscFeature;

    move-result-object v0

    const-string v1, "CscFeature_Message_EnableCpm"

    .line 1223
    invoke-virtual {v0, v1}, Lcom/samsung/android/feature/SemCscFeature;->getBoolean(Ljava/lang/String;)Z

    move-result v0

    sput-boolean v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sEnableCpm:Z

    :try_start_0
    const-string v0, "TP/MmsSmsDatabaseHelper"

    const/16 v1, 0x64

    .line 1225
    invoke-static {v0, v1}, Lcom/android/internal/telephony/PhoneFactory;->addLocalLog(Ljava/lang/String;I)V
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    :catch_0
    return-void
.end method

.method constructor <init>(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V
    .locals 15
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    move-object v0, p0

    .line 1233
    invoke-direct/range {p0 .. p4}, Landroid/database/sqlite/SQLiteOpenHelper;-><init>(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V

    const-string v1, "sms"

    const-string v2, "spam_sms"

    const-string v3, "pdu"

    const-string v4, "spam_pdu"

    const-string v5, "im"

    const-string v6, "spam_im"

    const-string v7, "ft"

    const-string v8, "spam_ft"

    const-string v9, "wpm"

    const-string v10, "bin_sms"

    const-string v11, "bin_pdu"

    const-string v12, "bin_wpm"

    const-string v13, "bin_im"

    const-string v14, "bin_ft"

    .line 1162
    filled-new-array/range {v1 .. v14}, [Ljava/lang/String;

    move-result-object v1

    iput-object v1, v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mMessageTables:[Ljava/lang/String;

    move-object/from16 v1, p1

    .line 1234
    iput-object v1, v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mContext:Landroid/content/Context;

    return-void
.end method

.method private NewupdateThreadsForSnippet(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string p0, "select _id from threads where snippet NOT NULL AND snippet_cs NOT NULL AND date in (select date*1000 from pdu where thread_id NOT NULL group by thread_id having count(thread_id) >= 1) AND _id in (select thread_id from pdu where thread_id NOT NULL group by thread_id having count(thread_id) >= 1);"

    const/4 v0, 0x0

    .line 9597
    invoke-virtual {p1, p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object p0

    if-eqz p0, :cond_1

    .line 9600
    :goto_0
    :try_start_0
    invoke-interface {p0}, Landroid/database/Cursor;->moveToNext()Z

    move-result v0

    if-eqz v0, :cond_0

    const/4 v0, 0x0

    .line 9609
    invoke-interface {p0, v0}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    int-to-long v1, v1

    invoke-static {p1, v1, v2, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThread(Landroid/database/sqlite/SQLiteDatabase;JZ)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_0

    .line 9612
    :cond_0
    invoke-interface {p0}, Landroid/database/Cursor;->close()V

    goto :goto_1

    :catchall_0
    move-exception p1

    invoke-interface {p0}, Landroid/database/Cursor;->close()V

    .line 9613
    throw p1

    :cond_1
    :goto_1
    return-void
.end method

.method private NewupdateThreadsSnippetTrigger(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "DROP TRIGGER IF EXISTS pdu_update_thread_on_insert;"

    .line 9576
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER pdu_update_thread_on_insert AFTER INSERT ON pdu   WHEN new.m_type=132    OR new.m_type=130    OR new.m_type=128 BEGIN  UPDATE threads SET    date = new.date * 1000,     snippet = substr(new.sub,1,500),     snippet_cs = new.sub_cs,    snippet_type = new.msg_box  WHERE threads._id = new.thread_id;   UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM pdu          WHERE read = 0            AND thread_id = threads._id             AND (m_type=132 OR m_type=130 OR m_type=128))       WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; END;"

    .line 9577
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS pdu_update_thread_date_on_update;"

    .line 9583
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER pdu_update_thread_date_on_update AFTER  UPDATE OF date, sub  ON pdu   WHEN new.m_type=132    OR new.m_type=130    OR new.m_type=128 BEGIN  UPDATE threads SET    date = new.date * 1000,     snippet = substr(new.sub,1,500),     snippet_cs = new.sub_cs,    snippet_type = new.msg_box  WHERE threads._id = new.thread_id; END;"

    .line 9585
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private UpdateSmsTableDiffColumn(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string p0, "CREATE TABLE sms_temp (_id INTEGER PRIMARY KEY AUTOINCREMENT,thread_id INTEGER,address TEXT,person INTEGER,date INTEGER,date_sent INTEGER DEFAULT 0,protocol INTEGER,read INTEGER DEFAULT 0,status INTEGER DEFAULT -1,type INTEGER,reply_path_present INTEGER,subject TEXT,body TEXT,service_center TEXT,locked INTEGER DEFAULT 0,error_code INTEGER DEFAULT -1,seen INTEGER DEFAULT 0,deletable INTEGER DEFAULT 0,hidden INTEGER DEFAULT 0,group_id INTEGER,group_type INTEGER,delivery_date INTEGER,app_id INTEGER DEFAULT 0,msg_id INTEGER DEFAULT 0,callback_number TEXT,reserved INTEGER DEFAULT 0,pri INTEGER DEFAULT 0,teleservice_id INTEGER DEFAULT 0,link_url TEXT,svc_cmd INTEGER DEFAULT 0,svc_cmd_content TEXT,roam_pending INTEGER DEFAULT 0,d_rpt_cnt INTEGER DEFAULT 0);"

    .line 9808
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string v0, "Created table sms_temp"

    .line 9844
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "INSERT INTO sms_temp (thread_id, address, person, date, protocol, read, status, type, reply_path_present, subject, body, service_center, locked, error_code, seen, deletable, hidden, group_id, group_type, delivery_date, d_rpt_cnt) SELECT thread_id, address, person, date, protocol, read, status, type, reply_path_present, subject, body, service_center, locked, error_code, seen, deletable, hidden, group_id, group_type, delivery_date, d_rpt_cnt FROM sms"

    .line 9846
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "Copied from sms table to sms_temp"

    .line 9850
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "DROP TABLE sms;"

    .line 9852
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "Dropped sms table"

    .line 9853
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "ALTER TABLE sms_temp RENAME TO sms;"

    .line 9855
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p1, "Renamed sms_temp to sms"

    .line 9856
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method static synthetic access$000(Ljava/lang/String;)V
    .locals 0

    .line 129
    invoke-static {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->localLogWtf(Ljava/lang/String;)V

    return-void
.end method

.method static synthetic access$100(Landroid/content/Context;Z)V
    .locals 0

    .line 129
    invoke-static {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sendDbLostIntent(Landroid/content/Context;Z)V

    return-void
.end method

.method static synthetic access$202(Z)Z
    .locals 0

    .line 129
    sput-boolean p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sTriedAutoIncrement:Z

    return p0
.end method

.method private addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    .locals 1

    .line 6523
    invoke-direct {p0, p2, p3, p4}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    const-string v0, " "

    if-eqz p0, :cond_0

    .line 6524
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " : "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " Column Exist"

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "TP/MmsSmsDatabaseHelper"

    invoke-static {p1, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 6526
    :cond_0
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p1, "ALTER TABLE "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " ADD COLUMN "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p2, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    return-void
.end method

.method private addDeviceNameColumn(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 12

    const-string v1, "upgradeDatabaseToVersion118"

    const-string v3, "sms"

    const-string v4, "device_name"

    const-string v5, "TEXT"

    move-object v0, p0

    move-object v2, p1

    .line 9218
    invoke-direct/range {v0 .. v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v7, "upgradeDatabaseToVersion118"

    const-string v9, "pdu"

    const-string v10, "device_name"

    const-string v11, "TEXT"

    move-object v6, p0

    move-object v8, p1

    .line 9220
    invoke-direct/range {v6 .. v11}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v1, "upgradeDatabaseToVersion118"

    const-string v3, "wpm"

    const-string v4, "device_name"

    const-string v5, "TEXT"

    .line 9222
    invoke-direct/range {v0 .. v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v7, "upgradeDatabaseToVersion118"

    const-string v9, "spam_sms"

    const-string v10, "device_name"

    const-string v11, "TEXT"

    .line 9224
    invoke-direct/range {v6 .. v11}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v1, "upgradeDatabaseToVersion118"

    const-string v3, "spam_pdu"

    const-string v4, "device_name"

    const-string v5, "TEXT"

    .line 9226
    invoke-direct/range {v0 .. v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v7, "upgradeDatabaseToVersion118"

    const-string v9, "im"

    const-string v10, "device_name"

    const-string v11, "TEXT"

    .line 9228
    invoke-direct/range {v6 .. v11}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v1, "upgradeDatabaseToVersion118"

    const-string v3, "ft"

    const-string v4, "device_name"

    const-string v5, "TEXT"

    .line 9230
    invoke-direct/range {v0 .. v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v7, "upgradeDatabaseToVersion118"

    const-string v9, "spam_im"

    const-string v10, "device_name"

    const-string v11, "TEXT"

    .line 9232
    invoke-direct/range {v6 .. v11}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v1, "upgradeDatabaseToVersion118"

    const-string v3, "spam_ft"

    const-string v4, "device_name"

    const-string v5, "TEXT"

    .line 9234
    invoke-direct/range {v0 .. v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    return-void
.end method

.method private addIndex(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "CREATE INDEX pduIndex1 ON pdu (thread_id,locked);"

    .line 10538
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE INDEX addrIndex1 ON addr (msg_id);"

    .line 10539
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE INDEX partIndex1 ON part (mid);"

    .line 10540
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE INDEX pending_msgsIndex1 ON pending_msgs (msg_id);"

    .line 10541
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE INDEX threadsIndex1 ON threads (date);"

    .line 10544
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private addReactionColumns(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)V
    .locals 12

    const-string v1, "addReactionColumns"

    const-string v4, "re_type"

    const-string v5, "INTEGER DEFAULT -1"

    move-object v0, p0

    move-object v2, p1

    move-object v3, p2

    .line 9020
    invoke-direct/range {v0 .. v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v7, "addReactionColumns"

    const-string v10, "re_count_info"

    const-string v11, "TEXT"

    move-object v6, p0

    move-object v8, p1

    move-object v9, p2

    .line 9021
    invoke-direct/range {v6 .. v11}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    return-void
.end method

.method private addReplyColumns(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)V
    .locals 7

    const-string v0, "re_original_body"

    .line 8947
    invoke-direct {p0, p1, p2, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    const-string v2, "addReplyColumns"

    const-string v5, "reply_original_body"

    const-string v6, "TEXT"

    move-object v1, p0

    move-object v3, p1

    move-object v4, p2

    .line 8948
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    :cond_0
    const-string v0, "re_body"

    .line 8950
    invoke-direct {p0, p1, p2, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_1

    const-string v2, "addReplyColumns"

    const-string v5, "reply_body"

    const-string v6, "TEXT"

    move-object v1, p0

    move-object v3, p1

    move-object v4, p2

    .line 8951
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    :cond_1
    const-string v0, "re_original_key"

    .line 8953
    invoke-direct {p0, p1, p2, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_2

    const-string v2, "addReplyColumns"

    const-string v5, "reply_original_key"

    const-string v6, "TEXT"

    move-object v1, p0

    move-object v3, p1

    move-object v4, p2

    .line 8954
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    :cond_2
    const-string v0, "re_recipient_address"

    .line 8956
    invoke-direct {p0, p1, p2, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_3

    const-string v2, "addReplyColumns"

    const-string v5, "reply_recipient_address"

    const-string v6, "TEXT"

    move-object v1, p0

    move-object v3, p1

    move-object v4, p2

    .line 8957
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    :cond_3
    const-string v0, "re_content_uri"

    .line 8959
    invoke-direct {p0, p1, p2, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_4

    const-string v2, "addReplyColumns"

    const-string v5, "reply_content_uri"

    const-string v6, "TEXT"

    move-object v1, p0

    move-object v3, p1

    move-object v4, p2

    .line 8960
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    :cond_4
    const-string v0, "re_content_type"

    .line 8962
    invoke-direct {p0, p1, p2, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_5

    const-string v2, "addReplyColumns"

    const-string v5, "reply_content_type"

    const-string v6, "TEXT"

    move-object v1, p0

    move-object v3, p1

    move-object v4, p2

    .line 8963
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    :cond_5
    const-string v0, "re_file_name"

    .line 8965
    invoke-direct {p0, p1, p2, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_6

    const-string v2, "addReplyColumns"

    const-string v5, "reply_file_name"

    const-string v6, "TEXT"

    move-object v1, p0

    move-object v3, p1

    move-object v4, p2

    .line 8966
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    :cond_6
    return-void
.end method

.method private addThreadsUnreadCountColumn(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "ALTER table threads ADD unread_count INTEGER DEFAULT 0;"

    .line 10345
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private addUpgradeDiffColumn(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 6

    const-string v0, "sms"

    const-string v1, "app_id"

    .line 10433
    invoke-direct {p0, p1, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    const-string v3, "TP/MmsSmsDatabaseHelper"

    if-eqz v2, :cond_0

    const-string v2, "upgradeDatabaseToVersion57 sms.app_id Exist"

    .line 10434
    invoke-static {v3, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string v2, "ALTER TABLE sms ADD COLUMN app_id INTEGER DEFAULT 0"

    .line 10436
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string v2, "msg_id"

    .line 10439
    invoke-direct {p0, p1, v0, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_1

    const-string v4, "upgradeDatabaseToVersion57 sms.msg_id Exist"

    .line 10440
    invoke-static {v3, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :cond_1
    const-string v4, "ALTER TABLE sms ADD COLUMN msg_id INTEGER DEFAULT 0"

    .line 10442
    invoke-virtual {p1, v4}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1
    const-string v4, "callback_number"

    .line 10445
    invoke-direct {p0, p1, v0, v4}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_2

    const-string v4, "upgradeDatabaseToVersion57 sms.callback_number Exist"

    .line 10446
    invoke-static {v3, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :cond_2
    const-string v4, "ALTER TABLE sms ADD COLUMN callback_number TEXT"

    .line 10448
    invoke-virtual {p1, v4}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_2
    const-string v4, "reserved"

    .line 10451
    invoke-direct {p0, p1, v0, v4}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_3

    const-string v5, "upgradeDatabaseToVersion57 sms.reserved Exist"

    .line 10452
    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    :cond_3
    const-string v5, "ALTER TABLE sms ADD COLUMN reserved INTEGER DEFAULT 0"

    .line 10454
    invoke-virtual {p1, v5}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_3
    const-string v5, "teleservice_id"

    .line 10457
    invoke-direct {p0, p1, v0, v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_4

    const-string v5, "upgradeDatabaseToVersion57 Column teleservice_id Exist"

    .line 10458
    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    :cond_4
    const-string v5, "ALTER TABLE sms ADD COLUMN teleservice_id INTEGER DEFAULT 0"

    .line 10460
    invoke-virtual {p1, v5}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_4
    const-string v5, "link_url"

    .line 10463
    invoke-direct {p0, p1, v0, v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_5

    const-string v5, "upgradeDatabaseToVersion57 Column link_url Exist"

    .line 10464
    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_5

    :cond_5
    const-string v5, "ALTER TABLE sms ADD COLUMN link_url TEXT"

    .line 10466
    invoke-virtual {p1, v5}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_5
    const-string v5, "date_sent"

    .line 10469
    invoke-direct {p0, p1, v0, v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_6

    const-string v0, "upgradeDatabaseToVersion57 sms.date_sent Column Exist"

    .line 10470
    invoke-static {v3, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_6

    :cond_6
    const-string v0, "ALTER TABLE sms ADD COLUMN date_sent INTEGER DEFAULT 0"

    .line 10472
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_6
    const-string v0, "wpm"

    .line 10475
    invoke-direct {p0, p1, v0, v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_7

    const-string v0, "upgradeDatabaseToVersion57 wpm.date_sent Exist"

    .line 10476
    invoke-static {v3, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_7

    :cond_7
    const-string v0, "ALTER TABLE wpm ADD COLUMN date_sent INTEGER DEFAULT 0"

    .line 10478
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_7
    const-string v0, "pdu"

    .line 10481
    invoke-direct {p0, p1, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_8

    const-string v1, "upgradeDatabaseToVersion57 pdu.app_id Exist"

    .line 10482
    invoke-static {v3, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_8

    :cond_8
    const-string v1, "ALTER TABLE pdu ADD COLUMN app_id INTEGER DEFAULT 0"

    .line 10484
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 10487
    :goto_8
    invoke-direct {p0, p1, v0, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_9

    const-string v1, "upgradeDatabaseToVersion57 pdu.msg_id Exist"

    .line 10488
    invoke-static {v3, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_9

    :cond_9
    const-string v1, "ALTER TABLE pdu ADD COLUMN msg_id INTEGER DEFAULT 0"

    .line 10490
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_9
    const-string v1, "callback_set"

    .line 10493
    invoke-direct {p0, p1, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_a

    const-string v1, "upgradeDatabaseToVersion57 pdu.callback_set Exist"

    .line 10494
    invoke-static {v3, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_a

    :cond_a
    const-string v1, "ALTER TABLE pdu ADD COLUMN callback_set INTEGER DEFAULT 0"

    .line 10496
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 10499
    :goto_a
    invoke-direct {p0, p1, v0, v4}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_b

    const-string v1, "upgradeDatabaseToVersion57 pdu.reserved Exist"

    .line 10500
    invoke-static {v3, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_b

    :cond_b
    const-string v1, "ALTER TABLE pdu ADD COLUMN reserved INTEGER DEFAULT 0"

    .line 10502
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 10505
    :goto_b
    invoke-direct {p0, p1, v0, v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_c

    const-string v0, "upgradeDatabaseToVersion57 pdu.date_sent Column Exist"

    .line 10506
    invoke-static {v3, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_c

    :cond_c
    const-string v0, "ALTER TABLE pdu ADD COLUMN date_sent INTEGER DEFAULT 0"

    .line 10508
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_c
    const-string v0, "threads"

    const-string v1, "alert_expired"

    .line 10511
    invoke-direct {p0, p1, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_d

    const-string v1, "upgradeDatabaseToVersion57 threads.alert_expired Exist"

    .line 10512
    invoke-static {v3, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_d

    :cond_d
    const-string v1, "ALTER TABLE threads ADD COLUMN alert_expired INTEGER DEFAULT 1"

    .line 10514
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_d
    const-string v1, "reply_all"

    .line 10517
    invoke-direct {p0, p1, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_e

    const-string v1, "upgradeDatabaseToVersion57 threads.reply_all Exist"

    .line 10518
    invoke-static {v3, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_e

    :cond_e
    const-string v1, "ALTER TABLE threads ADD COLUMN reply_all INTEGER DEFAULT -1"

    .line 10520
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_e
    const-string v1, "group_snippet"

    .line 10523
    invoke-direct {p0, p1, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_f

    const-string v1, "upgradeDatabaseToVersion57 threads.group_snippet Exist"

    .line 10524
    invoke-static {v3, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_f

    :cond_f
    const-string v1, "ALTER TABLE threads ADD COLUMN group_snippet TEXT"

    .line 10526
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_f
    const-string v1, "message_type"

    .line 10529
    invoke-direct {p0, p1, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_10

    const-string p0, "upgradeDatabaseToVersion57 threads.message_type Exist"

    .line 10530
    invoke-static {v3, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_10

    :cond_10
    const-string p0, "ALTER TABLE threads ADD COLUMN message_type INTEGER DEFAULT 0"

    .line 10532
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_10
    return-void
.end method

.method private changeTriggerPduObsoleteThread(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string v0, "changeTriggerPduObsoleteThread"

    .line 9239
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p0, "DROP TRIGGER IF EXISTS delete_obsolete_threads_pdu;"

    .line 9241
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS delete_obsolete_threads_when_update_pdu;"

    .line 9243
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER delete_obsolete_threads_when_update_pdu AFTER UPDATE OF thread_id ON pdu WHEN old.thread_id != new.thread_id BEGIN   DELETE FROM threads   WHERE     _id = old.thread_id     AND _id NOT IN     (SELECT thread_id FROM sms      UNION SELECT thread_id from pdu); END;"

    .line 9244
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static checkCodingScheme1(Ljava/lang/String;Ljava/lang/String;)Z
    .locals 0

    .line 9754
    invoke-static {p1}, Ljava/nio/charset/Charset;->forName(Ljava/lang/String;)Ljava/nio/charset/Charset;

    move-result-object p1

    invoke-virtual {p1}, Ljava/nio/charset/Charset;->newEncoder()Ljava/nio/charset/CharsetEncoder;

    move-result-object p1

    .line 9755
    invoke-virtual {p1, p0}, Ljava/nio/charset/CharsetEncoder;->canEncode(Ljava/lang/CharSequence;)Z

    move-result p0

    if-eqz p0, :cond_0

    const/4 p0, 0x1

    return p0

    :cond_0
    const/4 p0, 0x0

    return p0
.end method

.method private static checkThreadDeleted(Landroid/database/sqlite/SQLiteDatabase;J)Z
    .locals 3

    const/4 v0, 0x2

    new-array v0, v0, [Ljava/lang/String;

    .line 1394
    invoke-static {p1, p2}, Ljava/lang/String;->valueOf(J)Ljava/lang/String;

    move-result-object v1

    const/4 v2, 0x0

    aput-object v1, v0, v2

    invoke-static {p1, p2}, Ljava/lang/String;->valueOf(J)Ljava/lang/String;

    move-result-object p1

    const/4 p2, 0x1

    aput-object p1, v0, p2

    const-string p1, " SELECT   (SELECT count(*) FROM threads WHERE _id=?) +   (SELECT count(*) FROM im_threads WHERE normal_thread_id=?)"

    .line 1391
    invoke-virtual {p0, p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object p0

    if-eqz p0, :cond_1

    .line 1395
    :try_start_0
    invoke-interface {p0}, Landroid/database/Cursor;->moveToFirst()Z

    move-result p1

    if-eqz p1, :cond_1

    invoke-interface {p0, v2}, Landroid/database/Cursor;->getInt(I)I

    move-result p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez p1, :cond_2

    goto :goto_1

    :catchall_0
    move-exception p1

    if-eqz p0, :cond_0

    .line 1391
    :try_start_1
    invoke-interface {p0}, Landroid/database/Cursor;->close()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    goto :goto_0

    :catchall_1
    move-exception p0

    invoke-virtual {p1, p0}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    :cond_0
    :goto_0
    throw p1

    :cond_1
    :goto_1
    move v2, p2

    :cond_2
    if-eqz p0, :cond_3

    .line 1396
    invoke-interface {p0}, Landroid/database/Cursor;->close()V

    :cond_3
    return v2
.end method

.method private static checkThreadValidation(Landroid/database/sqlite/SQLiteDatabase;JZ)I
    .locals 11

    const-string v0, "TP/MmsSmsDatabaseHelper"

    .line 1444
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 1445
    invoke-static {p1, p2}, Ljava/lang/String;->valueOf(J)Ljava/lang/String;

    move-result-object v2

    invoke-interface {v1, v2}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 1448
    sget v2, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sUpgradeVersion:I

    const-string v3, "SELECT recipient_ids FROM threads WHERE _id=?"

    const/16 v4, 0x45

    if-ge v2, v4, :cond_0

    invoke-virtual {p0}, Landroid/database/sqlite/SQLiteDatabase;->getVersion()I

    move-result v2

    const/16 v4, 0x46

    if-lt v2, v4, :cond_1

    .line 1449
    :cond_0
    invoke-static {p1, p2}, Ljava/lang/String;->valueOf(J)Ljava/lang/String;

    move-result-object v2

    invoke-interface {v1, v2}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 1450
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " UNION SELECT recipient_ids FROM im_threads WHERE normal_thread_id=? LIMIT 1"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    :cond_1
    const/4 v2, 0x0

    const/4 v4, 0x0

    .line 1454
    :try_start_0
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v5

    new-array v5, v5, [Ljava/lang/String;

    invoke-interface {v1, v5}, Ljava/util/List;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v1

    check-cast v1, [Ljava/lang/String;

    invoke-virtual {p0, v3, v1}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v1
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 1455
    :try_start_1
    invoke-interface {v1}, Landroid/database/Cursor;->moveToNext()Z

    move-result v3

    if-eqz v3, :cond_2

    .line 1456
    invoke-interface {v1, v2}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v3

    const-string v5, " "

    invoke-virtual {v3, v5}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :cond_2
    if-eqz v1, :cond_4

    .line 1458
    :try_start_2
    invoke-interface {v1}, Landroid/database/Cursor;->close()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    goto :goto_1

    :catchall_0
    move-exception v3

    if-eqz v1, :cond_3

    .line 1454
    :try_start_3
    invoke-interface {v1}, Landroid/database/Cursor;->close()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    goto :goto_0

    :catchall_1
    move-exception v1

    :try_start_4
    invoke-virtual {v3, v1}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    :cond_3
    :goto_0
    throw v3
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_0

    :catch_0
    move-exception v1

    const-string v3, "checkThreadValidation(): find recipient_ids failed!"

    .line 1459
    invoke-static {v0, v3, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    :cond_4
    :goto_1
    const/4 v1, 0x7

    new-array v1, v1, [Ljava/lang/String;

    .line 1476
    invoke-static {p1, p2}, Ljava/lang/String;->valueOf(J)Ljava/lang/String;

    move-result-object v3

    aput-object v3, v1, v2

    invoke-static {p1, p2}, Ljava/lang/String;->valueOf(J)Ljava/lang/String;

    move-result-object v3

    const/4 v5, 0x1

    aput-object v3, v1, v5

    invoke-static {p1, p2}, Ljava/lang/String;->valueOf(J)Ljava/lang/String;

    move-result-object v3

    const/4 v6, 0x2

    aput-object v3, v1, v6

    .line 1477
    invoke-static {p1, p2}, Ljava/lang/String;->valueOf(J)Ljava/lang/String;

    move-result-object v3

    const/4 v7, 0x3

    aput-object v3, v1, v7

    invoke-static {p1, p2}, Ljava/lang/String;->valueOf(J)Ljava/lang/String;

    move-result-object v3

    const/4 v8, 0x4

    aput-object v3, v1, v8

    invoke-static {p1, p2}, Ljava/lang/String;->valueOf(J)Ljava/lang/String;

    move-result-object v3

    const/4 v9, 0x5

    aput-object v3, v1, v9

    const/4 v3, 0x6

    .line 1478
    invoke-static {p1, p2}, Ljava/lang/String;->valueOf(J)Ljava/lang/String;

    move-result-object v10

    aput-object v10, v1, v3

    const-string v3, "threads"

    const-string v10, " _id=? AND (   (SELECT count(*) FROM sms INDEXED BY index_date_ordered_sms WHERE thread_id=?) +   (SELECT count(*) FROM wpm INDEXED BY index_date_ordered_wpm WHERE thread_id=?) +   (SELECT count(*) FROM pdu INDEXED BY index_date_ordered_pdu WHERE thread_id=?) +   (SELECT count(*) FROM bin_sms INDEXED BY index_date_ordered_bin_sms WHERE thread_id=?) +   (SELECT count(*) FROM bin_wpm INDEXED BY index_date_ordered_bin_wpm WHERE thread_id=?) +   (SELECT count(*) FROM bin_pdu INDEXED BY index_date_ordered_bin_pdu WHERE thread_id=?) )=0"

    .line 1475
    invoke-virtual {p0, v3, v10, v1}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I

    move-result v1

    add-int/2addr v1, v2

    if-eqz p3, :cond_7

    .line 1483
    invoke-static {}, Lcom/android/providers/telephony/MmsSmsProvider;->getEnableCpm()Z

    move-result p3

    if-eqz p3, :cond_6

    invoke-static {}, Lcom/android/providers/telephony/MmsSmsProvider;->getEnableCmcc()Z

    move-result p3

    if-nez p3, :cond_6

    .line 1484
    invoke-static {}, Lcom/android/providers/telephony/MmsSmsProvider;->getEnableTmbPhase2()Z

    move-result p3

    if-eqz p3, :cond_5

    const-string p3, " OR ((im_type IN(0,1,3) AND conversation_type <> 2) OR (im_type NOT IN(2,3) AND conversation_type = 2))"

    goto :goto_2

    :cond_5
    const-string p3, " OR im_type IN (0,1,3)"

    goto :goto_2

    :cond_6
    const-string p3, " OR im_type NOT IN (2,3)"

    .line 1495
    :goto_2
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, " im_type=9"

    invoke-virtual {v3, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p3, " AND normal_thread_id=? AND (   (SELECT count(*) FROM im INDEXED BY index_date_ordered_im WHERE thread_id=?) +   (SELECT count(*) FROM ft INDEXED BY index_date_ordered_ft WHERE thread_id=?) +   (SELECT count(*) FROM bin_im INDEXED BY index_date_ordered_bin_im WHERE thread_id=?) +   (SELECT count(*) FROM bin_ft INDEXED BY index_date_ordered_bin_ft WHERE thread_id=?) )=0"

    invoke-virtual {v3, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p3

    new-array v3, v9, [Ljava/lang/String;

    .line 1503
    invoke-static {p1, p2}, Ljava/lang/String;->valueOf(J)Ljava/lang/String;

    move-result-object v9

    aput-object v9, v3, v2

    invoke-static {p1, p2}, Ljava/lang/String;->valueOf(J)Ljava/lang/String;

    move-result-object v9

    aput-object v9, v3, v5

    invoke-static {p1, p2}, Ljava/lang/String;->valueOf(J)Ljava/lang/String;

    move-result-object v5

    aput-object v5, v3, v6

    .line 1504
    invoke-static {p1, p2}, Ljava/lang/String;->valueOf(J)Ljava/lang/String;

    move-result-object v5

    aput-object v5, v3, v7

    invoke-static {p1, p2}, Ljava/lang/String;->valueOf(J)Ljava/lang/String;

    move-result-object v5

    aput-object v5, v3, v8

    const-string v5, "im_threads"

    .line 1502
    invoke-virtual {p0, v5, p3, v3}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I

    move-result p3

    add-int/2addr v1, p3

    :cond_7
    if-nez v1, :cond_8

    return v1

    :cond_8
    if-nez v4, :cond_9

    const-string p0, "checkThreadValidation(): No recipient ids need to be deleted"

    .line 1515
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return v1

    .line 1530
    :cond_9
    array-length p3, v4

    :goto_3
    if-ge v2, p3, :cond_a

    aget-object v3, v4, v2

    .line 1531
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    .line 1532
    invoke-interface {v5, v3}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 1533
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "% "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v8, " %"

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-interface {v5, v6}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 1534
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-interface {v5, v3}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 1535
    invoke-interface {v5}, Ljava/util/List;->size()I

    move-result v3

    new-array v3, v3, [Ljava/lang/String;

    invoke-interface {v5, v3}, Ljava/util/List;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v3

    check-cast v3, [Ljava/lang/String;

    const-string v5, "canonical_addresses"

    const-string v6, " canonical_addresses._id=? AND (   NOT EXISTS (     SELECT 1 FROM threads WHERE \' \'||recipient_ids||\' \' LIKE ?   )   AND NOT EXISTS (     SELECT 1 FROM im_threads WHERE \' \'||recipient_ids||\' \' LIKE ?   ) )"

    invoke-virtual {p0, v5, v6, v3}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I

    add-int/lit8 v2, v2, 0x1

    goto :goto_3

    .line 1543
    :cond_a
    invoke-static {p0, p1, p2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->deleteObsoleteThreadCategory(Landroid/database/sqlite/SQLiteDatabase;J)V

    .line 1544
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p1, "checkThreadValidation(): affectedRows="

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v0, p0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    return v1
.end method

.method private convertMmsSubjectEncoding(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 16

    .line 9624
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    const-string v2, "_id"

    const-string v3, "sub"

    const-string v4, "sub_cs"

    .line 9629
    filled-new-array {v2, v3, v4}, [Ljava/lang/String;

    move-result-object v7

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    move-object/from16 v5, p2

    move-object/from16 v6, p1

    invoke-virtual/range {v5 .. v12}, Landroid/database/sqlite/SQLiteDatabase;->query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v5

    :cond_0
    :goto_0
    const/4 v6, 0x0

    const-string v0, ", msgId="

    const-string v8, "TP/MmsSmsDatabaseHelper"

    if-eqz v5, :cond_5

    .line 9632
    :try_start_0
    invoke-interface {v5}, Landroid/database/Cursor;->moveToNext()Z

    move-result v9

    if-eqz v9, :cond_5

    .line 9634
    invoke-interface {v5, v2}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v9

    invoke-interface {v5, v9}, Landroid/database/Cursor;->getLong(I)J

    move-result-wide v9

    .line 9635
    invoke-interface {v5, v3}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v11

    invoke-interface {v5, v11}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v11

    .line 9636
    invoke-interface {v5, v4}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v12

    invoke-interface {v5, v12}, Landroid/database/Cursor;->getInt(I)I

    move-result v12

    .line 9638
    invoke-interface {v5, v3}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v13

    invoke-interface {v5, v13}, Landroid/database/Cursor;->getBlob(I)[B

    move-result-object v13

    if-eqz v11, :cond_0

    .line 9639
    invoke-virtual {v11}, Ljava/lang/String;->length()I

    move-result v14

    if-eqz v14, :cond_0

    const-string v14, "ISO-8859-1"

    .line 9647
    invoke-static {v11, v14}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->checkCodingScheme1(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v14

    if-nez v14, :cond_1

    const/4 v14, 0x1

    goto :goto_1

    :cond_1
    const/4 v14, 0x0

    .line 9651
    :goto_1
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v15, "bytes="

    invoke-virtual {v7, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v13, ", isUTF_8="

    invoke-virtual {v7, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v14}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v9, v10}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v8, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9654
    invoke-interface {v5, v4}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v0

    invoke-interface {v5, v0}, Landroid/database/Cursor;->isNull(I)Z

    move-result v0

    if-eqz v0, :cond_2

    const-string v0, "sub_cs is null, set DEFAULT_CHARSET(106)"

    .line 9655
    invoke-static {v8, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    const/16 v12, 0x6a

    const/4 v7, 0x1

    goto :goto_2

    :cond_2
    const/4 v7, 0x0

    :goto_2
    if-eqz v14, :cond_3

    .line 9664
    :try_start_1
    new-instance v0, Ljava/lang/String;

    invoke-virtual {v11}, Ljava/lang/String;->getBytes()[B

    move-result-object v7

    const-string v11, "iso-8859-1"

    invoke-direct {v0, v7, v11}, Ljava/lang/String;-><init>([BLjava/lang/String;)V
    :try_end_1
    .catch Ljava/io/UnsupportedEncodingException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-object v6, v0

    goto :goto_3

    :catch_0
    move-exception v0

    :try_start_2
    const-string v7, "ISO_8859_1 must be supported!"

    .line 9666
    invoke-static {v8, v7, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 9670
    :goto_3
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "mSubjectValid="

    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v8, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9671
    new-instance v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper$SubjectPairs;

    invoke-direct {v0, v9, v10, v6, v12}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper$SubjectPairs;-><init>(JLjava/lang/String;I)V

    .line 9672
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto/16 :goto_0

    :cond_3
    if-eqz v7, :cond_0

    .line 9676
    new-instance v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper$SubjectPairs;

    invoke-direct {v0, v9, v10, v11, v12}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper$SubjectPairs;-><init>(JLjava/lang/String;I)V

    .line 9677
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto/16 :goto_0

    :catchall_0
    move-exception v0

    move-object v1, v0

    if-eqz v5, :cond_4

    .line 9629
    :try_start_3
    invoke-interface {v5}, Landroid/database/Cursor;->close()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    goto :goto_4

    :catchall_1
    move-exception v0

    move-object v2, v0

    invoke-virtual {v1, v2}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    :cond_4
    :goto_4
    throw v1

    :cond_5
    if-eqz v5, :cond_6

    .line 9682
    invoke-interface {v5}, Landroid/database/Cursor;->close()V

    .line 9687
    :cond_6
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v2

    .line 9689
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "pairSize="

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v8, v5}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    const/4 v7, 0x0

    :goto_5
    if-ge v7, v2, :cond_7

    .line 9693
    invoke-virtual {v1, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/providers/telephony/MmsSmsDatabaseHelper$SubjectPairs;

    .line 9694
    invoke-virtual {v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper$SubjectPairs;->getMsgId()J

    move-result-wide v9

    .line 9695
    invoke-virtual {v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper$SubjectPairs;->getSubject()Ljava/lang/String;

    move-result-object v11

    .line 9696
    invoke-virtual {v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper$SubjectPairs;->getSubCs()I

    move-result v5

    .line 9698
    new-instance v12, Landroid/content/ContentValues;

    invoke-direct {v12}, Landroid/content/ContentValues;-><init>()V

    .line 9699
    invoke-virtual {v12, v3, v11}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    .line 9700
    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-virtual {v12, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    .line 9701
    sget-object v5, Landroid/provider/Telephony$Mms;->CONTENT_URI:Landroid/net/Uri;

    invoke-static {v5, v9, v10}, Landroid/content/ContentUris;->withAppendedId(Landroid/net/Uri;J)Landroid/net/Uri;

    move-result-object v5

    .line 9703
    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "update pairsList : "

    invoke-virtual {v11, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v11, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v11, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v11, v9, v10}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v13, ", mMessageUri="

    invoke-virtual {v11, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v11, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v8, v5}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9705
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "_id = "

    invoke-virtual {v5, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v9, v10}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    move-object/from16 v9, p1

    move-object/from16 v10, p2

    invoke-virtual {v10, v9, v12, v5, v6}, Landroid/database/sqlite/SQLiteDatabase;->update(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I

    add-int/lit8 v7, v7, 0x1

    goto :goto_5

    :cond_7
    return-void
.end method

.method private convertStringEncodingForUpgrade_ForKorVersion57(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 17

    move-object/from16 v0, p1

    const-string v9, "_id"

    const-string v10, "sub"

    const-string v11, "TP/MmsSmsDatabaseHelper"

    const-string v1, "convertStringEncodingForUpgrade_ForKorVersion57() enter"

    .line 10766
    invoke-static {v11, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const/4 v12, 0x0

    :try_start_0
    const-string v2, "pdu"

    .line 10770
    filled-new-array {v9, v10}, [Ljava/lang/String;

    move-result-object v3

    const-string v4, "sub!=\'\'"

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    move-object/from16 v1, p1

    invoke-virtual/range {v1 .. v8}, Landroid/database/sqlite/SQLiteDatabase;->query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v1
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_2
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    const-string v13, "_id = "

    const-string v14, "utf-8"

    const-string v15, "iso-8859-1"

    if-eqz v1, :cond_2

    .line 10774
    :try_start_1
    invoke-interface {v1, v9}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v2

    .line 10775
    invoke-interface {v1, v10}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v3

    .line 10776
    new-instance v4, Landroid/content/ContentValues;

    invoke-direct {v4}, Landroid/content/ContentValues;-><init>()V

    .line 10778
    :cond_0
    :goto_0
    invoke-interface {v1}, Landroid/database/Cursor;->moveToNext()Z

    move-result v5

    if-eqz v5, :cond_1

    .line 10779
    invoke-interface {v1, v3}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v5

    if-eqz v5, :cond_0

    .line 10781
    invoke-virtual {v5}, Ljava/lang/String;->isEmpty()Z

    move-result v6

    if-nez v6, :cond_0

    .line 10782
    invoke-virtual {v4}, Landroid/content/ContentValues;->clear()V

    .line 10783
    new-instance v6, Ljava/lang/String;

    invoke-virtual {v5, v15}, Ljava/lang/String;->getBytes(Ljava/lang/String;)[B

    move-result-object v5

    invoke-direct {v6, v5, v14}, Ljava/lang/String;-><init>([BLjava/lang/String;)V

    invoke-virtual {v4, v10, v6}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const-string v5, "pdu"

    .line 10785
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v6, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {v1, v2}, Landroid/database/Cursor;->getLong(I)J

    move-result-wide v7

    invoke-virtual {v6, v7, v8}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v0, v5, v4, v6, v12}, Landroid/database/sqlite/SQLiteDatabase;->update(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I

    goto :goto_0

    .line 10789
    :cond_1
    invoke-interface {v1}, Landroid/database/Cursor;->close()V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-object/from16 v16, v12

    goto :goto_1

    :catchall_0
    move-exception v0

    move-object v12, v1

    goto/16 :goto_6

    :catch_0
    move-exception v0

    move-object v12, v1

    goto/16 :goto_4

    :cond_2
    move-object/from16 v16, v1

    :goto_1
    :try_start_2
    const-string v2, "spam_pdu"

    .line 10794
    filled-new-array {v9, v10}, [Ljava/lang/String;

    move-result-object v3

    const-string v4, "sub!=\'\'"

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    move-object/from16 v1, p1

    invoke-virtual/range {v1 .. v8}, Landroid/database/sqlite/SQLiteDatabase;->query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v1
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    if-eqz v1, :cond_5

    .line 10798
    :try_start_3
    invoke-interface {v1, v9}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v2

    .line 10799
    invoke-interface {v1, v10}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v3

    .line 10800
    new-instance v4, Landroid/content/ContentValues;

    invoke-direct {v4}, Landroid/content/ContentValues;-><init>()V

    .line 10802
    :cond_3
    :goto_2
    invoke-interface {v1}, Landroid/database/Cursor;->moveToNext()Z

    move-result v5

    if-eqz v5, :cond_4

    .line 10803
    invoke-interface {v1, v3}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v5

    if-eqz v5, :cond_3

    .line 10805
    invoke-virtual {v5}, Ljava/lang/String;->isEmpty()Z

    move-result v6

    if-nez v6, :cond_3

    .line 10806
    invoke-virtual {v4}, Landroid/content/ContentValues;->clear()V

    .line 10807
    new-instance v6, Ljava/lang/String;

    invoke-virtual {v5, v15}, Ljava/lang/String;->getBytes(Ljava/lang/String;)[B

    move-result-object v5

    invoke-direct {v6, v5, v14}, Ljava/lang/String;-><init>([BLjava/lang/String;)V

    invoke-virtual {v4, v10, v6}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const-string v5, "spam_pdu"

    .line 10809
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v6, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {v1, v2}, Landroid/database/Cursor;->getInt(I)I

    move-result v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v0, v5, v4, v6, v12}, Landroid/database/sqlite/SQLiteDatabase;->update(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I

    goto :goto_2

    .line 10813
    :cond_4
    invoke-interface {v1}, Landroid/database/Cursor;->close()V
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_3

    :cond_5
    move-object v12, v1

    :goto_3
    if-eqz v12, :cond_6

    goto :goto_5

    :catchall_1
    move-exception v0

    move-object/from16 v12, v16

    goto :goto_6

    :catch_1
    move-exception v0

    move-object/from16 v12, v16

    goto :goto_4

    :catchall_2
    move-exception v0

    goto :goto_6

    :catch_2
    move-exception v0

    :goto_4
    :try_start_4
    const-string v1, "convertStringEncodingForUpgrade_ForKorVersion57(): subject convert error occured"

    .line 10818
    invoke-static {v11, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 10819
    invoke-virtual {v0}, Ljava/lang/Exception;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v11, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    if-eqz v12, :cond_6

    .line 10822
    :goto_5
    invoke-interface {v12}, Landroid/database/Cursor;->close()V

    :cond_6
    return-void

    :goto_6
    if-eqz v12, :cond_7

    invoke-interface {v12}, Landroid/database/Cursor;->close()V

    .line 10825
    :cond_7
    throw v0
.end method

.method private createAddrMsgIdIndex(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    :try_start_0
    const-string p0, "CREATE INDEX IF NOT EXISTS addrMsgIdIndex ON addr (msg_id)"

    .line 2359
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception p0

    .line 2361
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "got exception creating indices: "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/Exception;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "TP/MmsSmsDatabaseHelper"

    invoke-static {p1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    :goto_0
    return-void
.end method

.method private createChannelTable(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "CREATE TABLE mychannels (_id INTEGER PRIMARY KEY AUTOINCREMENT,channel_id INTEGER,channel_name TEXT NOT NULL,is_checked INTEGER,sim_slot INTEGER);"

    .line 2196
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private createCmasTable(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "CREATE TABLE IF NOT EXISTS cmas (_id INTEGER PRIMARY KEY AUTOINCREMENT,sms_id INTEGER,thread_id INTEGER,service_category INTEGER,category INTEGER,response_type INTEGER,severity INTEGER,urgency INTEGER,certainty INTEGER,identifier INTEGER,alert_handling INTEGER,expires INTEGER,language INTEGER,expired INTEGER DEFAULT 1,using_mode INTEGER DEFAULT 0);"

    .line 2840
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private createCmasTriggers(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "CREATE TRIGGER Cmas_cleanup DELETE ON sms BEGIN   DELETE FROM cmas  WHERE sms_id=old._id;END;"

    .line 2825
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER cmas_update_thread_alert_expired_on_update AFTER  UPDATE OF expired  ON cmas BEGIN   UPDATE threads SET alert_expired =     CASE (SELECT COUNT(*)          FROM cmas LEFT JOIN threads           ON threads._id = thread_id          WHERE new.expired = 0)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; END;"

    .line 2831
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private createCommonTriggers(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "DROP TRIGGER IF EXISTS pdu_update_thread_type_on_update;"

    .line 3135
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER pdu_update_thread_type_on_update AFTER  UPDATE OF msg_box  ON pdu   WHEN new.m_type=132    OR new.m_type=130    OR new.m_type=128 BEGIN  UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM pdu          WHERE read = 0            AND thread_id = threads._id             AND (m_type=132 OR m_type=130 OR m_type=128))       WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id;   UPDATE threads SET snippet_type = (    SELECT snippet_type FROM (      SELECT date * 1000 AS date, msg_box AS snippet_type, thread_id FROM pdu WHERE thread_id = new.thread_id      UNION       SELECT date, type AS snippet_type, thread_id FROM sms WHERE thread_id = new.thread_id)    ORDER BY date DESC LIMIT 1)  WHERE threads._id = new.thread_id; END;"

    .line 3136
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS sms_update_thread_type_on_update;"

    .line 3143
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER sms_update_thread_type_on_update AFTER  UPDATE OF type  ON sms BEGIN  UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM sms          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id;   UPDATE threads SET snippet_type = (    SELECT snippet_type FROM (      SELECT date * 1000 AS date, msg_box AS snippet_type, thread_id FROM pdu WHERE thread_id = new.thread_id      UNION       SELECT date, type AS snippet_type, thread_id FROM sms WHERE thread_id = new.thread_id)    ORDER BY date DESC LIMIT 1)  WHERE threads._id = new.thread_id; END;"

    .line 3144
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER IF NOT EXISTS sms_update_thread_read_on_update AFTER  UPDATE OF read  ON sms BEGIN   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM sms          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id;    UPDATE threads SET unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id           AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id           AND wpm.read = 0) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id            AND pdu.read = 0            AND (m_type = 128 OR m_type = 132 OR m_type = 130)           AND msg_box = 1)   WHERE threads._id = new.thread_id; END;"

    .line 3150
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER IF NOT EXISTS delete_obsolete_threads_when_update_pdu AFTER UPDATE OF thread_id ON pdu WHEN old.thread_id != new.thread_id BEGIN   DELETE FROM threads   WHERE     _id = old.thread_id     AND _id NOT IN     (SELECT thread_id FROM sms      UNION SELECT thread_id from pdu); END;"

    .line 3167
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER IF NOT EXISTS update_threads_error_on_update_mms   AFTER UPDATE OF err_type ON pending_msgs   WHEN (OLD.err_type < 10 AND NEW.err_type >= 10)    OR (OLD.err_type >= 10 AND NEW.err_type < 10) BEGIN  UPDATE threads SET error =     CASE      WHEN NEW.err_type >= 10 THEN error + 1      ELSE error - 1    END   WHERE _id =   (SELECT DISTINCT thread_id    FROM pdu    WHERE _id = NEW.msg_id); END;"

    .line 3183
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER IF NOT EXISTS update_threads_error_on_update_sms   AFTER UPDATE OF type ON sms  WHEN (OLD.type != 5 AND NEW.type = 5)    OR (OLD.type = 5 AND NEW.type != 5) BEGIN   UPDATE threads SET error =     CASE      WHEN NEW.type = 5 THEN error + 1      ELSE error - 1    END   WHERE _id = NEW.thread_id; END;"

    .line 3201
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS wpm_update_thread_type_on_update;"

    .line 3216
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER wpm_update_thread_type_on_update AFTER  UPDATE OF type  ON wpm BEGIN  UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM wpm          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; END;"

    .line 3217
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER IF NOT EXISTS wpm_update_thread_read_on_update AFTER  UPDATE OF read  ON wpm BEGIN   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM wpm          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id;    UPDATE threads SET unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id           AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id           AND wpm.read = 0) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id            AND pdu.read = 0            AND (m_type = 128 OR m_type = 132 OR m_type = 130)           AND msg_box = 1)   WHERE threads._id = new.thread_id; END;"

    .line 3223
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER IF NOT EXISTS im_update_thread_read_on_update AFTER  UPDATE OF read  ON im BEGIN   UPDATE im_threads SET read =     CASE (SELECT COUNT(*)          FROM im          WHERE read = 0            AND thread_id = im_threads.normal_thread_id)      WHEN 0 THEN 1      ELSE 0    END  WHERE im_threads.normal_thread_id = new.thread_id;    UPDATE im_threads SET unread_count =        (SELECT count(*) FROM im LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id           AND im.read = 0 AND im.type = 1) +        (SELECT count(*) FROM ft LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id           AND ft.read = 0 AND ft.type = 1)   WHERE im_threads.normal_thread_id = new.thread_id; END;"

    .line 3233
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER IF NOT EXISTS ft_update_im_thread_read_on_update AFTER  UPDATE OF read  ON ft BEGIN   UPDATE im_threads SET read =     CASE (SELECT COUNT(*)          FROM ft          WHERE read = 0            AND thread_id = im_threads.normal_thread_id)      WHEN 0 THEN 1      ELSE 0    END  WHERE im_threads.normal_thread_id = new.thread_id;    UPDATE im_threads SET unread_count =        (SELECT count(*) FROM im LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id           AND im.read = 0 AND im.type = 1) +        (SELECT count(*) FROM ft LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id           AND ft.read = 0 AND ft.type = 1)   WHERE im_threads.normal_thread_id = new.thread_id; END;"

    .line 3239
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private createDateOrderedIndices(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "CREATE INDEX IF NOT EXISTS index_date_ordered_sms ON sms (thread_id, date DESC)"

    .line 2342
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE INDEX IF NOT EXISTS index_date_ordered_wpm ON wpm (thread_id, date DESC)"

    .line 2343
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE INDEX IF NOT EXISTS index_date_ordered_pdu ON pdu (thread_id, date DESC)"

    .line 2344
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE INDEX IF NOT EXISTS index_date_ordered_im ON im (thread_id, date DESC)"

    .line 2345
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE INDEX IF NOT EXISTS index_date_ordered_ft ON ft (thread_id, date DESC)"

    .line 2346
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private createFTRetryTable(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "CREATE TABLE IF NOT EXISTS ft_retry (_id INTEGER PRIMARY KEY AUTOINCREMENT,rcsdb_id INTEGER,type INTEGER DEFAULT 0,retry_counter INTEGER,last_time INTEGER);"

    .line 3912
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private createFtTables(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "CREATE TABLE IF NOT EXISTS ft (_id INTEGER PRIMARY KEY AUTOINCREMENT,thread_id INTEGER,transaction_id INTEGER DEFAULT 0,bytes_transf INTEGER,file_name TEXT,file_path TEXT,file_size INTEGER DEFAULT 0,thumbnail_path TEXT,cancel_reason INTEGER,display_notification_status INTEGER DEFAULT 0,session_id TEXT,content_type TEXT,media_id INTEGER DEFAULT 0,seen INTEGER DEFAULT 0,read INTEGER DEFAULT 0,type INTEGER DEFAULT 0,address TEXT,date INTEGER,date_sent INTEGER,status INTEGER DEFAULT 0,hidden INTEGER DEFAULT 0,locked INTEGER DEFAULT 0,reject_reason INTEGER,chat_session_id TEXT,rcsdb_id INTEGER,delivered_timestamp INTEGER DEFAULT 0,remote_uri TEXT,message_type INTEGER DEFAULT 0,user_alias TEXT,displayed_counter INTEGER DEFAULT 0,reserved INTEGER DEFAULT 0,service_type INTEGER DEFAULT 0,sim_slot INTEGER DEFAULT 0,sim_imsi TEXT,recipients TEXT,delivered_count INTEGER DEFAULT 0,timedmsg_expiry INTEGER DEFAULT 0,secret_mode INTEGER DEFAULT 0,ext_info TEXT,app_id INTEGER DEFAULT 0,msg_id INTEGER DEFAULT 0,secret_message INTEGER DEFAULT 0,ft_mech INTEGER DEFAULT 0,favorite INTEGER DEFAULT 0,time_len INTEGER DEFAULT 0,using_mode INTEGER DEFAULT 0,updated_timestamp INTEGER DEFAULT 0,from_address TEXT,device_name TEXT,safe_message INTEGER DEFAULT 0,imdn_message_id TEXT,safe_image_path TEXT,spam_report INTEGER DEFAULT 0,creator TEXT,sef_type INTEGER DEFAULT 0,correlation_tag TEXT,object_id TEXT,expiry_timestamp INTEGER DEFAULT 0,cmc_prop TEXT,is_bot INTEGER DEFAULT 0,bin_info INTEGER DEFAULT 0,re_original_body TEXT,re_body TEXT,re_original_key TEXT,re_recipient_address TEXT,re_content_uri TEXT,re_content_type TEXT,re_file_name TEXT,re_type INTEGER DEFAULT -1,re_count_info TEXT);"

    .line 3836
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private createImTables(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "CREATE TABLE IF NOT EXISTS im (_id INTEGER PRIMARY KEY AUTOINCREMENT,thread_id INTEGER DEFAULT 0,transaction_id INTEGER DEFAULT 0,address TEXT,date_sent INTEGER DEFAULT 0,date INTEGER DEFAULT 0,read INTEGER DEFAULT 0,status INTEGER DEFAULT 0,type INTEGER DEFAULT 0,body TEXT,display_notification_status INTEGER DEFAULT 0,seen INTEGER DEFAULT 0,message_type INTEGER DEFAULT 0,session_id TEXT,content_type TEXT,hidden INTEGER DEFAULT 0,locked INTEGER DEFAULT 0,displayed_counter INTEGER DEFAULT 0,reserved INTEGER DEFAULT 0,imdn_message_id TEXT,rcsdb_id TEXT, user_alias TEXT,delivered_timestamp INTEGER DEFAULT 0,remote_uri TEXT,service_type INTEGER DEFAULT 0,sim_slot INTEGER DEFAULT 0,sim_imsi TEXT,recipients TEXT,sticker_id TEXT,delivered_count INTEGER DEFAULT 0,timedmsg_expiry INTEGER DEFAULT 0,secret_mode INTEGER DEFAULT 0,ext_info TEXT,app_id INTEGER DEFAULT 0,msg_id INTEGER DEFAULT 0,secret_message INTEGER DEFAULT 0,mcloud_filename TEXT,favorite INTEGER DEFAULT 0,using_mode INTEGER DEFAULT 0,updated_timestamp INTEGER DEFAULT 0,from_address TEXT,device_name TEXT,safe_message INTEGER DEFAULT 0,safe_image_path TEXT,spam_report INTEGER DEFAULT 0,creator TEXT,correlation_tag TEXT,object_id TEXT,cmc_prop TEXT,is_bot INTEGER DEFAULT 0,bin_info INTEGER DEFAULT 0,re_original_body TEXT,re_body TEXT,re_original_key TEXT,re_recipient_address TEXT,re_content_uri TEXT,re_content_type TEXT,re_file_name TEXT,re_type INTEGER DEFAULT -1,re_count_info TEXT);"

    .line 3771
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private createImThreadsTables(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "CREATE TABLE IF NOT EXISTS im_threads (_id INTEGER PRIMARY KEY AUTOINCREMENT,normal_thread_id INTEGER DEFAULT 0,date INTEGER DEFAULT 0,message_count INTEGER DEFAULT 0,recipient_ids TEXT,snippet TEXT,snippet_cs INTEGER DEFAULT 0,read INTEGER DEFAULT 1,error INTEGER DEFAULT 0,has_attachment INTEGER DEFAULT 0,unread_count INTEGER DEFAULT 0,alert_expired INTEGER DEFAULT 1,reply_all INTEGER DEFAULT -1,group_snippet TEXT,message_type INTEGER DEFAULT 0,display_recipient_ids TEXT,translate_mode TEXT default \'off\', secret_mode INTEGER DEFAULT 0, im_type TEXT, read_status TEXT, alias TEXT,opened INTEGER DEFAULT 0,admin TEXT,remark TEXT,nick_name TEXT,is_mute INTEGER DEFAULT 0,chat_type INTEGER DEFAULT 0,pa_uuid TEXT,pa_thread INTEGER DEFAULT 0,menustring TEXT,pin_to_top INTEGER DEFAULT -1,using_mode INTEGER DEFAULT 0,delete_expiry INTEGER DEFAULT 0,from_address TEXT,message_date INTEGER,thread_service_type INTEGER DEFAULT -1,pa_ownnumber TEXT,snippet_type INTEGER,conversation_type INTEGER DEFAULT 0,session_id TEXT,session_id2 TEXT,sim_imsi TEXT,sim_imsi2 TEXT,im_conversation_id TEXT,im_conversation_id2 TEXT,im_contribution_id TEXT,im_contribution_id2 TEXT,session_uri TEXT,session_uri2 TEXT, bin_status INTEGER DEFAULT 0,conversation_detail_info TEXT);"

    .line 4060
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE INDEX IF NOT EXISTS imthreadsIndex1 ON im_threads (date);"

    .line 4124
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private createImThreadsView(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "CREATE VIEW IF NOT EXISTS view_im_threads AS SELECT * FROM im_threads WHERE bin_status!=1;"

    .line 4135
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private createIndices(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    .line 2323
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createThreadIdIndex(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2324
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createDateOrderedIndices(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2325
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createPartMidIndex(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2326
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createAddrMsgIdIndex(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2327
    invoke-static {p1}, Lcom/android/providers/telephony/bin/BinCommonDbUtil;->createDateOrderedIndices(Landroid/database/sqlite/SQLiteDatabase;)V

    return-void
.end method

.method private createMmsTriggers(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "DROP TRIGGER IF EXISTS part_cleanup"

    .line 2496
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER part_cleanup DELETE ON pdu BEGIN   DELETE FROM part  WHERE mid=old._id;END;"

    .line 2497
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS addr_cleanup"

    .line 2504
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER addr_cleanup DELETE ON pdu BEGIN   DELETE FROM addr  WHERE msg_id=old._id;END;"

    .line 2505
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS cleanup_delivery_and_read_report"

    .line 2513
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER cleanup_delivery_and_read_report AFTER DELETE ON pdu WHEN old.m_type=128 BEGIN   DELETE FROM pdu  WHERE (m_type=134    OR m_type=136)    AND m_id=old.m_id; END;"

    .line 2514
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS update_threads_on_insert_part"

    .line 2525
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER update_threads_on_insert_part  AFTER INSERT ON part  WHEN new.ct != \'text/plain\' AND new.ct != \'application/smil\'  BEGIN   UPDATE threads SET has_attachment=1 WHERE _id IN    (SELECT pdu.thread_id FROM part JOIN pdu ON pdu._id=part.mid      WHERE part._id=new._id LIMIT 1);  END"

    .line 2526
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS update_threads_on_update_part"

    .line 2528
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER update_threads_on_update_part  AFTER UPDATE of mid ON part  WHEN new.ct != \'text/plain\' AND new.ct != \'application/smil\'  BEGIN   UPDATE threads SET has_attachment=1 WHERE _id IN    (SELECT pdu.thread_id FROM part JOIN pdu ON pdu._id=part.mid      WHERE part._id=new._id LIMIT 1);  END"

    .line 2529
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS update_threads_on_delete_part"

    .line 2531
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER IF NOT EXISTS update_threads_on_delete_part  AFTER DELETE ON part  WHEN old.ct != \'text/plain\' AND old.ct != \'application/smil\'  BEGIN   UPDATE threads SET has_attachment =    CASE     (SELECT COUNT(*) FROM part JOIN pdu      WHERE pdu.thread_id = threads._id      AND part.ct != \'text/plain\' AND part.ct != \'application/smil\'      AND part.mid = pdu._id)   WHEN 0 THEN 0    ELSE 1    END   WHERE _id IN    (SELECT DISTINCT pdu.thread_id FROM part JOIN pdu ON pdu._id=part.mid       WHERE pdu._id=old.mid );  END"

    .line 2532
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS update_threads_on_update_pdu"

    .line 2534
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER update_threads_on_update_pdu  AFTER UPDATE of thread_id ON pdu  BEGIN   UPDATE threads SET has_attachment=1 WHERE _id IN    (SELECT pdu.thread_id FROM part JOIN pdu      WHERE part.ct != \'text/plain\' AND part.ct != \'application/smil\'      AND part.mid = pdu._id); END"

    .line 2535
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS delete_mms_pending_on_delete"

    .line 2539
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER delete_mms_pending_on_delete AFTER DELETE ON pdu BEGIN   DELETE FROM pending_msgs  WHERE msg_id=old._id; END;"

    .line 2540
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS delete_mms_pending_on_update"

    .line 2548
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER delete_mms_pending_on_update AFTER UPDATE ON pdu WHEN old.msg_box=4  AND new.msg_box!=4 BEGIN   DELETE FROM pending_msgs  WHERE msg_id=new._id; END;"

    .line 2549
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS insert_mms_pending_on_insert"

    .line 2560
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER insert_mms_pending_on_insert AFTER INSERT ON pdu WHEN new.m_type=130  OR new.m_type=135 BEGIN   INSERT INTO pending_msgs    (proto_type,     msg_id,     msg_type,     sim_slot2,     err_type,     err_code,     retry_index,     due_time)   VALUES     (1,      new._id,      new.m_type,      new.sim_slot,0,0,0,0);END;"

    .line 2561
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS insert_mms_pending_on_update"

    .line 2586
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER insert_mms_pending_on_update AFTER UPDATE ON pdu WHEN new.m_type=128  AND new.msg_box=4  AND old.msg_box!=4 BEGIN   INSERT INTO pending_msgs    (proto_type,     msg_id,     msg_type,     sim_slot2,     err_type,     err_code,     retry_index,     due_time)   VALUES     (1,      new._id,      new.m_type,      new.sim_slot,0,0,0,0);END;"

    .line 2587
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS pdu_update_thread_read_on_update"

    .line 2611
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER pdu_update_thread_read_on_update AFTER  UPDATE OF read  ON pdu   WHEN new.m_type=132    OR new.m_type=130    OR new.m_type=128 BEGIN   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM pdu          WHERE read = 0            AND thread_id = threads._id             AND (m_type=132 OR m_type=130 OR m_type=128))       WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id;    UPDATE threads SET unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id           AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id           AND wpm.read = 0) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id            AND pdu.read = 0            AND (m_type = 128 OR m_type = 132 OR m_type = 130)           AND msg_box = 1)   WHERE threads._id = new.thread_id; END;"

    .line 2612
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS update_threads_error_on_delete_mms"

    .line 2622
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER update_threads_error_on_delete_mms   BEFORE DELETE ON pdu  WHEN OLD._id IN (SELECT DISTINCT msg_id                   FROM pending_msgs                   WHERE err_type >= 10) BEGIN   UPDATE threads SET error = error - 1  WHERE _id = OLD.thread_id; END;"

    .line 2623
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS update_threads_error_on_move_mms"

    .line 2635
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER update_threads_error_on_move_mms   BEFORE UPDATE OF msg_box ON pdu   WHEN (OLD.msg_box = 4 AND NEW.msg_box != 4)   AND (OLD._id IN (SELECT DISTINCT msg_id                   FROM pending_msgs                   WHERE err_type >= 10)) BEGIN   UPDATE threads SET error = error - 1  WHERE _id = OLD.thread_id; END;"

    .line 2636
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS mms_words_update"

    .line 2650
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER mms_words_update AFTER UPDATE ON part BEGIN UPDATE words  SET index_text = NEW.text WHERE (source_id=NEW._id AND table_to_use=2);  END;"

    .line 2651
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS mms_words_delete"

    .line 2655
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER mms_words_delete AFTER DELETE ON part BEGIN DELETE FROM  words WHERE source_id = OLD._id AND table_to_use = 2; END;"

    .line 2656
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS pdu_update_thread_date_subject_on_update"

    .line 2661
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private createPartMidIndex(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    :try_start_0
    const-string p0, "CREATE INDEX IF NOT EXISTS partMidIndex ON part (mid)"

    .line 2351
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception p0

    .line 2353
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "got exception creating indices: "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/Exception;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "TP/MmsSmsDatabaseHelper"

    invoke-static {p1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    :goto_0
    return-void
.end method

.method private createSmsDatabaseTriggersOnUpgrade(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "CREATE TRIGGER sms_update_thread_read_on_update AFTER  UPDATE OF read  ON sms BEGIN   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM sms          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id;    UPDATE threads SET unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id           AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id           AND wpm.read = 0) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id            AND pdu.read = 0            AND (m_type = 128 OR m_type = 132 OR m_type = 130)           AND msg_box = 1)   WHERE threads._id = new.thread_id; END;"

    .line 9873
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER sms_update_thread_type_on_update AFTER  UPDATE OF type  ON sms BEGIN  UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM sms          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id;   UPDATE threads SET snippet_type = (    SELECT snippet_type FROM (      SELECT date * 1000 AS date, msg_box AS snippet_type, thread_id FROM pdu WHERE thread_id = new.thread_id      UNION       SELECT date, type AS snippet_type, thread_id FROM sms WHERE thread_id = new.thread_id)    ORDER BY date DESC LIMIT 1)  WHERE threads._id = new.thread_id; END;"

    .line 9882
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER sms_words_update AFTER UPDATE ON sms BEGIN UPDATE words  SET index_text = NEW.body WHERE (source_id=NEW._id AND table_to_use=1);  END;"

    .line 9887
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER sms_words_delete AFTER DELETE ON sms BEGIN DELETE FROM   words WHERE source_id = OLD._id AND table_to_use = 1; END;"

    .line 9891
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER update_threads_error_on_update_sms   AFTER UPDATE OF type ON sms  WHEN (OLD.type != 5 AND NEW.type = 5)    OR (OLD.type = 5 AND NEW.type != 5) BEGIN   UPDATE threads SET error =     CASE      WHEN NEW.type = 5 THEN error + 1      ELSE error - 1    END   WHERE _id = NEW.thread_id; END;"

    .line 9896
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static createSmsTableDeleteTriggers(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "createSmsTableDeleteTriggers()"

    .line 3742
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "CREATE TRIGGER IF NOT EXISTS sms_words_delete AFTER DELETE ON sms BEGIN DELETE FROM   words WHERE source_id = OLD._id AND table_to_use = 1; END;"

    .line 3743
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER IF NOT EXISTS Cmas_cleanup DELETE ON sms BEGIN   DELETE FROM cmas  WHERE sms_id=old._id;END;"

    .line 3746
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 3752
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "CREATE TRIGGER IF NOT EXISTS update_threads_message_type_on_delete_sms   AFTER DELETE ON sms  WHEN OLD.type >= 0 BEGIN "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_DELETE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "  WHERE _id = OLD.thread_id; END;"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private createSpamFilterTable(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "CREATE TABLE IF NOT EXISTS spam_filter (_id INTEGER PRIMARY KEY AUTOINCREMENT,filter_type INTEGER,enable INTEGER,filter TEXT,criteria INTEGER,using_mode INTEGER DEFAULT 0,from_address TEXT);"

    .line 3727
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private createSpamFtTable(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "CREATE TABLE IF NOT EXISTS spam_ft (_id INTEGER PRIMARY KEY AUTOINCREMENT,thread_id INTEGER,transaction_id INTEGER DEFAULT 0,bytes_transf INTEGER,file_name TEXT,file_path TEXT,file_size INTEGER DEFAULT 0,thumbnail_path TEXT,cancel_reason INTEGER,display_notification_status INTEGER DEFAULT 0,session_id TEXT,content_type TEXT,media_id INTEGER DEFAULT 0,seen INTEGER DEFAULT 0,read INTEGER DEFAULT 0,type INTEGER DEFAULT 0,address TEXT,date INTEGER,date_sent INTEGER,status INTEGER DEFAULT 0,hidden INTEGER DEFAULT 0,locked INTEGER DEFAULT 0,reject_reason INTEGER,chat_session_id TEXT,rcsdb_id INTEGER,delivered_timestamp INTEGER DEFAULT 0,remote_uri TEXT,message_type INTEGER DEFAULT 0,user_alias TEXT,displayed_counter INTEGER DEFAULT 0,reserved INTEGER DEFAULT 0,service_type INTEGER DEFAULT 0,sim_slot INTEGER DEFAULT 0,sim_imsi TEXT,recipients TEXT,delivered_count INTEGER DEFAULT 0,timedmsg_expiry INTEGER DEFAULT 0,secret_mode INTEGER DEFAULT 0,ext_info TEXT,app_id INTEGER DEFAULT 0,msg_id INTEGER DEFAULT 0,secret_message INTEGER DEFAULT 0,ft_mech INTEGER DEFAULT 0,favorite INTEGER DEFAULT 0,time_len INTEGER DEFAULT 0,using_mode INTEGER DEFAULT 0,updated_timestamp INTEGER DEFAULT 0,from_address TEXT,device_name TEXT,safe_message INTEGER DEFAULT 0,imdn_message_id TEXT,safe_image_path TEXT,spam_report INTEGER DEFAULT 0,creator TEXT,sef_type INTEGER DEFAULT 0,correlation_tag TEXT,object_id TEXT,expiry_timestamp INTEGER DEFAULT 0,cmc_prop TEXT,is_bot INTEGER DEFAULT 0,re_original_body TEXT,re_body TEXT,re_original_key TEXT,re_recipient_address TEXT,re_content_uri TEXT,re_content_type TEXT,re_file_name TEXT,re_type INTEGER DEFAULT -1,re_count_info TEXT);"

    .line 3986
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private createSpamImTable(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "CREATE TABLE IF NOT EXISTS spam_im (_id INTEGER PRIMARY KEY AUTOINCREMENT,thread_id INTEGER DEFAULT 0,transaction_id INTEGER DEFAULT 0,address TEXT,date_sent INTEGER DEFAULT 0,date INTEGER DEFAULT 0,read INTEGER DEFAULT 0,status INTEGER DEFAULT 0,type INTEGER DEFAULT 0,body TEXT,display_notification_status INTEGER DEFAULT 0,seen INTEGER DEFAULT 0,message_type INTEGER DEFAULT 0,session_id TEXT,content_type TEXT,hidden INTEGER DEFAULT 0,locked INTEGER DEFAULT 0,displayed_counter INTEGER DEFAULT 0,reserved INTEGER DEFAULT 0,imdn_message_id TEXT,rcsdb_id TEXT, user_alias TEXT,delivered_timestamp INTEGER DEFAULT 0,remote_uri TEXT,service_type INTEGER DEFAULT 0,sim_slot INTEGER DEFAULT 0,sim_imsi TEXT,recipients TEXT,sticker_id TEXT,delivered_count INTEGER DEFAULT 0,timedmsg_expiry INTEGER DEFAULT 0,secret_mode INTEGER DEFAULT 0,ext_info TEXT,app_id INTEGER DEFAULT 0,msg_id INTEGER DEFAULT 0,secret_message INTEGER DEFAULT 0,mcloud_filename TEXT,favorite INTEGER DEFAULT 0,using_mode INTEGER DEFAULT 0,updated_timestamp INTEGER DEFAULT 0,from_address TEXT,device_name TEXT,safe_message INTEGER DEFAULT 0,safe_image_path TEXT,spam_report INTEGER DEFAULT 0,creator TEXT,correlation_tag TEXT,object_id TEXT,cmc_prop TEXT,is_bot INTEGER DEFAULT 0,re_original_body TEXT,re_body TEXT,re_original_key TEXT,re_recipient_address TEXT,re_content_uri TEXT,re_content_type TEXT,re_file_name TEXT,re_type INTEGER DEFAULT -1,re_count_info TEXT);"

    .line 3922
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private createSpamMmsTables(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    .line 3366
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "CREATE TABLE IF NOT EXISTS spam_pdu (_id INTEGER PRIMARY KEY AUTOINCREMENT,thread_id INTEGER,date INTEGER,date_sent INTEGER DEFAULT 0,msg_box INTEGER,read INTEGER DEFAULT 0,m_id TEXT,sub TEXT,sub_cs INTEGER,ct_t TEXT,ct_l TEXT,exp INTEGER,m_cls TEXT,m_type INTEGER,v INTEGER,m_size INTEGER,pri INTEGER,rr INTEGER,rpt_a INTEGER,resp_st INTEGER,st INTEGER,tr_id TEXT,retr_st INTEGER,retr_txt TEXT,retr_txt_cs INTEGER,read_status INTEGER,ct_cls INTEGER,resp_txt TEXT,d_tm INTEGER,d_rpt INTEGER,locked INTEGER DEFAULT 0,"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "mms"

    .line 3398
    invoke-static {v0}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "  INTEGER DEFAULT "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "default"

    invoke-static {v0}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, ", "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "seen"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, " INTEGER DEFAULT 0,"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "creator"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " TEXT,"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "sim_slot"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "sim_imsi"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " TEXT,deletable INTEGER DEFAULT 0,hidden INTEGER DEFAULT 0,app_id INTEGER DEFAULT 0,msg_id INTEGER DEFAULT 0,callback_set INTEGER DEFAULT 0,"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "reserved"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "text_only"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " INTEGER DEFAULT 0,spam_report INTEGER DEFAULT 0,secret_mode INTEGER DEFAULT 0,safe_message INTEGER DEFAULT 0,favorite INTEGER DEFAULT 0,"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "d_rpt_st"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "rr_st"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "using_mode"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "from_address"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "device_name"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "correlation_tag"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "object_id"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "cmc_prop"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_original_body"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_body"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_original_key"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_recipient_address"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_content_uri"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_content_type"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_file_name"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_type"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, " INTEGER DEFAULT -1,"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_count_info"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, " TEXT);"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    .line 3366
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE INDEX IF NOT EXISTS spam_pduIndex1 ON spam_pdu (thread_id,locked);"

    .line 3434
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TABLE IF NOT EXISTS spam_addr (_id INTEGER PRIMARY KEY,msg_id INTEGER,contact_id INTEGER,address TEXT,type INTEGER,charset INTEGER);"

    .line 3438
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE INDEX IF NOT EXISTS spam_addrIndex1 ON spam_addr (msg_id);"

    .line 3447
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TABLE IF NOT EXISTS spam_part (_id INTEGER PRIMARY KEY AUTOINCREMENT,mid INTEGER,seq INTEGER DEFAULT 0,ct TEXT,name TEXT,chset INTEGER,cd TEXT,fn TEXT,cid TEXT,cl TEXT,ctt_s INTEGER,ctt_t TEXT,_data TEXT,text TEXT,sef_type INTEGER DEFAULT 0);"

    .line 3451
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE INDEX IF NOT EXISTS spam_partIndex1 ON spam_part (mid);"

    .line 3470
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TABLE IF NOT EXISTS spam_rate (sent_time INTEGER);"

    .line 3474
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TABLE IF NOT EXISTS spam_drm (_id INTEGER PRIMARY KEY,_data TEXT);"

    .line 3477
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private createSpamMmsTriggers(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "CREATE TRIGGER IF NOT EXISTS spam_part_cleanup DELETE ON spam_pdu BEGIN   DELETE FROM spam_part  WHERE mid=old._id;END;"

    .line 3484
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER IF NOT EXISTS spam_addr_cleanup DELETE ON spam_pdu BEGIN   DELETE FROM spam_addr  WHERE msg_id=old._id;END;"

    .line 3491
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER IF NOT EXISTS spam_cleanup_delivery_and_read_report AFTER DELETE ON spam_pdu WHEN old.m_type=128 BEGIN   DELETE FROM spam_pdu  WHERE (m_type=134    OR m_type=136)    AND m_id=old.m_id; END;"

    .line 3499
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private createSpamSmsTables(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    .line 3656
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "CREATE TABLE IF NOT EXISTS spam_sms (_id INTEGER PRIMARY KEY AUTOINCREMENT,thread_id INTEGER,address TEXT,person INTEGER,date INTEGER,date_sent INTEGER DEFAULT 0,protocol INTEGER,read INTEGER DEFAULT 0,status INTEGER DEFAULT -1,type INTEGER,reply_path_present INTEGER,subject TEXT,body TEXT,service_center TEXT,locked INTEGER DEFAULT 0,error_code INTEGER DEFAULT -1,"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "sms"

    .line 3676
    invoke-static {v0}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "  INTEGER DEFAULT "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "default"

    invoke-static {v0}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, ", creator TEXT,seen INTEGER DEFAULT 0,deletable INTEGER DEFAULT 0,"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "sim_slot"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, " INTEGER DEFAULT 0,"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "sim_imsi"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " TEXT,hidden INTEGER DEFAULT 0,group_id INTEGER,group_type INTEGER,delivery_date INTEGER,app_id INTEGER DEFAULT 0,msg_id INTEGER DEFAULT 0,callback_number TEXT,reserved INTEGER DEFAULT 0,"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "pri"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " INTEGER DEFAULT 0,teleservice_id INTEGER DEFAULT 0,link_url TEXT,svc_cmd INTEGER DEFAULT 0,svc_cmd_content TEXT,roam_pending INTEGER DEFAULT 0,spam_report INTEGER DEFAULT 0,secret_mode INTEGER DEFAULT 0,safe_message INTEGER DEFAULT 0,favorite INTEGER DEFAULT 0,"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "d_rpt_cnt"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "using_mode"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "from_address"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " TEXT,"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "announcements_subtype"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "announcements_scenario_id"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "device_name"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "correlation_tag"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "object_id"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "cmc_prop"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_original_body"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_body"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_original_key"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_recipient_address"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_content_uri"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_content_type"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_file_name"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_type"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, " INTEGER DEFAULT -1,"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_count_info"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, " TEXT);"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    .line 3656
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private createThreadIdIndex(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    :try_start_0
    const-string p0, "CREATE INDEX IF NOT EXISTS typeThreadIdIndex ON sms (type, thread_id);"

    .line 2332
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception p0

    .line 2335
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "got exception creating indices: "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/Exception;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "TP/MmsSmsDatabaseHelper"

    invoke-static {p1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    :goto_0
    return-void
.end method

.method private createThreadsMessageTypeTriggers(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 4

    .line 3250
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "CREATE TRIGGER update_threads_message_type_on_update_sms   AFTER UPDATE OF type ON sms  WHEN OLD.type != NEW.type BEGIN "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "  WHERE _id = NEW.thread_id; END;"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 3257
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "CREATE TRIGGER update_threads_message_type_on_update_pdu   AFTER UPDATE OF msg_box ON pdu  WHEN OLD.msg_box != NEW.msg_box BEGIN "

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 3265
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "CREATE TRIGGER update_threads_message_type_on_update_im   AFTER UPDATE OF type ON im  WHEN OLD.type != NEW.type BEGIN "

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_IM_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "  WHERE normal_thread_id = NEW.thread_id; END;"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 3272
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "CREATE TRIGGER update_threads_message_type_on_update_ft   AFTER UPDATE OF status ON ft  WHEN OLD.status != NEW.status BEGIN "

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v2, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_IM_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 3280
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "CREATE TRIGGER update_threads_message_type_on_update_pending_msgs   AFTER UPDATE OF err_type ON pending_msgs  WHEN OLD.err_type != NEW.err_type BEGIN "

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v2, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_TRIGGER:Ljava/lang/String;

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "  WHERE _id =   (SELECT DISTINCT thread_id    FROM pdu    WHERE _id = NEW.msg_id); END;"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 3291
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "CREATE TRIGGER update_threads_message_type_on_insert_sms   AFTER INSERT ON sms  WHEN NEW.type >= 0 BEGIN "

    invoke-virtual {p0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v3, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {p0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 3298
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "CREATE TRIGGER update_threads_message_type_on_insert_pdu   AFTER INSERT ON pdu  WHEN NEW.msg_box >= 0 BEGIN "

    invoke-virtual {p0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v3, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {p0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 3305
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "CREATE TRIGGER update_threads_message_type_on_insert_pending_msgs   AFTER INSERT ON pending_msgs  WHEN NEW.err_type >= 0 BEGIN "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_TRIGGER:Ljava/lang/String;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 3315
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "CREATE TRIGGER update_threads_message_type_on_insert_im   AFTER INSERT ON im  WHEN NEW.type >= 0 BEGIN "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_IM_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 3322
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "CREATE TRIGGER update_threads_message_type_on_insert_ft   AFTER INSERT ON ft  WHEN NEW.type >= 0 BEGIN "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_IM_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 3331
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "CREATE TRIGGER update_threads_message_type_on_delete_sms   AFTER DELETE ON sms  WHEN OLD.type >= 0 BEGIN "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_DELETE_TRIGGER:Ljava/lang/String;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "  WHERE _id = OLD.thread_id; END;"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 3338
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "CREATE TRIGGER update_threads_message_type_on_delete_pdu   AFTER DELETE ON pdu  WHEN OLD.msg_box >= 0 BEGIN "

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_DELETE_TRIGGER:Ljava/lang/String;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 3346
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "CREATE TRIGGER update_threads_message_type_on_delete_im   AFTER DELETE ON im  WHEN OLD.type >= 0 BEGIN "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_IM_THREADS_ON_DELETE_TRIGGER:Ljava/lang/String;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "  WHERE normal_thread_id = OLD.thread_id; END;"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 3353
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "CREATE TRIGGER update_threads_message_type_on_delete_ft   AFTER DELETE ON ft  WHEN OLD.type >= 0 BEGIN "

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_IM_THREADS_ON_DELETE_TRIGGER:Ljava/lang/String;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private createThreadsSafeMessageTriggers(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "sms"

    const-string v1, "safe_message"

    .line 3092
    invoke-direct {p0, p1, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    const-string v0, "pdu"

    .line 3093
    invoke-direct {p0, p1, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    const-string v0, "threads"

    .line 3094
    invoke-direct {p0, p1, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_0

    const-string p0, "DROP TRIGGER IF EXISTS pdu_update_thread_safe_message_on_insert;"

    .line 3096
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER pdu_update_thread_safe_message_on_insert AFTER INSERT ON pdu   WHEN new.m_type=132    OR new.m_type=130    OR new.m_type=128 BEGIN  UPDATE threads SET    safe_message = new.safe_message  WHERE threads._id = new.thread_id; END;"

    .line 3097
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS pdu_update_thread_safe_message_on_update;"

    .line 3103
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER pdu_update_thread_safe_message_on_update AFTER  UPDATE OF date, sub, safe_message  ON pdu   WHEN new.m_type=132    OR new.m_type=130    OR new.m_type=128 BEGIN  UPDATE threads SET    safe_message = new.safe_message  WHERE threads._id = new.thread_id; END;"

    .line 3104
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS pdu_update_thread_safe_message_on_delete;"

    .line 3111
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER pdu_update_thread_safe_message_on_delete AFTER DELETE ON pdu BEGIN   UPDATE threads SET safe_message =    (SELECT safe_message FROM     (SELECT date * 1000 AS date, safe_message, thread_id FROM pdu      UNION SELECT date, safe_message, thread_id FROM sms)    WHERE thread_id = OLD.thread_id ORDER BY date DESC LIMIT 1)   WHERE threads._id = OLD.thread_id; END;"

    .line 3112
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS sms_update_thread_safe_message_on_insert;"

    .line 3119
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER sms_update_thread_safe_message_on_insert AFTER INSERT ON sms BEGIN  UPDATE threads SET    safe_message = new.safe_message  WHERE threads._id = new.thread_id  AND (new.reserved = 0 OR (new.reserved = 1 AND new.type = 3)); END;"

    .line 3120
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS sms_update_thread_safe_message_on_update;"

    .line 3123
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER sms_update_thread_safe_message_on_update AFTER  UPDATE OF body, date, safe_message  ON sms BEGIN  UPDATE threads SET    safe_message = new.safe_message  WHERE threads._id = new.thread_id; END;"

    .line 3124
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :cond_0
    return-void
.end method

.method private createThreadsSnippetTriggers(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "DROP TRIGGER IF EXISTS pdu_update_thread_on_insert;"

    .line 3021
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER pdu_update_thread_on_insert AFTER INSERT ON pdu   WHEN new.m_type=132    OR new.m_type=130    OR new.m_type=128 BEGIN  UPDATE threads SET    date = new.date * 1000,     snippet = substr(new.sub,1,500),     snippet_cs = new.sub_cs,    snippet_type = new.msg_box  WHERE threads._id = new.thread_id;   UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM pdu          WHERE read = 0            AND thread_id = threads._id             AND (m_type=132 OR m_type=130 OR m_type=128))       WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; END;"

    .line 3022
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS sms_update_thread_on_insert;"

    .line 3028
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER sms_update_thread_on_insert AFTER INSERT ON sms BEGIN  UPDATE threads SET    date = new.date,     snippet = substr(new.body,1,300),     snippet_cs = 0,    snippet_type = new.type  WHERE threads._id = new.thread_id  AND (new.reserved = 0 OR (new.reserved = 1 AND new.type = 3));   UPDATE threads SET date = NULL        WHERE (threads._id = new.thread_id)           AND new.reserved > 0           AND 1 = (SELECT COUNT(sms._id) FROM sms WHERE thread_id = new.thread_id)           AND 0 = (SELECT COUNT(wpm._id) FROM wpm WHERE thread_id = new.thread_id)           AND 0 = (SELECT COUNT(pdu._id) FROM pdu WHERE thread_id = new.thread_id AND (m_type=132 OR m_type=130 OR m_type=128));   UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM sms          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; END;"

    .line 3029
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS im_update_thread_on_insert;"

    .line 3034
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER im_update_thread_on_insert AFTER INSERT ON im BEGIN  UPDATE im_threads SET    date = new.date,    snippet =        CASE            WHEN new.display_notification_status = 22 THEN \'/#UnreadTimedMsg@/\'           WHEN new.message_type >= 105 and new.body is NULL  THEN \'/#Sticker@/\'           WHEN new.service_type = 1 and new.content_type = \'107\'  THEN \'/#Sticker@/\'           WHEN new.secret_message = 1  THEN \'/#RcsSecretMessage@/\'           ELSE substr(new.body ,1,300)        END     , snippet_cs = 0    , snippet_type = new.type  WHERE (im_threads.normal_thread_id = new.thread_id         AND new.message_type NOT IN (1,2,3,4,8,9,10,11,12,13) AND new.reserved = 0 AND new.hidden = 0);  UPDATE im_threads SET message_count =      (SELECT COUNT(im._id) FROM im LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id       AND im.type != 3 ) +      (SELECT COUNT(ft._id) FROM ft LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id      ) , unread_count =        (SELECT count(*) FROM im LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND im.read = 0 AND im.type = 1) +        (SELECT count(*) FROM ft LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND ft.read = 0 AND ft.type = 1)   WHERE im_threads.normal_thread_id = new.thread_id;   UPDATE im_threads SET read =     CASE (SELECT COUNT(*)          FROM im          WHERE read = 0            AND thread_id = im_threads.normal_thread_id)      WHEN 0 THEN 1      ELSE 0    END  WHERE im_threads.normal_thread_id = new.thread_id; END;"

    .line 3035
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS im_update_thread_on_update;"

    .line 3038
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER im_update_thread_on_update AFTER  UPDATE OF date  ON im BEGIN  UPDATE im_threads SET    date = new.date,    snippet =        CASE            WHEN new.display_notification_status = 22 THEN \'/#UnreadTimedMsg@/\'           WHEN new.message_type >= 105 and new.body is NULL  THEN \'/#Sticker@/\'           WHEN new.service_type = 1 and new.content_type = \'107\'  THEN \'/#Sticker@/\'           WHEN new.secret_message = 1  THEN \'/#RcsSecretMessage@/\'           ELSE substr(new.body ,1,300)        END     , snippet_cs = 0    , snippet_type = new.type  WHERE (im_threads.normal_thread_id = new.thread_id         AND new.message_type NOT IN (1,2,3,4,8,9,10,11,12,13) AND new.reserved = 0 AND new.hidden = 0);  UPDATE im_threads SET message_count =      (SELECT COUNT(im._id) FROM im LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id       AND im.type != 3 ) +      (SELECT COUNT(ft._id) FROM ft LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id      ) , unread_count =        (SELECT count(*) FROM im LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND im.read = 0 AND im.type = 1) +        (SELECT count(*) FROM ft LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND ft.read = 0 AND ft.type = 1)   WHERE im_threads.normal_thread_id = new.thread_id;   UPDATE im_threads SET read =     CASE (SELECT COUNT(*)          FROM im          WHERE read = 0            AND thread_id = im_threads.normal_thread_id)      WHEN 0 THEN 1      ELSE 0    END  WHERE im_threads.normal_thread_id = new.thread_id; END;"

    .line 3039
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS ft_update_thread_on_insert;"

    .line 3043
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER ft_update_thread_on_insert AFTER INSERT ON ft BEGIN  UPDATE im_threads SET    date = new.date,    snippet =        CASE            WHEN (new.message_type = 80 or new.message_type = 81)  THEN \'/#EasyShare@/\'           WHEN new.display_notification_status = 22 THEN \'/#UnreadTimedMsg@/\'           WHEN new.secret_message = 1  THEN \'/#RcsSecretMessage@/\'           ELSE new.file_name       END    , snippet_cs = 0   , snippet_type = new.type  WHERE im_threads.normal_thread_id = new.thread_id AND new.reserved = 0 AND new.hidden = 0;  UPDATE im_threads SET message_count =      (SELECT COUNT(im._id) FROM im LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id       AND im.type != 3 ) +      (SELECT COUNT(ft._id) FROM ft LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id      ) , unread_count =        (SELECT count(*) FROM im LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND im.read = 0 AND im.type = 1) +        (SELECT count(*) FROM ft LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND ft.read = 0 AND ft.type = 1)   WHERE im_threads.normal_thread_id = new.thread_id;   UPDATE im_threads SET read =     CASE (SELECT COUNT(*)          FROM ft          WHERE read = 0            AND thread_id = im_threads.normal_thread_id)      WHEN 0 THEN 1      ELSE 0    END  WHERE im_threads.normal_thread_id = new.thread_id; END;"

    .line 3044
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS pdu_update_thread_date_on_update;"

    .line 3049
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER pdu_update_thread_date_on_update AFTER  UPDATE OF date, sub  ON pdu   WHEN new.m_type=132    OR new.m_type=130    OR new.m_type=128 BEGIN  UPDATE threads SET    date = new.date * 1000,     snippet = substr(new.sub,1,500),     snippet_cs = new.sub_cs,    snippet_type = new.msg_box  WHERE threads._id = new.thread_id; END;"

    .line 3050
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS sms_update_thread_date_on_update;"

    .line 3056
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER sms_update_thread_date_on_update AFTER  UPDATE OF body, date  ON sms BEGIN  UPDATE threads SET    date = new.date,     snippet = substr(new.body,1,300),     snippet_cs = 0,    snippet_type = new.type  WHERE threads._id = new.thread_id; END;"

    .line 3057
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS pdu_update_thread_on_delete;"

    .line 3063
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER pdu_update_thread_on_delete AFTER DELETE ON pdu BEGIN   UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = old.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = old.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = old.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3)    , unread_count =    (SELECT count(*) FROM sms LEFT JOIN threads    ON threads._id = thread_id   WHERE thread_id = old.thread_id   AND sms.read = 0 AND sms.type = 1) +    (SELECT count(*) FROM wpm LEFT JOIN threads    ON threads._id = thread_id   WHERE thread_id = old.thread_id   AND wpm.read = 0) +    (SELECT count(*) FROM pdu LEFT JOIN threads    ON threads._id = thread_id   WHERE thread_id = old.thread_id    AND pdu.read = 0    AND (m_type = 128 OR m_type = 132 OR m_type = 130)   AND msg_box = 1)   WHERE threads._id = old.thread_id;   UPDATE threads SET snippet =    (SELECT substr(snippet,1,300) FROM     (SELECT date * 1000 AS date, sub AS snippet, sub_cs AS snippet_cs, thread_id FROM pdu WHERE thread_id = OLD.thread_id      UNION SELECT date, body AS snippet, 0 AS snippet_cs, thread_id FROM sms WHERE thread_id = OLD.thread_id)    ORDER BY date DESC LIMIT 1)   WHERE threads._id = OLD.thread_id;   UPDATE threads SET snippet_cs =    (SELECT snippet_cs FROM     (SELECT date * 1000 AS date, sub AS snippet, sub_cs AS snippet_cs, thread_id FROM pdu WHERE thread_id = OLD.thread_id      UNION SELECT date, body AS snippet, 0 AS snippet_cs, thread_id FROM sms WHERE thread_id = OLD.thread_id)    ORDER BY date DESC LIMIT 1)   WHERE threads._id = OLD.thread_id;   UPDATE threads SET snippet_type =    (SELECT snippet_type FROM     (SELECT date * 1000 AS date, sub AS snippet, sub_cs AS snippet_cs, thread_id, msg_box AS snippet_type FROM pdu WHERE thread_id = OLD.thread_id      UNION SELECT date, body AS snippet, 0 AS snippet_cs, thread_id, type AS snippet_type FROM sms WHERE thread_id = OLD.thread_id)    ORDER BY date DESC LIMIT 1)   WHERE threads._id = OLD.thread_id; END;"

    .line 3064
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS wpm_update_thread_on_insert;"

    .line 3077
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER wpm_update_thread_on_insert AFTER INSERT ON wpm BEGIN  UPDATE threads SET    date = new.date,     snippet = substr(new.body,1,300),     snippet_cs = 0,    snippet_type = 1  WHERE threads._id = new.thread_id;   UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM wpm          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; END;"

    .line 3078
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS wpm_update_thread_date_on_update;"

    .line 3082
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER wpm_update_thread_date_on_update AFTER  UPDATE OF date, body  ON wpm BEGIN  UPDATE threads SET    date = new.date,     snippet = substr(new.body,1,300),     snippet_cs = 0,    snippet_type = 1  WHERE threads._id = new.thread_id; END;"

    .line 3083
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private createThreadsView(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "CREATE VIEW IF NOT EXISTS view_threads AS SELECT * FROM threads WHERE bin_status!=1;"

    .line 4129
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static createTriggerDeleteOnSpamPdu(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string v0, "CREATE TRIGGER IF NOT EXISTS spam_part_cleanup DELETE ON spam_pdu BEGIN   DELETE FROM spam_part  WHERE mid=old._id;END;"

    .line 3513
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER IF NOT EXISTS spam_addr_cleanup DELETE ON spam_pdu BEGIN   DELETE FROM spam_addr  WHERE msg_id=old._id;END;"

    .line 3520
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static createTriggersDeleteOnImFt(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "createTriggersDeleteOnImFt()"

    .line 4147
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 4148
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "CREATE TRIGGER IF NOT EXISTS update_threads_message_type_on_delete_im   AFTER DELETE ON im  WHEN OLD.type >= 0 BEGIN "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_IM_THREADS_ON_DELETE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "  WHERE normal_thread_id = OLD.thread_id; END;"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 4154
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "CREATE TRIGGER IF NOT EXISTS update_threads_message_type_on_delete_ft   AFTER DELETE ON ft  WHEN OLD.type >= 0 BEGIN "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v2, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_IM_THREADS_ON_DELETE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static createTriggersDeleteOnPdu(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "createTriggersDeleteOnPdu()"

    .line 3553
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "CREATE TRIGGER IF NOT EXISTS pdu_update_thread_on_delete AFTER DELETE ON pdu BEGIN   UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = old.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = old.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = old.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3)    , unread_count =    (SELECT count(*) FROM sms LEFT JOIN threads    ON threads._id = thread_id   WHERE thread_id = old.thread_id   AND sms.read = 0 AND sms.type = 1) +    (SELECT count(*) FROM wpm LEFT JOIN threads    ON threads._id = thread_id   WHERE thread_id = old.thread_id   AND wpm.read = 0) +    (SELECT count(*) FROM pdu LEFT JOIN threads    ON threads._id = thread_id   WHERE thread_id = old.thread_id    AND pdu.read = 0    AND (m_type = 128 OR m_type = 132 OR m_type = 130)   AND msg_box = 1)   WHERE threads._id = old.thread_id;   UPDATE threads SET snippet =    (SELECT substr(snippet,1,300) FROM     (SELECT date * 1000 AS date, sub AS snippet, sub_cs AS snippet_cs, thread_id FROM pdu WHERE thread_id = OLD.thread_id      UNION SELECT date, body AS snippet, 0 AS snippet_cs, thread_id FROM sms WHERE thread_id = OLD.thread_id)    ORDER BY date DESC LIMIT 1)   WHERE threads._id = OLD.thread_id;   UPDATE threads SET snippet_cs =    (SELECT snippet_cs FROM     (SELECT date * 1000 AS date, sub AS snippet, sub_cs AS snippet_cs, thread_id FROM pdu WHERE thread_id = OLD.thread_id      UNION SELECT date, body AS snippet, 0 AS snippet_cs, thread_id FROM sms WHERE thread_id = OLD.thread_id)    ORDER BY date DESC LIMIT 1)   WHERE threads._id = OLD.thread_id;   UPDATE threads SET snippet_type =    (SELECT snippet_type FROM     (SELECT date * 1000 AS date, sub AS snippet, sub_cs AS snippet_cs, thread_id, msg_box AS snippet_type FROM pdu WHERE thread_id = OLD.thread_id      UNION SELECT date, body AS snippet, 0 AS snippet_cs, thread_id, type AS snippet_type FROM sms WHERE thread_id = OLD.thread_id)    ORDER BY date DESC LIMIT 1)   WHERE threads._id = OLD.thread_id; END;"

    .line 3554
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER IF NOT EXISTS pdu_update_thread_safe_message_on_delete AFTER DELETE ON pdu BEGIN   UPDATE threads SET safe_message =    (SELECT safe_message FROM     (SELECT date * 1000 AS date, safe_message, thread_id FROM pdu      UNION SELECT date, safe_message, thread_id FROM sms)    WHERE thread_id = OLD.thread_id ORDER BY date DESC LIMIT 1)   WHERE threads._id = OLD.thread_id; END;"

    .line 3565
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER IF NOT EXISTS update_threads_error_on_delete_mms   BEFORE DELETE ON pdu  WHEN OLD._id IN (SELECT DISTINCT msg_id                   FROM pending_msgs                   WHERE err_type >= 10) BEGIN   UPDATE threads SET error = error - 1  WHERE _id = OLD.thread_id; END;"

    .line 3570
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 3579
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "CREATE TRIGGER IF NOT EXISTS update_threads_message_type_on_delete_pdu   AFTER DELETE ON pdu  WHEN OLD.msg_box >= 0 BEGIN "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_DELETE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "  WHERE _id = OLD.thread_id; END;"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER IF NOT EXISTS part_cleanup DELETE ON pdu BEGIN   DELETE FROM part  WHERE mid=old._id;END;"

    .line 3585
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER IF NOT EXISTS addr_cleanup DELETE ON pdu BEGIN   DELETE FROM addr  WHERE msg_id=old._id;END;"

    .line 3590
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER IF NOT EXISTS update_threads_on_delete_part  AFTER DELETE ON part  WHEN old.ct != \'text/plain\' AND old.ct != \'application/smil\'  BEGIN   UPDATE threads SET has_attachment =    CASE     (SELECT COUNT(*) FROM part JOIN pdu      WHERE pdu.thread_id = threads._id      AND part.ct != \'text/plain\' AND part.ct != \'application/smil\'      AND part.mid = pdu._id)   WHEN 0 THEN 0    ELSE 1    END   WHERE _id IN    (SELECT DISTINCT pdu.thread_id FROM part JOIN pdu ON pdu._id=part.mid       WHERE pdu._id=old.mid );  END"

    .line 3595
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER IF NOT EXISTS mms_words_delete AFTER DELETE ON part BEGIN DELETE FROM  words WHERE source_id = OLD._id AND table_to_use = 2; END;"

    .line 3596
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static createTriggersRestoreFt(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "DROP TRIGGER IF EXISTS ft_update_thread_on_insert;"

    .line 4341
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER ft_update_thread_on_insert AFTER INSERT ON ft BEGIN  UPDATE im_threads SET    date = new.date,    snippet =        CASE            WHEN (new.message_type = 80 or new.message_type = 81)  THEN \'/#EasyShare@/\'           WHEN new.display_notification_status = 22 THEN \'/#UnreadTimedMsg@/\'           WHEN new.secret_message = 1  THEN \'/#RcsSecretMessage@/\'           ELSE new.file_name       END    , snippet_cs = 0   , snippet_type = new.type  WHERE im_threads.normal_thread_id = new.thread_id AND new.reserved = 0 AND new.hidden = 0;  UPDATE im_threads SET message_count =      (SELECT COUNT(im._id) FROM im LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id       AND im.type != 3 ) +      (SELECT COUNT(ft._id) FROM ft LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id      ) , unread_count =        (SELECT count(*) FROM im LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND im.read = 0 AND im.type = 1) +        (SELECT count(*) FROM ft LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND ft.read = 0 AND ft.type = 1)   WHERE im_threads.normal_thread_id = new.thread_id;   UPDATE im_threads SET read =     CASE (SELECT COUNT(*)          FROM ft          WHERE read = 0            AND thread_id = im_threads.normal_thread_id)      WHEN 0 THEN 1      ELSE 0    END  WHERE im_threads.normal_thread_id = new.thread_id; END;"

    .line 4342
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS update_threads_message_type_on_insert_ft;"

    .line 4345
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 4346
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "CREATE TRIGGER update_threads_message_type_on_insert_ft   AFTER INSERT ON ft  WHEN NEW.type >= 0 BEGIN "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_IM_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "  WHERE normal_thread_id = NEW.thread_id; END;"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static createTriggersRestoreIm(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "DROP TRIGGER IF EXISTS im_update_thread_on_insert;"

    .line 4322
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER im_update_thread_on_insert AFTER INSERT ON im BEGIN  UPDATE im_threads SET    date = new.date,    snippet =        CASE            WHEN new.display_notification_status = 22 THEN \'/#UnreadTimedMsg@/\'           WHEN new.message_type >= 105 and new.body is NULL  THEN \'/#Sticker@/\'           WHEN new.service_type = 1 and new.content_type = \'107\'  THEN \'/#Sticker@/\'           WHEN new.secret_message = 1  THEN \'/#RcsSecretMessage@/\'           ELSE substr(new.body ,1,300)        END     , snippet_cs = 0    , snippet_type = new.type  WHERE (im_threads.normal_thread_id = new.thread_id         AND new.message_type NOT IN (1,2,3,4,8,9,10,11,12,13) AND new.reserved = 0 AND new.hidden = 0);  UPDATE im_threads SET message_count =      (SELECT COUNT(im._id) FROM im LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id       AND im.type != 3 ) +      (SELECT COUNT(ft._id) FROM ft LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id      ) , unread_count =        (SELECT count(*) FROM im LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND im.read = 0 AND im.type = 1) +        (SELECT count(*) FROM ft LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND ft.read = 0 AND ft.type = 1)   WHERE im_threads.normal_thread_id = new.thread_id;   UPDATE im_threads SET read =     CASE (SELECT COUNT(*)          FROM im          WHERE read = 0            AND thread_id = im_threads.normal_thread_id)      WHEN 0 THEN 1      ELSE 0    END  WHERE im_threads.normal_thread_id = new.thread_id; END;"

    .line 4323
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS update_threads_message_type_on_insert_im;"

    .line 4326
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 4327
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "CREATE TRIGGER update_threads_message_type_on_insert_im   AFTER INSERT ON im  WHEN NEW.type >= 0 BEGIN "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_IM_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "  WHERE normal_thread_id = NEW.thread_id; END;"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static createTriggersRestoreMms(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "DROP TRIGGER IF EXISTS pdu_update_thread_safe_message_on_insert;"

    .line 4230
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER pdu_update_thread_safe_message_on_insert AFTER INSERT ON pdu   WHEN new.m_type=132    OR new.m_type=130    OR new.m_type=128 BEGIN  UPDATE threads SET    safe_message = new.safe_message  WHERE threads._id = new.thread_id; END;"

    .line 4231
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS insert_mms_pending_on_insert"

    .line 4235
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER insert_mms_pending_on_insert AFTER INSERT ON pdu WHEN new.m_type=130  OR new.m_type=135 BEGIN   INSERT INTO pending_msgs    (proto_type,     msg_id,     msg_type,     sim_slot2,     err_type,     err_code,     retry_index,     due_time)   VALUES     (1,      new._id,      new.m_type,      new.sim_slot,0,0,0,0);END;"

    .line 4236
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS pdu_update_thread_on_insert;"

    .line 4258
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER pdu_update_thread_on_insert AFTER INSERT ON pdu   WHEN new.m_type=132    OR new.m_type=130    OR new.m_type=128 BEGIN  UPDATE threads SET    date = new.date * 1000,     snippet = substr(new.sub,1,500),     snippet_cs = new.sub_cs,    snippet_type = new.msg_box  WHERE threads._id = new.thread_id;   UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM pdu          WHERE read = 0            AND thread_id = threads._id             AND (m_type=132 OR m_type=130 OR m_type=128))       WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; END;"

    .line 4259
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS update_threads_message_type_on_insert_pdu;"

    .line 4264
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 4265
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "CREATE TRIGGER update_threads_message_type_on_insert_pdu   AFTER INSERT ON pdu  WHEN NEW.msg_box >= 0 BEGIN "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "  WHERE _id = NEW.thread_id; END;"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static createTriggersRestorePart(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string v0, "DROP TRIGGER IF EXISTS update_threads_on_insert_part"

    .line 4278
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER update_threads_on_insert_part  AFTER INSERT ON part  WHEN new.ct != \'text/plain\' AND new.ct != \'application/smil\'  BEGIN   UPDATE threads SET has_attachment=1 WHERE _id IN    (SELECT pdu.thread_id FROM part JOIN pdu ON pdu._id=part.mid      WHERE part._id=new._id LIMIT 1);  END"

    .line 4279
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static createTriggersRestoreSms(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "DROP TRIGGER IF EXISTS update_threads_message_type_on_insert_sms;"

    .line 4205
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 4206
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "CREATE TRIGGER update_threads_message_type_on_insert_sms   AFTER INSERT ON sms  WHEN NEW.type >= 0 BEGIN "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "  WHERE _id = NEW.thread_id; END;"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS sms_update_thread_on_insert;"

    .line 4213
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER sms_update_thread_on_insert AFTER INSERT ON sms BEGIN  UPDATE threads SET    date = new.date,     snippet = substr(new.body,1,300),     snippet_cs = 0,    snippet_type = new.type  WHERE threads._id = new.thread_id  AND (new.reserved = 0 OR (new.reserved = 1 AND new.type = 3));   UPDATE threads SET date = NULL        WHERE (threads._id = new.thread_id)           AND new.reserved > 0           AND 1 = (SELECT COUNT(sms._id) FROM sms WHERE thread_id = new.thread_id)           AND 0 = (SELECT COUNT(wpm._id) FROM wpm WHERE thread_id = new.thread_id)           AND 0 = (SELECT COUNT(pdu._id) FROM pdu WHERE thread_id = new.thread_id AND (m_type=132 OR m_type=130 OR m_type=128));   UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM sms          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; END;"

    .line 4214
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS sms_update_thread_safe_message_on_insert;"

    .line 4217
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER sms_update_thread_safe_message_on_insert AFTER INSERT ON sms BEGIN  UPDATE threads SET    safe_message = new.safe_message  WHERE threads._id = new.thread_id  AND (new.reserved = 0 OR (new.reserved = 1 AND new.type = 3)); END;"

    .line 4218
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static createTriggersRestoreSpamMms(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string v0, "DROP TRIGGER IF EXISTS spam_part_cleanup;"

    .line 4289
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER IF NOT EXISTS spam_part_cleanup DELETE ON spam_pdu BEGIN   DELETE FROM spam_part  WHERE mid=old._id;END;"

    .line 4290
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS spam_addr_cleanup;"

    .line 4296
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER IF NOT EXISTS spam_addr_cleanup DELETE ON spam_pdu BEGIN   DELETE FROM spam_addr  WHERE msg_id=old._id;END;"

    .line 4297
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS spam_cleanup_delivery_and_read_report;"

    .line 4303
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER IF NOT EXISTS spam_cleanup_delivery_and_read_report AFTER DELETE ON spam_pdu WHEN old.m_type=128 BEGIN   DELETE FROM spam_pdu  WHERE (m_type=134    OR m_type=136)    AND m_id=old.m_id; END;"

    .line 4304
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static createTriggersSpamRestoreByMessageType(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)V
    .locals 1

    const-string v0, "SMS"

    .line 4181
    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 4182
    invoke-static {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createTriggersRestoreSms(Landroid/database/sqlite/SQLiteDatabase;)V

    goto :goto_0

    :cond_0
    const-string v0, "MMS"

    .line 4183
    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 4184
    invoke-static {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createTriggersRestoreMms(Landroid/database/sqlite/SQLiteDatabase;)V

    goto :goto_0

    :cond_1
    const-string v0, "PART"

    .line 4185
    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 4186
    invoke-static {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createTriggersRestorePart(Landroid/database/sqlite/SQLiteDatabase;)V

    goto :goto_0

    :cond_2
    const-string v0, "SPAM_MMS"

    .line 4187
    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 4188
    invoke-static {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createTriggersRestoreSpamMms(Landroid/database/sqlite/SQLiteDatabase;)V

    goto :goto_0

    :cond_3
    const-string v0, "CHAT"

    .line 4189
    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_4

    .line 4190
    invoke-static {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createTriggersRestoreIm(Landroid/database/sqlite/SQLiteDatabase;)V

    goto :goto_0

    :cond_4
    const-string v0, "FT"

    .line 4191
    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_5

    .line 4192
    invoke-static {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createTriggersRestoreFt(Landroid/database/sqlite/SQLiteDatabase;)V

    goto :goto_0

    .line 4194
    :cond_5
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "createTriggersSpamRestoreByMessageType() messageType = "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "TP/MmsSmsDatabaseHelper"

    invoke-static {p1, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    :goto_0
    return-void
.end method

.method public static createTriggersUpdateConversation(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "createTriggersUpdateConversation()"

    .line 3608
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "CREATE TRIGGER IF NOT EXISTS sms_update_thread_read_on_update AFTER  UPDATE OF read  ON sms BEGIN   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM sms          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id;    UPDATE threads SET unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id           AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id           AND wpm.read = 0) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id            AND pdu.read = 0            AND (m_type = 128 OR m_type = 132 OR m_type = 130)           AND msg_box = 1)   WHERE threads._id = new.thread_id; END;"

    .line 3610
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER pdu_update_thread_read_on_update AFTER  UPDATE OF read  ON pdu   WHEN new.m_type=132    OR new.m_type=130    OR new.m_type=128 BEGIN   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM pdu          WHERE read = 0            AND thread_id = threads._id             AND (m_type=132 OR m_type=130 OR m_type=128))       WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id;    UPDATE threads SET unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id           AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id           AND wpm.read = 0) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id            AND pdu.read = 0            AND (m_type = 128 OR m_type = 132 OR m_type = 130)           AND msg_box = 1)   WHERE threads._id = new.thread_id; END;"

    .line 3617
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static createTriggersUpdateIntegratedConversation(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "createTriggersUpdateIntegratedConversation()"

    .line 3636
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 3637
    invoke-static {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createTriggersUpdateConversation(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string v0, "CREATE TRIGGER IF NOT EXISTS im_update_thread_read_on_update AFTER  UPDATE OF read  ON im BEGIN   UPDATE im_threads SET read =     CASE (SELECT COUNT(*)          FROM im          WHERE read = 0            AND thread_id = im_threads.normal_thread_id)      WHEN 0 THEN 1      ELSE 0    END  WHERE im_threads.normal_thread_id = new.thread_id;    UPDATE im_threads SET unread_count =        (SELECT count(*) FROM im LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id           AND im.read = 0 AND im.type = 1) +        (SELECT count(*) FROM ft LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id           AND ft.read = 0 AND ft.type = 1)   WHERE im_threads.normal_thread_id = new.thread_id; END;"

    .line 3639
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER IF NOT EXISTS ft_update_im_thread_read_on_update AFTER  UPDATE OF read  ON ft BEGIN   UPDATE im_threads SET read =     CASE (SELECT COUNT(*)          FROM ft          WHERE read = 0            AND thread_id = im_threads.normal_thread_id)      WHEN 0 THEN 1      ELSE 0    END  WHERE im_threads.normal_thread_id = new.thread_id;    UPDATE im_threads SET unread_count =        (SELECT count(*) FROM im LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id           AND im.read = 0 AND im.type = 1) +        (SELECT count(*) FROM ft LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id           AND ft.read = 0 AND ft.type = 1)   WHERE im_threads.normal_thread_id = new.thread_id; END;"

    .line 3645
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private createWordsTables(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    :try_start_0
    const-string v0, "CREATE VIRTUAL TABLE words USING FTS3 (_id INTEGER PRIMARY KEY, index_text TEXT, source_id INTEGER, table_to_use INTEGER);"

    .line 2303
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER sms_words_update AFTER UPDATE OF [body] ON sms BEGIN UPDATE words  SET index_text = NEW.body WHERE (source_id=NEW._id AND table_to_use=1);  END;"

    .line 2310
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER sms_words_delete AFTER DELETE ON sms BEGIN DELETE FROM   words WHERE source_id = OLD._id AND table_to_use = 1; END;"

    .line 2313
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 2316
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->populateWordsTable(Landroid/database/sqlite/SQLiteDatabase;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception p0

    .line 2318
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "got exception creating words table: "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/Exception;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "TP/MmsSmsDatabaseHelper"

    invoke-static {p1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    :goto_0
    return-void
.end method

.method private createWpmTable(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    .line 2864
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "CREATE TABLE wpm (_id INTEGER PRIMARY KEY AUTOINCREMENT,thread_id INTEGER,body TEXT,date INTEGER,date_sent INTEGER DEFAULT 0,read INTEGER DEFAULT 0,type INTEGER,locked INTEGER DEFAULT 0,href TEXT,si_id TEXT,created INTEGER,si_expires INTEGER,action INTEGER,"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "wpm"

    .line 2878
    invoke-static {v0}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "  INTEGER DEFAULT "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "default"

    invoke-static {v0}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, ", seen INTEGER DEFAULT 0,deletable INTEGER DEFAULT 0,hidden INTEGER DEFAULT 0,"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "sim_slot"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, " INTEGER DEFAULT 0,"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "sim_imsi"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " TEXT,favorite INTEGER DEFAULT 0,"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "using_mode"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "from_address"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " TEXT,"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "device_name"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " TEXT,creator TEXT,"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "correlation_tag"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "object_id"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "cmc_prop"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "bin_info"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_original_body"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_body"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_original_key"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_recipient_address"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_content_uri"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_content_type"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_file_name"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_type"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, " INTEGER DEFAULT -1,"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_count_info"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, " TEXT);"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    .line 2864
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private static deleteObsoleteMessages(Landroid/database/sqlite/SQLiteDatabase;JZ)V
    .locals 1

    if-eqz p3, :cond_0

    .line 1401
    new-instance p3, Landroid/os/Handler;

    invoke-static {}, Landroid/os/Looper;->getMainLooper()Landroid/os/Looper;

    move-result-object v0

    invoke-direct {p3, v0}, Landroid/os/Handler;-><init>(Landroid/os/Looper;)V

    .line 1402
    new-instance v0, Lcom/android/providers/telephony/-$$Lambda$MmsSmsDatabaseHelper$Dtie35YMshoX00P8QPxWGPUClcA;

    invoke-direct {v0, p0, p1, p2}, Lcom/android/providers/telephony/-$$Lambda$MmsSmsDatabaseHelper$Dtie35YMshoX00P8QPxWGPUClcA;-><init>(Landroid/database/sqlite/SQLiteDatabase;J)V

    const-wide/16 p0, 0x3e8

    invoke-virtual {p3, v0, p0, p1}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    goto :goto_0

    .line 1410
    :cond_0
    invoke-static {p0, p1, p2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->deleteObsoleteMessagesInTransaction(Landroid/database/sqlite/SQLiteDatabase;J)V

    :goto_0
    return-void
.end method

.method private static deleteObsoleteMessagesInTransaction(Landroid/database/sqlite/SQLiteDatabase;J)V
    .locals 9

    .line 1415
    invoke-virtual {p0}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 1417
    :try_start_0
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "thread_id = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1, p2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "sms"

    const/4 v2, 0x0

    .line 1418
    invoke-virtual {p0, v1, v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I

    move-result v1

    const-string v3, "cmas"

    .line 1419
    invoke-virtual {p0, v3, v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I

    move-result v3

    const-string v4, "pdu"

    .line 1420
    invoke-virtual {p0, v4, v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I

    move-result v4

    const-string v5, "wpm"

    .line 1421
    invoke-virtual {p0, v5, v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I

    move-result v5

    const-string v6, "im"

    .line 1422
    invoke-virtual {p0, v6, v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I

    move-result v6

    const-string v7, "ft"

    .line 1423
    invoke-virtual {p0, v7, v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I

    move-result v0

    add-int v2, v1, v3

    add-int/2addr v2, v4

    add-int/2addr v2, v5

    add-int/2addr v2, v6

    add-int/2addr v2, v0

    if-lez v2, :cond_0

    const-string v2, "TP/MSDH"

    .line 1427
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "deleteObsoleteMessages() threadId = "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, p1, p2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string p1, ", smsRows = "

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ", cmasRows = "

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ", pduRows = "

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ", wpmRows = "

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ", imRows = "

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ", ftRows = "

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {v2, p1}, Lcom/android/providers/telephony/Logger;->f(Ljava/lang/String;Ljava/lang/String;)V

    .line 1432
    :cond_0
    invoke-virtual {p0}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 1434
    invoke-virtual {p0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    return-void

    :catchall_0
    move-exception p1

    invoke-virtual {p0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 1435
    throw p1
.end method

.method private static deleteObsoleteThreadCategory(Landroid/database/sqlite/SQLiteDatabase;J)V
    .locals 5

    .line 1794
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "deleteObsoleteThreadCategory threadId="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1, p2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "TP/MmsSmsDatabaseHelper"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-wide/16 v2, 0x0

    cmp-long v0, p1, v2

    if-gtz v0, :cond_0

    const/4 p1, 0x0

    const-string p2, "NOT EXISTS ( SELECT 1 FROM threads  WHERE _id = thread_categories.thread_id) AND NOT EXISTS ( SELECT 1 FROM im_threads  WHERE normal_thread_id = thread_categories.thread_id)"

    goto :goto_0

    .line 1807
    :cond_0
    invoke-static {p1, p2}, Ljava/lang/String;->valueOf(J)Ljava/lang/String;

    move-result-object p1

    const/4 p2, 0x3

    new-array p2, p2, [Ljava/lang/String;

    const/4 v0, 0x0

    aput-object p1, p2, v0

    const/4 v0, 0x1

    aput-object p1, p2, v0

    const/4 v0, 0x2

    aput-object p1, p2, v0

    const-string p1, "thread_id = ? AND NOT EXISTS ( SELECT 1 FROM threads WHERE _id = ?) AND NOT EXISTS ( SELECT 1 FROM im_threads WHERE normal_thread_id = ?)"

    move-object v4, p2

    move-object p2, p1

    move-object p1, v4

    :goto_0
    const-string v0, "thread_categories"

    .line 1815
    invoke-virtual {p0, v0, p2, p1}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I

    move-result p0

    .line 1816
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string p2, "deleteObsoleteThreadCategory end deletedRows="

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v1, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method public static deleteOneFt(Landroid/database/sqlite/SQLiteDatabase;I)I
    .locals 10

    const-string v0, "thread_id"

    .line 2093
    filled-new-array {v0}, [Ljava/lang/String;

    move-result-object v3

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "_id="

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    const-string v2, "ft"

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    move-object v1, p0

    invoke-virtual/range {v1 .. v8}, Landroid/database/sqlite/SQLiteDatabase;->query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v0

    const/4 v1, -0x1

    if-eqz v0, :cond_1

    .line 2096
    invoke-interface {v0}, Landroid/database/Cursor;->moveToFirst()Z

    move-result v2

    if-eqz v2, :cond_0

    const/4 v1, 0x0

    .line 2097
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    .line 2099
    :cond_0
    invoke-interface {v0}, Landroid/database/Cursor;->close()V

    .line 2102
    :cond_1
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    const/4 v0, 0x0

    const-string v2, "ft"

    invoke-virtual {p0, v2, p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I

    move-result p1

    if-lez v1, :cond_3

    .line 2104
    sget-boolean v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sEnableCpm:Z

    if-eqz v0, :cond_2

    .line 2105
    invoke-static {v1}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v0

    invoke-static {p0, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->markImThreadToDelete(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)I

    :cond_2
    int-to-long v0, v1

    .line 2108
    invoke-static {p0, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThread(Landroid/database/sqlite/SQLiteDatabase;J)I

    :cond_3
    return p1
.end method

.method public static deleteOneIm(Landroid/database/sqlite/SQLiteDatabase;I)I
    .locals 10

    const-string v0, "thread_id"

    .line 2046
    filled-new-array {v0}, [Ljava/lang/String;

    move-result-object v3

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "_id="

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    const-string v2, "im"

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    move-object v1, p0

    invoke-virtual/range {v1 .. v8}, Landroid/database/sqlite/SQLiteDatabase;->query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v0

    const/4 v1, -0x1

    if-eqz v0, :cond_1

    .line 2049
    invoke-interface {v0}, Landroid/database/Cursor;->moveToFirst()Z

    move-result v2

    if-eqz v2, :cond_0

    const/4 v1, 0x0

    .line 2050
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    .line 2052
    :cond_0
    invoke-interface {v0}, Landroid/database/Cursor;->close()V

    .line 2055
    :cond_1
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    const/4 v0, 0x0

    const-string v2, "im"

    invoke-virtual {p0, v2, p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I

    move-result p1

    if-lez v1, :cond_3

    .line 2057
    sget-boolean v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sEnableCpm:Z

    if-eqz v0, :cond_2

    .line 2058
    invoke-static {v1}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v0

    invoke-static {p0, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->markImThreadToDelete(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)I

    :cond_2
    int-to-long v0, v1

    .line 2061
    invoke-static {p0, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThread(Landroid/database/sqlite/SQLiteDatabase;J)I

    :cond_3
    return p1
.end method

.method public static deleteOneSms(Landroid/database/sqlite/SQLiteDatabase;I)I
    .locals 10

    const-string v0, "thread_id"

    .line 1933
    filled-new-array {v0}, [Ljava/lang/String;

    move-result-object v3

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "_id="

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    const-string v2, "sms"

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    move-object v1, p0

    invoke-virtual/range {v1 .. v8}, Landroid/database/sqlite/SQLiteDatabase;->query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v0

    const/4 v1, -0x1

    if-eqz v0, :cond_1

    .line 1936
    invoke-interface {v0}, Landroid/database/Cursor;->moveToFirst()Z

    move-result v2

    if-eqz v2, :cond_0

    const/4 v1, 0x0

    .line 1937
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    .line 1939
    :cond_0
    invoke-interface {v0}, Landroid/database/Cursor;->close()V

    .line 1943
    :cond_1
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    const/4 v0, 0x0

    const-string v2, "sms"

    invoke-virtual {p0, v2, p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I

    move-result p1

    if-lez v1, :cond_2

    int-to-long v0, v1

    .line 1946
    invoke-static {p0, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThread(Landroid/database/sqlite/SQLiteDatabase;J)I

    :cond_2
    return p1
.end method

.method public static deleteOneWpm(Landroid/database/sqlite/SQLiteDatabase;I)I
    .locals 10

    const-string v0, "thread_id"

    .line 1955
    filled-new-array {v0}, [Ljava/lang/String;

    move-result-object v3

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "_id="

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    const-string v2, "wpm"

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    move-object v1, p0

    invoke-virtual/range {v1 .. v8}, Landroid/database/sqlite/SQLiteDatabase;->query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v0

    const/4 v1, -0x1

    if-eqz v0, :cond_1

    .line 1958
    invoke-interface {v0}, Landroid/database/Cursor;->moveToFirst()Z

    move-result v2

    if-eqz v2, :cond_0

    const/4 v1, 0x0

    .line 1959
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    .line 1961
    :cond_0
    invoke-interface {v0}, Landroid/database/Cursor;->close()V

    .line 1965
    :cond_1
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    const/4 v0, 0x0

    const-string v2, "wpm"

    invoke-virtual {p0, v2, p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I

    move-result p1

    if-lez v1, :cond_2

    int-to-long v0, v1

    .line 1968
    invoke-static {p0, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThread(Landroid/database/sqlite/SQLiteDatabase;J)I

    :cond_2
    return p1
.end method

.method public static deleteScheduledIm(Landroid/database/sqlite/SQLiteDatabase;I)I
    .locals 10

    const-string v0, "thread_id"

    .line 2069
    filled-new-array {v0}, [Ljava/lang/String;

    move-result-object v3

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "_id="

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    const-string v2, "im"

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    move-object v1, p0

    invoke-virtual/range {v1 .. v8}, Landroid/database/sqlite/SQLiteDatabase;->query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v0

    const/4 v1, -0x1

    if-eqz v0, :cond_1

    .line 2073
    invoke-interface {v0}, Landroid/database/Cursor;->moveToFirst()Z

    move-result v2

    if-eqz v2, :cond_0

    const/4 v1, 0x0

    .line 2074
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    .line 2076
    :cond_0
    invoke-interface {v0}, Landroid/database/Cursor;->close()V

    .line 2079
    :cond_1
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    const/4 v0, 0x0

    const-string v2, "im"

    invoke-virtual {p0, v2, p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I

    move-result p1

    if-lez v1, :cond_3

    .line 2081
    sget-boolean v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sEnableCpm:Z

    if-eqz v0, :cond_2

    .line 2082
    invoke-static {v1}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v0

    invoke-static {p0, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->markImThreadToDelete(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)I

    :cond_2
    int-to-long v0, v1

    .line 2085
    invoke-static {p0, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThread(Landroid/database/sqlite/SQLiteDatabase;J)I

    :cond_3
    return p1
.end method

.method private deleteSmsDatabaseTriggersOnUpgrade(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string v0, "Drop triggers after Onupgrade"

    .line 9860
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p0, "DROP TRIGGER IF EXISTS update_thread_on_update_sms;"

    .line 9861
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS sms_update_thread_read_on_update;"

    .line 9863
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS sms_update_thread_type_on_update;"

    .line 9864
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS sms_words_update;"

    .line 9865
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS sms_words_delete;"

    .line 9866
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS update_threads_error_on_update_sms;"

    .line 9867
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static deleteWpms(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;Ljava/util/ArrayList;)I
    .locals 11
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/database/sqlite/SQLiteDatabase;",
            "Ljava/lang/String;",
            "[",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList<",
            "Ljava/lang/Long;",
            ">;)I"
        }
    .end annotation

    const-string v0, "thread_id"

    .line 1976
    filled-new-array {v0}, [Ljava/lang/String;

    move-result-object v4

    const/4 v2, 0x1

    const-string v3, "wpm"

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    move-object v1, p0

    move-object v5, p1

    move-object v6, p2

    invoke-virtual/range {v1 .. v10}, Landroid/database/sqlite/SQLiteDatabase;->query(ZLjava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v0

    if-eqz v0, :cond_1

    .line 1987
    :goto_0
    invoke-interface {v0}, Landroid/database/Cursor;->moveToNext()Z

    move-result v1

    if-eqz v1, :cond_0

    const/4 v1, 0x0

    .line 1988
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getLong(I)J

    move-result-wide v1

    invoke-static {v1, v2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v1

    invoke-virtual {p3, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_0

    .line 1990
    :cond_0
    invoke-interface {v0}, Landroid/database/Cursor;->close()V

    :cond_1
    const-string v0, "wpm"

    .line 1994
    invoke-virtual {p0, v0, p1, p2}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I

    move-result p1

    .line 1996
    invoke-virtual {p3}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object p2

    :goto_1
    invoke-interface {p2}, Ljava/util/Iterator;->hasNext()Z

    move-result p3

    if-eqz p3, :cond_2

    invoke-interface {p2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object p3

    check-cast p3, Ljava/lang/Long;

    invoke-virtual {p3}, Ljava/lang/Long;->longValue()J

    move-result-wide v0

    .line 1997
    invoke-static {p0, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThread(Landroid/database/sqlite/SQLiteDatabase;J)I

    goto :goto_1

    :cond_2
    return p1
.end method

.method private dropAll(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "****DROPPING ALL SMS-MMS TABLES****"

    .line 6129
    invoke-static {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->localLog(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS canonical_addresses"

    .line 6130
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS threads"

    .line 6131
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS pending_msgs"

    .line 6132
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS sms"

    .line 6133
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS mychannels"

    .line 6135
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS raw"

    .line 6137
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS incomplete_lms"

    .line 6139
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS attachments"

    .line 6141
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS thread_ids"

    .line 6142
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS sr_pending"

    .line 6143
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS pdu;"

    .line 6144
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS addr;"

    .line 6145
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS part;"

    .line 6146
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS rate;"

    .line 6147
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS drm;"

    .line 6148
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS wpm"

    .line 6151
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS cmas"

    .line 6154
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS spam_sms;"

    .line 6157
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS spam_pdu;"

    .line 6158
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS spam_addr;"

    .line 6159
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS spam_part;"

    .line 6160
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS spam_rate;"

    .line 6161
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS spam_drm;"

    .line 6162
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS im_threads"

    .line 6165
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS im"

    .line 6166
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS ft"

    .line 6167
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS ft_retry"

    .line 6170
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private dropMessagesTriggersAndTable(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "DROP TRIGGER IF EXISTS messages_remove_im_thread_date_on_update;"

    .line 9069
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS messages_update_im_thread_date_on_update;"

    .line 9070
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS messages_update_thread_on_insert;"

    .line 9071
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS messages_remove_thread_date_on_update;"

    .line 9072
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS messages_update_thread_date_on_update;"

    .line 9073
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS messages_update_im_thread_on_insert;"

    .line 9074
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS delete_messages_on_delete_addr;"

    .line 9077
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS update_messages_on_update_addr;"

    .line 9078
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS insert_messages_on_insert_addr;"

    .line 9079
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS insert_messages_on_insert_ft;"

    .line 9082
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS delete_messages_on_delete_ft;"

    .line 9083
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS update_messages_on_update_ft;"

    .line 9084
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS update_messages_on_update_im;"

    .line 9087
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS delete_messages_on_delete_im;"

    .line 9088
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS insert_messages_on_insert_im;"

    .line 9089
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS insert_messages_on_insert_part;"

    .line 9092
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS update_messages_on_update_part;"

    .line 9093
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS delete_messages_on_delete_part;"

    .line 9094
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS insert_messages_on_insert_part_mid;"

    .line 9095
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS update_messages_on_update_part_mid;"

    .line 9096
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS delete_messages_on_delete_pdu;"

    .line 9099
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS insert_messages_on_insert_pdu;"

    .line 9100
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS update_messages_on_update_pdu;"

    .line 9101
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS update_messages_on_update_subject_pdu;"

    .line 9102
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS update_messages_on_delete_pending_msgs;"

    .line 9105
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS update_messages_on_insert_pending_msgs;"

    .line 9106
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS update_messages_on_update_pending_msgs;"

    .line 9107
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS insert_messages_on_insert_sms;"

    .line 9110
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS delete_messages_on_delete_sms;"

    .line 9111
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS update_messages_on_update_sms;"

    .line 9112
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS insert_messages_on_insert_wpm;"

    .line 9115
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS update_messages_on_update_wpm;"

    .line 9116
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS delete_messages_on_delete_wpm;"

    .line 9117
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS messages"

    .line 9119
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static dropSmsTableDeleteTriggers(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "dropSmsTableDeleteTriggers()"

    .line 3761
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "DROP TRIGGER IF EXISTS sms_words_delete;"

    .line 3762
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS Cmas_cleanup;"

    .line 3763
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS update_threads_message_type_on_delete_sms;"

    .line 3764
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static dropTriggerDeleteOnSpamPdu(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string v0, "DROP TRIGGER IF EXISTS spam_part_cleanup;"

    .line 3528
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS spam_addr_cleanup;"

    .line 3529
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static dropTriggersDeleteOnImFt(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "dropTriggersDeleteOnImFt()"

    .line 4141
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "DROP TRIGGER IF EXISTS update_threads_message_type_on_delete_im"

    .line 4142
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS update_threads_message_type_on_delete_ft"

    .line 4143
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static dropTriggersDeleteOnPdu(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "dropTriggersDeleteOnPdu()"

    .line 3541
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "DROP TRIGGER IF EXISTS pdu_update_thread_on_delete"

    .line 3542
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS pdu_update_thread_safe_message_on_delete"

    .line 3543
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS update_threads_error_on_delete_mms"

    .line 3544
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS update_threads_message_type_on_delete_pdu"

    .line 3545
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS part_cleanup"

    .line 3546
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS addr_cleanup"

    .line 3547
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS update_threads_on_delete_part"

    .line 3548
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS mms_words_delete"

    .line 3549
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static dropTriggersRestoreFt(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string v0, "DROP TRIGGER IF EXISTS ft_update_thread_on_insert;"

    .line 4336
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS update_threads_message_type_on_insert_ft;"

    .line 4337
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static dropTriggersRestoreIm(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string v0, "DROP TRIGGER IF EXISTS im_update_thread_on_insert;"

    .line 4317
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS update_threads_message_type_on_insert_im;"

    .line 4318
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static dropTriggersRestoreMms(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string v0, "DROP TRIGGER IF EXISTS pdu_update_thread_safe_message_on_insert;"

    .line 4223
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS insert_mms_pending_on_insert;"

    .line 4224
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS pdu_update_thread_on_insert;"

    .line 4225
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS update_threads_message_type_on_insert_pdu;"

    .line 4226
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static dropTriggersRestorePart(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string v0, "DROP TRIGGER IF EXISTS update_threads_on_insert_part"

    .line 4274
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static dropTriggersRestoreSms(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string v0, "DROP TRIGGER IF EXISTS update_threads_message_type_on_insert_sms;"

    .line 4199
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS sms_update_thread_on_insert;"

    .line 4200
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS sms_update_thread_safe_message_on_insert;"

    .line 4201
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static dropTriggersRestoreSpamMms(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string v0, "DROP TRIGGER IF EXISTS spam_part_cleanup;"

    .line 4283
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS spam_addr_cleanup;"

    .line 4284
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS spam_cleanup_delivery_and_read_report;"

    .line 4285
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static dropTriggersSpamRestoreByMessageType(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)V
    .locals 1

    const-string v0, "SMS"

    .line 4163
    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 4164
    invoke-static {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->dropTriggersRestoreSms(Landroid/database/sqlite/SQLiteDatabase;)V

    goto :goto_0

    :cond_0
    const-string v0, "MMS"

    .line 4165
    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 4166
    invoke-static {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->dropTriggersRestoreMms(Landroid/database/sqlite/SQLiteDatabase;)V

    goto :goto_0

    :cond_1
    const-string v0, "PART"

    .line 4167
    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 4168
    invoke-static {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->dropTriggersRestorePart(Landroid/database/sqlite/SQLiteDatabase;)V

    goto :goto_0

    :cond_2
    const-string v0, "SPAM_MMS"

    .line 4169
    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 4170
    invoke-static {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->dropTriggersRestoreSpamMms(Landroid/database/sqlite/SQLiteDatabase;)V

    goto :goto_0

    :cond_3
    const-string v0, "CHAT"

    .line 4171
    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_4

    .line 4172
    invoke-static {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->dropTriggersRestoreIm(Landroid/database/sqlite/SQLiteDatabase;)V

    goto :goto_0

    :cond_4
    const-string v0, "FT"

    .line 4173
    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_5

    .line 4174
    invoke-static {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->dropTriggersRestoreFt(Landroid/database/sqlite/SQLiteDatabase;)V

    goto :goto_0

    .line 4176
    :cond_5
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "dropTriggersSpamRestoreByMessageType() messageType = "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "TP/MmsSmsDatabaseHelper"

    invoke-static {p1, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    :goto_0
    return-void
.end method

.method public static dropTriggersUpdateConversation(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "dropTriggersUpdateConversation()"

    .line 3601
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "DROP TRIGGER IF EXISTS sms_update_thread_read_on_update"

    .line 3603
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS pdu_update_thread_read_on_update"

    .line 3604
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static dropTriggersUpdateIntegratedConversation(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "dropTriggersUpdateIntegratedConversation()"

    .line 3628
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 3629
    invoke-static {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->dropTriggersUpdateConversation(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string v0, "DROP TRIGGER IF EXISTS im_update_thread_read_on_update"

    .line 3631
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS ft_update_im_thread_read_on_update"

    .line 3632
    invoke-virtual {p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private fillMessagesDate(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "UPDATE threads SET message_date = date"

    .line 9911
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "UPDATE im_threads SET message_date = date"

    .line 9914
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z
    .locals 1

    .line 6498
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "pragma table_info("

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, ")"

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const/4 p2, 0x0

    invoke-virtual {p1, p0, p2}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object p0

    const/4 p1, 0x0

    if-eqz p0, :cond_2

    const-string p2, "name"

    .line 6501
    invoke-interface {p0, p2}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result p2

    .line 6505
    :cond_0
    :goto_0
    :try_start_0
    invoke-interface {p0}, Landroid/database/Cursor;->moveToNext()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 6506
    invoke-interface {p0, p2}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v0

    .line 6508
    invoke-virtual {p3, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v0, :cond_0

    const/4 p1, 0x1

    goto :goto_0

    .line 6513
    :cond_1
    invoke-interface {p0}, Landroid/database/Cursor;->close()V

    goto :goto_1

    :catchall_0
    move-exception p1

    invoke-interface {p0}, Landroid/database/Cursor;->close()V

    .line 6514
    throw p1

    :cond_2
    :goto_1
    return p1
.end method

.method public static getDatabaseVersion()I
    .locals 1

    const/16 v0, 0x19b

    return v0
.end method

.method private static declared-synchronized getDbErrorHandler(Landroid/content/Context;)Lcom/android/providers/telephony/MmsSmsDatabaseHelper$MmsSmsDatabaseErrorHandler;
    .locals 2

    const-class v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;

    monitor-enter v0

    .line 1242
    :try_start_0
    sget-object v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sDbErrorHandler:Lcom/android/providers/telephony/MmsSmsDatabaseHelper$MmsSmsDatabaseErrorHandler;

    if-nez v1, :cond_0

    .line 1243
    new-instance v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper$MmsSmsDatabaseErrorHandler;

    invoke-direct {v1, p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper$MmsSmsDatabaseErrorHandler;-><init>(Landroid/content/Context;)V

    sput-object v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sDbErrorHandler:Lcom/android/providers/telephony/MmsSmsDatabaseHelper$MmsSmsDatabaseErrorHandler;

    .line 1245
    :cond_0
    sget-object p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sDbErrorHandler:Lcom/android/providers/telephony/MmsSmsDatabaseHelper$MmsSmsDatabaseErrorHandler;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit v0

    return-object p0

    :catchall_0
    move-exception p0

    monitor-exit v0

    throw p0
.end method

.method public static declared-synchronized getInstance(Landroid/content/Context;)Lcom/android/providers/telephony/MmsSmsDatabaseHelper;
    .locals 1

    const-class v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;

    monitor-enter v0

    .line 1238
    :try_start_0
    invoke-static {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->getInstanceForCe(Landroid/content/Context;)Lcom/android/providers/telephony/MmsSmsDatabaseHelper;

    move-result-object p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit v0

    return-object p0

    :catchall_0
    move-exception p0

    monitor-exit v0

    throw p0
.end method

.method static declared-synchronized getInstanceForCe(Landroid/content/Context;)Lcom/android/providers/telephony/MmsSmsDatabaseHelper;
    .locals 3

    const-class v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;

    monitor-enter v0

    .line 1271
    :try_start_0
    sget-object v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sCeInstance:Lcom/android/providers/telephony/MmsSmsDatabaseHelper;

    if-nez v1, :cond_1

    .line 1272
    invoke-static {}, Landroid/os/storage/StorageManager;->isFileEncryptedNativeOrEmulated()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 1273
    invoke-static {p0}, Lcom/android/providers/telephony/ProviderUtil;->getCredentialEncryptedContext(Landroid/content/Context;)Landroid/content/Context;

    move-result-object p0

    .line 1274
    new-instance v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;

    invoke-static {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->getDbErrorHandler(Landroid/content/Context;)Lcom/android/providers/telephony/MmsSmsDatabaseHelper$MmsSmsDatabaseErrorHandler;

    move-result-object v2

    invoke-direct {v1, p0, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;-><init>(Landroid/content/Context;Lcom/android/providers/telephony/MmsSmsDatabaseHelper$MmsSmsDatabaseErrorHandler;)V

    sput-object v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sCeInstance:Lcom/android/providers/telephony/MmsSmsDatabaseHelper;

    goto :goto_0

    .line 1276
    :cond_0
    invoke-static {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->getInstanceForDe(Landroid/content/Context;)Lcom/android/providers/telephony/MmsSmsDatabaseHelper;

    move-result-object p0

    sput-object p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sCeInstance:Lcom/android/providers/telephony/MmsSmsDatabaseHelper;

    .line 1279
    :cond_1
    :goto_0
    sget-object p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sCeInstance:Lcom/android/providers/telephony/MmsSmsDatabaseHelper;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit v0

    return-object p0

    :catchall_0
    move-exception p0

    monitor-exit v0

    throw p0
.end method

.method static declared-synchronized getInstanceForDe(Landroid/content/Context;)Lcom/android/providers/telephony/MmsSmsDatabaseHelper;
    .locals 3

    const-class v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;

    monitor-enter v0

    .line 1259
    :try_start_0
    sget-object v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sDeInstance:Lcom/android/providers/telephony/MmsSmsDatabaseHelper;

    if-nez v1, :cond_0

    .line 1260
    invoke-static {p0}, Lcom/android/providers/telephony/ProviderUtil;->getDeviceEncryptedContext(Landroid/content/Context;)Landroid/content/Context;

    move-result-object p0

    .line 1261
    new-instance v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;

    invoke-static {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->getDbErrorHandler(Landroid/content/Context;)Lcom/android/providers/telephony/MmsSmsDatabaseHelper$MmsSmsDatabaseErrorHandler;

    move-result-object v2

    invoke-direct {v1, p0, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;-><init>(Landroid/content/Context;Lcom/android/providers/telephony/MmsSmsDatabaseHelper$MmsSmsDatabaseErrorHandler;)V

    sput-object v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sDeInstance:Lcom/android/providers/telephony/MmsSmsDatabaseHelper;

    .line 1263
    :cond_0
    sget-object p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sDeInstance:Lcom/android/providers/telephony/MmsSmsDatabaseHelper;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit v0

    return-object p0

    :catchall_0
    move-exception p0

    monitor-exit v0

    throw p0
.end method

.method private getNewRCSMessageType(I)I
    .locals 0

    const/4 p0, 0x5

    packed-switch p1, :pswitch_data_0

    goto :goto_0

    :pswitch_0
    const/16 p0, 0x8

    goto :goto_0

    :pswitch_1
    const/4 p0, 0x4

    goto :goto_0

    :pswitch_2
    const/4 p0, 0x3

    goto :goto_0

    :pswitch_3
    const/4 p0, 0x2

    goto :goto_0

    :pswitch_4
    const/4 p0, 0x1

    goto :goto_0

    :pswitch_5
    const/4 p0, 0x7

    goto :goto_0

    :pswitch_6
    const/4 p0, 0x6

    goto :goto_0

    :pswitch_7
    const/4 p0, 0x0

    :goto_0
    :pswitch_8
    return p0

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_7
        :pswitch_8
        :pswitch_6
        :pswitch_5
        :pswitch_4
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method private hasAutoIncrement(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)Z
    .locals 4

    .line 10087
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "SELECT sql FROM sqlite_master WHERE type=\'table\' AND name=\'"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "\'"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const/4 v0, 0x0

    .line 10089
    invoke-virtual {p1, p0, v0}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object p0

    const/4 p1, 0x0

    if-eqz p0, :cond_2

    .line 10092
    :try_start_0
    invoke-interface {p0}, Landroid/database/Cursor;->moveToFirst()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 10093
    invoke-interface {p0, p1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_0

    const-string p1, "AUTOINCREMENT"

    .line 10094
    invoke-virtual {v0, p1}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result p1

    :cond_0
    const-string v1, "TP/MmsSmsDatabaseHelper"

    .line 10095
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "[MmsSmsDb] tableName: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, " hasAutoIncrement: "

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, " result: "

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-static {v1, p2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10099
    :cond_1
    invoke-interface {p0}, Landroid/database/Cursor;->close()V

    goto :goto_0

    :catchall_0
    move-exception p1

    invoke-interface {p0}, Landroid/database/Cursor;->close()V

    .line 10100
    throw p1

    :cond_2
    :goto_0
    return p1
.end method

.method private isInitialCreateDone()Z
    .locals 2

    .line 2217
    iget-object p0, p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mContext:Landroid/content/Context;

    invoke-static {p0}, Landroid/preference/PreferenceManager;->getDefaultSharedPreferences(Landroid/content/Context;)Landroid/content/SharedPreferences;

    move-result-object p0

    const-string v0, "initial_create_done"

    const/4 v1, 0x0

    .line 2218
    invoke-interface {p0, v0, v1}, Landroid/content/SharedPreferences;->getBoolean(Ljava/lang/String;Z)Z

    move-result p0

    return p0
.end method

.method static synthetic lambda$deleteObsoleteMessages$0(Landroid/database/sqlite/SQLiteDatabase;J)V
    .locals 0

    .line 1404
    :try_start_0
    invoke-static {p0, p1, p2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->deleteObsoleteMessagesInTransaction(Landroid/database/sqlite/SQLiteDatabase;J)V
    :try_end_0
    .catch Landroid/database/sqlite/SQLiteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "deleteObsoleteMessages() : failed"

    .line 1406
    invoke-static {p0, p1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    :goto_0
    return-void
.end method

.method private static localLog(Ljava/lang/String;)V
    .locals 1

    const-string v0, "TP/MmsSmsDatabaseHelper"

    .line 2207
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 2208
    invoke-static {v0, p0}, Lcom/android/internal/telephony/PhoneFactory;->localLog(Ljava/lang/String;Ljava/lang/String;)V

    return-void
.end method

.method private static localLogWtf(Ljava/lang/String;)V
    .locals 1

    const-string v0, "TP/MmsSmsDatabaseHelper"

    .line 2212
    invoke-static {v0, p0}, Landroid/util/Log;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 2213
    invoke-static {v0, p0}, Lcom/android/internal/telephony/PhoneFactory;->localLog(Ljava/lang/String;Ljava/lang/String;)V

    return-void
.end method

.method public static markImThreadToDelete(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)I
    .locals 5

    .line 2005
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "markImThreadToDelete threadId: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "TP/MmsSmsDatabaseHelper"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 2007
    invoke-static {}, Lcom/android/providers/telephony/MmsSmsProvider;->getEnableTmbPhase2()Z

    move-result v0

    const/4 v1, 0x1

    const/4 v2, 0x0

    if-eqz v0, :cond_3

    const/4 v0, 0x2

    new-array v3, v0, [Ljava/lang/String;

    aput-object p1, v3, v2

    .line 2010
    invoke-static {v0}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v0

    aput-object v0, v3, v1

    const-string v0, "SELECT _id FROM im_threads WHERE normal_thread_id=? AND conversation_type=?"

    .line 2011
    invoke-virtual {p0, v0, v3}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v0

    if-eqz v0, :cond_2

    .line 2012
    :try_start_0
    invoke-interface {v0}, Landroid/database/Cursor;->getCount()I

    move-result v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-lez v3, :cond_2

    if-eqz v0, :cond_0

    .line 2015
    invoke-interface {v0}, Landroid/database/Cursor;->close()V

    :cond_0
    return v2

    :catchall_0
    move-exception p0

    if-eqz v0, :cond_1

    .line 2011
    :try_start_1
    invoke-interface {v0}, Landroid/database/Cursor;->close()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    goto :goto_0

    :catchall_1
    move-exception p1

    invoke-virtual {p0, p1}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    :cond_1
    :goto_0
    throw p0

    :cond_2
    if-eqz v0, :cond_3

    .line 2015
    invoke-interface {v0}, Landroid/database/Cursor;->close()V

    .line 2021
    :cond_3
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "SELECT _id, \"im\" as im_type  FROM im where thread_id="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " UNION SELECT _id, \"ft\" as im_type FROM ft where thread_id="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " UNION SELECT _id, \"bin_im\" as im_type FROM bin_im where thread_id="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " UNION SELECT _id, \"bin_ft\" as im_type FROM bin_ft where thread_id="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const/4 v3, 0x0

    .line 2026
    invoke-virtual {p0, v0, v3}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v0

    if-eqz v0, :cond_4

    .line 2028
    invoke-interface {v0}, Landroid/database/Cursor;->getCount()I

    move-result v4

    .line 2029
    invoke-interface {v0}, Landroid/database/Cursor;->close()V

    goto :goto_1

    :cond_4
    move v4, v2

    :goto_1
    if-lez v4, :cond_5

    return v2

    .line 2036
    :cond_5
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "normal_thread_id = "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 2038
    new-instance v0, Landroid/content/ContentValues;

    invoke-direct {v0, v1}, Landroid/content/ContentValues;-><init>(I)V

    const/16 v1, 0x9

    .line 2039
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v2, "im_type"

    invoke-virtual {v0, v2, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const-string v1, "im_threads"

    .line 2040
    invoke-virtual {p0, v1, v0, p1, v3}, Landroid/database/sqlite/SQLiteDatabase;->update(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I

    move-result p0

    return p0
.end method

.method private static migrateImThreadIdByNormalThreadId(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "TP/MmsSmsDatabaseHelper"

    :try_start_0
    const-string v1, "UPDATE im_threads SET _id = _id + MAX((SELECT seq FROM SQLITE_SEQUENCE WHERE name = \'im_threads\'), (SELECT MAX(normal_thread_id) FROM im_threads))"

    .line 9139
    invoke-virtual {p0, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception v1

    const-string v2, "update im_threads by max values failed!"

    .line 9145
    invoke-static {v0, v2, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    :goto_0
    :try_start_1
    const-string v1, "UPDATE im_threads SET _id = normal_thread_id"

    .line 9148
    invoke-virtual {p0, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1

    goto :goto_1

    :catch_1
    move-exception p0

    const-string v1, "update _id from im_threads by normal_thread_id failed!"

    .line 9151
    invoke-static {v0, v1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    :goto_1
    return-void
.end method

.method private moveRcsDataToImTables(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 9

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "moveRcsDataToImTables start"

    .line 9258
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "select count(*) from sqlite_master where name=\'rcs_threads\'"

    const/4 v2, 0x0

    .line 9271
    invoke-virtual {p1, v1, v2}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v1

    const/4 v3, 0x1

    const/4 v4, 0x0

    if-eqz v1, :cond_2

    .line 9274
    :try_start_0
    invoke-interface {v1}, Landroid/database/Cursor;->moveToFirst()Z

    .line 9275
    invoke-interface {v1, v4}, Landroid/database/Cursor;->getInt(I)I

    move-result v5

    if-lez v5, :cond_0

    const-string v5, "The legacy rcs tables are exists."

    .line 9277
    invoke-static {v0, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    move v5, v3

    goto :goto_0

    :cond_0
    const-string v5, "The legacy rcs tables are not exists."

    .line 9279
    invoke-static {v0, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move v5, v4

    :goto_0
    if-eqz v1, :cond_3

    .line 9283
    invoke-interface {v1}, Landroid/database/Cursor;->close()V

    goto :goto_1

    :catchall_0
    move-exception p0

    if-eqz v1, :cond_1

    invoke-interface {v1}, Landroid/database/Cursor;->close()V

    .line 9285
    :cond_1
    throw p0

    :cond_2
    move v5, v4

    :cond_3
    :goto_1
    const-string v1, "select count(*) from sqlite_master where name=\'spam_rcs_msgs\'"

    .line 9288
    invoke-virtual {p1, v1, v2}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v1

    if-eqz v1, :cond_7

    .line 9291
    :try_start_1
    invoke-interface {v1}, Landroid/database/Cursor;->moveToFirst()Z

    .line 9292
    invoke-interface {v1, v4}, Landroid/database/Cursor;->getInt(I)I

    move-result v6

    if-lez v6, :cond_4

    const-string v4, "The legacy spam rcs tables are exists."

    .line 9294
    invoke-static {v0, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :cond_4
    const-string v3, "The legacy spam rcs tables are not exists."

    .line 9297
    invoke-static {v0, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    move v3, v4

    :goto_2
    if-eqz v1, :cond_5

    .line 9301
    invoke-interface {v1}, Landroid/database/Cursor;->close()V

    :cond_5
    move v4, v3

    goto :goto_3

    :catchall_1
    move-exception p0

    if-eqz v1, :cond_6

    invoke-interface {v1}, Landroid/database/Cursor;->close()V

    .line 9303
    :cond_6
    throw p0

    :cond_7
    :goto_3
    if-eqz v5, :cond_1b

    .line 9308
    new-instance v1, Landroid/content/ContentValues;

    invoke-direct {v1}, Landroid/content/ContentValues;-><init>()V

    .line 9311
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "select body, delivered_timestamp, display_notification_status, imdn_message_id, date_sent, thread_id, seen, read, message_type, chat_id, rcsdb_id, content_type, date, address, remote_uri, type, status, hidden, locked, user_alias, not_displayed_counter, reserved from "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, "rcs_msgs"

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {p1, v3, v2}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v3

    if-eqz v3, :cond_b

    .line 9314
    :try_start_2
    invoke-interface {v3}, Landroid/database/Cursor;->getCount()I

    move-result v7

    if-lez v7, :cond_9

    invoke-interface {v3}, Landroid/database/Cursor;->moveToFirst()Z

    move-result v7

    if-eqz v7, :cond_9

    .line 9316
    :cond_8
    invoke-virtual {v1}, Landroid/content/ContentValues;->clear()V

    .line 9317
    invoke-virtual {p0, v3, v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->getRCSContentValues(Landroid/database/Cursor;Ljava/lang/String;)Landroid/content/ContentValues;

    move-result-object v1

    const-string v7, "im"

    .line 9318
    invoke-virtual {p1, v7, v2, v1}, Landroid/database/sqlite/SQLiteDatabase;->insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J

    .line 9319
    invoke-interface {v3}, Landroid/database/Cursor;->moveToNext()Z

    move-result v7

    if-nez v7, :cond_8

    :cond_9
    const-string v6, "rcs_msgs are restored."

    .line 9321
    invoke-static {v0, v6}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    if-eqz v3, :cond_b

    .line 9324
    invoke-interface {v3}, Landroid/database/Cursor;->close()V

    goto :goto_4

    :catchall_2
    move-exception p0

    if-eqz v3, :cond_a

    invoke-interface {v3}, Landroid/database/Cursor;->close()V

    .line 9325
    :cond_a
    throw p0

    .line 9329
    :cond_b
    :goto_4
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "select bytes_transf, file_path, file_size, thumbnail_path, cancel_reason, reject_reason, display_notification_status, chat_id, session_id, content_type, rcsdb_id, delivered_timestamp, remote_uri, seen, read, type, thread_id, address, date, date_sent, status, hidden, locked, user_alias, not_displayed_counter, reserved from "

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v7, "rcs_ft"

    invoke-virtual {v3, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {p1, v3, v2}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v3

    if-eqz v3, :cond_f

    .line 9332
    :try_start_3
    invoke-interface {v3}, Landroid/database/Cursor;->getCount()I

    move-result v8

    if-lez v8, :cond_d

    invoke-interface {v3}, Landroid/database/Cursor;->moveToFirst()Z

    move-result v8

    if-eqz v8, :cond_d

    .line 9334
    :cond_c
    invoke-virtual {v1}, Landroid/content/ContentValues;->clear()V

    .line 9335
    invoke-virtual {p0, v3, v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->getRCSContentValues(Landroid/database/Cursor;Ljava/lang/String;)Landroid/content/ContentValues;

    move-result-object v1

    const-string v8, "ft"

    .line 9336
    invoke-virtual {p1, v8, v2, v1}, Landroid/database/sqlite/SQLiteDatabase;->insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J

    .line 9337
    invoke-interface {v3}, Landroid/database/Cursor;->moveToNext()Z

    move-result v8

    if-nez v8, :cond_c

    :cond_d
    const-string v7, "rcs_ft are restored."

    .line 9339
    invoke-static {v0, v7}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    if-eqz v3, :cond_f

    .line 9342
    invoke-interface {v3}, Landroid/database/Cursor;->close()V

    goto :goto_5

    :catchall_3
    move-exception p0

    if-eqz v3, :cond_e

    invoke-interface {v3}, Landroid/database/Cursor;->close()V

    .line 9343
    :cond_e
    throw p0

    :cond_f
    :goto_5
    if-eqz v4, :cond_17

    .line 9348
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, "spam_rcs_msgs"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {p1, v3, v2}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v3

    if-eqz v3, :cond_13

    .line 9351
    :try_start_4
    invoke-interface {v3}, Landroid/database/Cursor;->getCount()I

    move-result v5

    if-lez v5, :cond_11

    invoke-interface {v3}, Landroid/database/Cursor;->moveToFirst()Z

    move-result v5

    if-eqz v5, :cond_11

    .line 9353
    :cond_10
    invoke-virtual {v1}, Landroid/content/ContentValues;->clear()V

    .line 9354
    invoke-virtual {p0, v3, v4}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->getRCSContentValues(Landroid/database/Cursor;Ljava/lang/String;)Landroid/content/ContentValues;

    move-result-object v1

    const-string v5, "spam_im"

    .line 9355
    invoke-virtual {p1, v5, v2, v1}, Landroid/database/sqlite/SQLiteDatabase;->insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J

    .line 9356
    invoke-interface {v3}, Landroid/database/Cursor;->moveToNext()Z

    move-result v5

    if-nez v5, :cond_10

    :cond_11
    const-string v4, "spam_rcs_msgs are restored."

    .line 9358
    invoke-static {v0, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_4

    if-eqz v3, :cond_13

    .line 9361
    invoke-interface {v3}, Landroid/database/Cursor;->close()V

    goto :goto_6

    :catchall_4
    move-exception p0

    if-eqz v3, :cond_12

    invoke-interface {v3}, Landroid/database/Cursor;->close()V

    .line 9362
    :cond_12
    throw p0

    .line 9366
    :cond_13
    :goto_6
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, "spam_rcs_ft"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {p1, v3, v2}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v3

    if-eqz v3, :cond_17

    .line 9369
    :try_start_5
    invoke-interface {v3}, Landroid/database/Cursor;->getCount()I

    move-result v5

    if-lez v5, :cond_15

    invoke-interface {v3}, Landroid/database/Cursor;->moveToFirst()Z

    move-result v5

    if-eqz v5, :cond_15

    .line 9371
    :cond_14
    invoke-virtual {v1}, Landroid/content/ContentValues;->clear()V

    .line 9372
    invoke-virtual {p0, v3, v4}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->getRCSContentValues(Landroid/database/Cursor;Ljava/lang/String;)Landroid/content/ContentValues;

    move-result-object v1

    const-string v5, "spam_ft"

    .line 9373
    invoke-virtual {p1, v5, v2, v1}, Landroid/database/sqlite/SQLiteDatabase;->insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J

    .line 9374
    invoke-interface {v3}, Landroid/database/Cursor;->moveToNext()Z

    move-result v5

    if-nez v5, :cond_14

    :cond_15
    const-string v4, "spam_rcs_ft are restored."

    .line 9376
    invoke-static {v0, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_5

    if-eqz v3, :cond_17

    .line 9379
    invoke-interface {v3}, Landroid/database/Cursor;->close()V

    goto :goto_7

    :catchall_5
    move-exception p0

    if-eqz v3, :cond_16

    invoke-interface {v3}, Landroid/database/Cursor;->close()V

    .line 9380
    :cond_16
    throw p0

    :cond_17
    :goto_7
    const-string v3, "select normal_thread_id, date, message_count, recipient_ids, snippet, snippet_cs, read, type, error, has_attachment, unread_count, alert_expired, reply_all, group_snippet, message_type, display_recipient_ids, chat_id, alias, opened, translate_mode from rcs_threads"

    .line 9385
    invoke-virtual {p1, v3, v2}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v3

    if-eqz v3, :cond_1b

    .line 9388
    :try_start_6
    invoke-interface {v3}, Landroid/database/Cursor;->getCount()I

    move-result v4

    if-lez v4, :cond_19

    invoke-interface {v3}, Landroid/database/Cursor;->moveToFirst()Z

    move-result v4

    if-eqz v4, :cond_19

    .line 9390
    :cond_18
    invoke-virtual {v1}, Landroid/content/ContentValues;->clear()V

    const-string v1, "rcs_threads"

    .line 9391
    invoke-virtual {p0, v3, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->getRCSContentValues(Landroid/database/Cursor;Ljava/lang/String;)Landroid/content/ContentValues;

    move-result-object v1

    const-string v4, "im_threads"

    .line 9392
    invoke-virtual {p1, v4, v2, v1}, Landroid/database/sqlite/SQLiteDatabase;->insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J

    .line 9393
    invoke-interface {v3}, Landroid/database/Cursor;->moveToNext()Z

    move-result v4

    if-nez v4, :cond_18

    :cond_19
    const-string v1, "rcs_threds are restored."

    .line 9395
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_6

    if-eqz v3, :cond_1b

    .line 9398
    invoke-interface {v3}, Landroid/database/Cursor;->close()V

    goto :goto_8

    :catchall_6
    move-exception p0

    if-eqz v3, :cond_1a

    invoke-interface {v3}, Landroid/database/Cursor;->close()V

    .line 9399
    :cond_1a
    throw p0

    :cond_1b
    :goto_8
    const-string v1, "wpm"

    const-string v2, "sim_imsi"

    .line 9403
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1c

    const-string v1, "moveRcsDataToImTables wpm.sim_imsi Column Exist"

    .line 9404
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_9

    :cond_1c
    const-string v1, "ALTER TABLE wpm ADD COLUMN sim_imsi TEXT"

    .line 9406
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_9
    const-string v1, "raw"

    const-string v3, "sim_slot"

    .line 9409
    invoke-direct {p0, p1, v1, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_1d

    const-string v1, "moveRcsDataToImTables raw sim_slot Column Exist"

    .line 9410
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_a

    :cond_1d
    const-string v4, "ALTER TABLE raw ADD COLUMN sim_slot INTEGER DEFAULT 0"

    .line 9412
    invoke-virtual {p1, v4}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v4, "phonetype"

    .line 9413
    invoke-direct {p0, p1, v1, v4}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1e

    const-string v1, "UPDATE raw SET sim_slot = phonetype"

    .line 9414
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :cond_1e
    :goto_a
    const-string v1, "spam_pdu"

    .line 9418
    invoke-direct {p0, p1, v1, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_1f

    const-string v4, "upgradeDatabaseToVersion75 table_spam_pdu.sim_slot Column Exist"

    .line 9419
    invoke-static {v0, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_b

    :cond_1f
    const-string v4, "ALTER TABLE spam_pdu ADD COLUMN sim_slot INTEGER DEFAULT 0"

    .line 9421
    invoke-virtual {p1, v4}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 9424
    :goto_b
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_20

    const-string v1, "upgradeDatabaseToVersion75 table_spam_pdu.sim_imsi Column Exist"

    .line 9425
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_c

    :cond_20
    const-string v1, "ALTER TABLE spam_pdu ADD COLUMN sim_imsi TEXT"

    .line 9427
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_c
    const-string v1, "spam_sms"

    .line 9430
    invoke-direct {p0, p1, v1, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_21

    const-string v3, "upgradeDatabaseToVersion75 spam_sms.sim_slot Column Exist"

    .line 9431
    invoke-static {v0, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_d

    :cond_21
    const-string v3, "ALTER TABLE spam_sms ADD COLUMN sim_slot INTEGER DEFAULT 0"

    .line 9433
    invoke-virtual {p1, v3}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 9436
    :goto_d
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_22

    const-string p0, "upgradeDatabaseToVersion75 spam_sms.sim_imsi Column Exist"

    .line 9437
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_e

    :cond_22
    const-string p0, "ALTER TABLE spam_sms ADD COLUMN sim_imsi TEXT"

    .line 9439
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_e
    const-string p0, "DROP TABLE IF EXISTS rcs_threads"

    .line 9442
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS rcs_msgs"

    .line 9443
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS rcs_ft"

    .line 9444
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS spam_rcs_msgs"

    .line 9445
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE IF EXISTS spam_rcs_ft"

    .line 9446
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "moveRcsDataToImTables end."

    .line 9448
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private populateWordsTable(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 17

    move-object/from16 v0, p1

    const-string v9, "_id"

    const-string v1, "body"

    .line 2235
    filled-new-array {v9, v1}, [Ljava/lang/String;

    move-result-object v3

    const-string v2, "sms"

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    move-object/from16 v1, p1

    invoke-virtual/range {v1 .. v8}, Landroid/database/sqlite/SQLiteDatabase;->query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v1

    const-string v10, "words"

    const-string v11, "table_to_use"

    const-string v12, "source_id"

    const/4 v13, 0x0

    const/4 v14, -0x1

    const-string v15, "index_text"

    const/4 v8, 0x1

    if-eqz v1, :cond_1

    .line 2245
    :try_start_0
    invoke-interface {v1, v14}, Landroid/database/Cursor;->moveToPosition(I)Z

    .line 2246
    new-instance v2, Landroid/content/ContentValues;

    invoke-direct {v2}, Landroid/content/ContentValues;-><init>()V

    .line 2247
    :goto_0
    invoke-interface {v1}, Landroid/database/Cursor;->moveToNext()Z

    move-result v3

    if-eqz v3, :cond_1

    .line 2248
    invoke-virtual {v2}, Landroid/content/ContentValues;->clear()V

    .line 2250
    invoke-interface {v1, v13}, Landroid/database/Cursor;->getLong(I)J

    move-result-wide v3

    .line 2251
    invoke-interface {v1, v8}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v5

    .line 2253
    invoke-static {v3, v4}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v6

    invoke-virtual {v2, v9, v6}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Long;)V

    .line 2254
    invoke-virtual {v2, v15, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    .line 2255
    invoke-static {v3, v4}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v3

    invoke-virtual {v2, v12, v3}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Long;)V

    .line 2256
    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-virtual {v2, v11, v3}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    .line 2257
    invoke-virtual {v0, v10, v15, v2}, Landroid/database/sqlite/SQLiteDatabase;->insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_0

    :catchall_0
    move-exception v0

    if-eqz v1, :cond_0

    .line 2262
    invoke-interface {v1}, Landroid/database/Cursor;->close()V

    .line 2264
    :cond_0
    throw v0

    :cond_1
    if-eqz v1, :cond_2

    .line 2262
    invoke-interface {v1}, Landroid/database/Cursor;->close()V

    :cond_2
    const-string v1, "text"

    .line 2268
    filled-new-array {v9, v1}, [Ljava/lang/String;

    move-result-object v3

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/16 v16, 0x0

    const-string v2, "part"

    const-string v4, "ct = \'text/plain\'"

    move-object/from16 v1, p1

    move-object/from16 v8, v16

    invoke-virtual/range {v1 .. v8}, Landroid/database/sqlite/SQLiteDatabase;->query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v1

    if-eqz v1, :cond_4

    .line 2278
    :try_start_1
    invoke-interface {v1, v14}, Landroid/database/Cursor;->moveToPosition(I)Z

    .line 2279
    new-instance v2, Landroid/content/ContentValues;

    invoke-direct {v2}, Landroid/content/ContentValues;-><init>()V

    .line 2280
    :goto_1
    invoke-interface {v1}, Landroid/database/Cursor;->moveToNext()Z

    move-result v3

    if-eqz v3, :cond_4

    .line 2281
    invoke-virtual {v2}, Landroid/content/ContentValues;->clear()V

    .line 2283
    invoke-interface {v1, v13}, Landroid/database/Cursor;->getLong(I)J

    move-result-wide v3

    const/4 v5, 0x1

    .line 2284
    invoke-interface {v1, v5}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v6

    .line 2286
    invoke-static {v3, v4}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v7

    invoke-virtual {v2, v9, v7}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Long;)V

    .line 2287
    invoke-virtual {v2, v15, v6}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    .line 2288
    invoke-static {v3, v4}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v3

    invoke-virtual {v2, v12, v3}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Long;)V

    .line 2289
    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-virtual {v2, v11, v3}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    .line 2290
    invoke-virtual {v0, v10, v15, v2}, Landroid/database/sqlite/SQLiteDatabase;->insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    goto :goto_1

    :catchall_1
    move-exception v0

    if-eqz v1, :cond_3

    .line 2295
    invoke-interface {v1}, Landroid/database/Cursor;->close()V

    .line 2297
    :cond_3
    throw v0

    :cond_4
    if-eqz v1, :cond_5

    .line 2295
    invoke-interface {v1}, Landroid/database/Cursor;->close()V

    :cond_5
    return-void
.end method

.method private recoveryReservedMessageForUpgrade_ForKorVersion57(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 7

    const-string p0, "reserved"

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "recoveryReservedMessageForUpgrade_ForKorVersion57() enter"

    .line 10740
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10741
    new-instance v1, Landroid/content/ContentValues;

    invoke-direct {v1}, Landroid/content/ContentValues;-><init>()V

    const/4 v2, 0x0

    const/4 v3, 0x1

    const/4 v4, 0x2

    :try_start_0
    const-string v5, "type"

    .line 10744
    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    invoke-virtual {v1, v5, v6}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    .line 10745
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-virtual {v1, p0, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const-string v5, "sms"

    const-string v6, "type=50"

    .line 10746
    invoke-virtual {p1, v5, v1, v6, v2}, Landroid/database/sqlite/SQLiteDatabase;->update(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception v5

    const-string v6, "recoveryReservedMessageForUpgrade_ForKorVersion57(): sms recovery error occured"

    .line 10748
    invoke-static {v0, v6}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 10749
    invoke-virtual {v5}, Ljava/lang/Exception;->printStackTrace()V

    :goto_0
    :try_start_1
    const-string v5, "msg_box"

    .line 10754
    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-virtual {v1, v5, v4}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    .line 10755
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-virtual {v1, p0, v3}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const-string p0, "pdu"

    const-string v3, "msg_box=50"

    .line 10756
    invoke-virtual {p1, p0, v1, v3, v2}, Landroid/database/sqlite/SQLiteDatabase;->update(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1

    goto :goto_1

    :catch_1
    const-string p0, "recoveryReservedMessageForUpgrade_ForKorVersion57(): mms recovery error occured"

    .line 10758
    invoke-static {v0, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    :goto_1
    return-void
.end method

.method private recoverySpamMessageForUpgrade_ForKorVersion57(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 44

    move-object/from16 v9, p1

    const-string v10, "hidden"

    const-string v11, "seen"

    const-string v12, "d_rpt"

    const-string v13, "retr_st"

    const-string v14, "tr_id"

    const-string v15, "m_size"

    const-string v8, "m_type"

    const-string v7, "exp"

    const-string v6, "ct_t"

    const-string v5, "sub_cs"

    const-string v4, "sub"

    const-string v3, "m_id"

    const-string v2, "read"

    const-string v1, "date"

    move-object/from16 v16, v8

    const-string v8, "TP/MmsSmsDatabaseHelper"

    const-string v0, "recoverySpamMessageForUpgrade_ForKorVersion57() enter"

    .line 10624
    invoke-static {v8, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    :try_start_0
    const-string v0, "INSERT INTO spam_sms (address, date, read, seen, type, service_center, body) SELECT address, date, read, seen, 1, service_center, body FROM sms WHERE type=44"

    .line 10627
    invoke-virtual {v9, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DELETE FROM sms WHERE type=44"

    .line 10629
    invoke-virtual {v9, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
    :try_end_0
    .catch Landroid/database/SQLException; {:try_start_0 .. :try_end_0} :catch_0

    move-object/from16 v17, v1

    goto :goto_0

    :catch_0
    move-exception v0

    move-object/from16 v17, v1

    const-string v1, "recoverySpamMessageForUpgrade_ForKorVersion57(): sms recovery error occured"

    .line 10631
    invoke-static {v8, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 10632
    invoke-virtual {v0}, Landroid/database/SQLException;->printStackTrace()V

    :goto_0
    const/4 v1, 0x0

    :try_start_1
    const-string v0, "pdu"

    const/16 v18, 0x0

    const-string v19, "msg_box=44"
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_4
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    const/16 v20, 0x0

    const/16 v21, 0x0

    const/16 v22, 0x0

    const/16 v23, 0x0

    move-object/from16 v25, v17

    move-object/from16 v1, p1

    move-object/from16 v26, v2

    move-object v2, v0

    move-object/from16 v27, v3

    move-object/from16 v3, v18

    move-object/from16 v28, v4

    move-object/from16 v4, v19

    move-object/from16 v29, v5

    move-object/from16 v5, v20

    move-object/from16 v30, v6

    move-object/from16 v6, v21

    move-object/from16 v31, v7

    move-object/from16 v7, v22

    move-object/from16 v32, v8

    move-object/from16 v9, v16

    move-object/from16 v8, v23

    .line 10638
    :try_start_2
    invoke-virtual/range {v1 .. v8}, Landroid/database/sqlite/SQLiteDatabase;->query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v7
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_3
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    if-eqz v7, :cond_0

    :try_start_3
    const-string v0, "_id"

    .line 10640
    invoke-interface {v7, v0}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v0

    move-object/from16 v8, v25

    .line 10641
    invoke-interface {v7, v8}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v5

    move-object/from16 v6, v26

    .line 10642
    invoke-interface {v7, v6}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v3

    move-object/from16 v4, v27

    .line 10643
    invoke-interface {v7, v4}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v2

    move-object/from16 v27, v4

    move-object/from16 v1, v28

    .line 10644
    invoke-interface {v7, v1}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v4

    move-object/from16 v28, v1

    move/from16 v16, v4

    move-object/from16 v1, v29

    .line 10645
    invoke-interface {v7, v1}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v4

    move-object/from16 v29, v1

    move/from16 v17, v4

    move-object/from16 v1, v30

    .line 10646
    invoke-interface {v7, v1}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v4

    move-object/from16 v30, v1

    move/from16 v18, v4

    move-object/from16 v1, v31

    .line 10647
    invoke-interface {v7, v1}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v4

    move-object/from16 v31, v1

    .line 10648
    invoke-interface {v7, v9}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v1

    move-object/from16 v19, v9

    .line 10649
    invoke-interface {v7, v15}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v9

    move-object/from16 v20, v15

    .line 10650
    invoke-interface {v7, v14}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v15

    move-object/from16 v21, v14

    .line 10651
    invoke-interface {v7, v13}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v14

    move-object/from16 v22, v13

    .line 10652
    invoke-interface {v7, v12}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v13

    move-object/from16 v23, v12

    .line 10653
    invoke-interface {v7, v11}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v12

    move-object/from16 v25, v11

    .line 10654
    invoke-interface {v7, v10}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v11

    move-object/from16 v26, v10

    .line 10660
    new-instance v10, Landroid/content/ContentValues;

    invoke-direct {v10}, Landroid/content/ContentValues;-><init>()V

    .line 10662
    :goto_1
    invoke-interface {v7}, Landroid/database/Cursor;->moveToNext()Z

    move-result v33

    if-eqz v33, :cond_0

    .line 10663
    invoke-virtual {v10}, Landroid/content/ContentValues;->clear()V

    move/from16 v34, v11

    move/from16 v33, v12

    .line 10665
    invoke-interface {v7, v0}, Landroid/database/Cursor;->getLong(I)J

    move-result-wide v11

    move/from16 v35, v0

    .line 10666
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    move/from16 v36, v13

    const-string v13, "pdu textRows.moveToNext() pdu_id:"

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v11, v12}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_2
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-object/from16 v13, v32

    :try_start_4
    invoke-static {v13, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10668
    invoke-interface {v7, v5}, Landroid/database/Cursor;->getLong(I)J

    move-result-wide v37

    invoke-static/range {v37 .. v38}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v0

    invoke-virtual {v10, v8, v0}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Long;)V

    const-string v0, "msg_box"

    const/16 v32, 0x1

    move/from16 v37, v5

    .line 10669
    invoke-static/range {v32 .. v32}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-virtual {v10, v0, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    .line 10670
    invoke-interface {v7, v3}, Landroid/database/Cursor;->getInt(I)I

    move-result v0

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    invoke-virtual {v10, v6, v0}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    .line 10671
    invoke-interface {v7, v2}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v0

    move-object/from16 v5, v27

    invoke-virtual {v10, v5, v0}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    move/from16 v0, v16

    move/from16 v16, v2

    .line 10672
    invoke-interface {v7, v0}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v2

    move/from16 v27, v3

    move-object/from16 v3, v28

    invoke-virtual {v10, v3, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    move/from16 v2, v17

    .line 10673
    invoke-interface {v7, v2}, Landroid/database/Cursor;->getInt(I)I

    move-result v17

    move/from16 v28, v0

    invoke-static/range {v17 .. v17}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    move/from16 v17, v2

    move-object/from16 v2, v29

    invoke-virtual {v10, v2, v0}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    move-object/from16 v29, v2

    move/from16 v0, v18

    .line 10674
    invoke-interface {v7, v0}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v2

    move-object/from16 v18, v3

    move-object/from16 v3, v30

    invoke-virtual {v10, v3, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    .line 10675
    invoke-interface {v7, v4}, Landroid/database/Cursor;->getInt(I)I

    move-result v2

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    move-object/from16 v30, v3

    move-object/from16 v3, v31

    invoke-virtual {v10, v3, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    .line 10676
    invoke-interface {v7, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v2

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    move/from16 v31, v1

    move-object/from16 v1, v19

    invoke-virtual {v10, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    .line 10677
    invoke-interface {v7, v9}, Landroid/database/Cursor;->getInt(I)I

    move-result v2

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    move-object/from16 v19, v8

    move-object/from16 v8, v20

    invoke-virtual {v10, v8, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    .line 10678
    invoke-interface {v7, v15}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v2

    move-object/from16 v20, v8

    move-object/from16 v8, v21

    invoke-virtual {v10, v8, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    .line 10679
    invoke-interface {v7, v14}, Landroid/database/Cursor;->getInt(I)I

    move-result v2

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    move-object/from16 v21, v8

    move-object/from16 v8, v22

    invoke-virtual {v10, v8, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    move/from16 v2, v36

    .line 10680
    invoke-interface {v7, v2}, Landroid/database/Cursor;->getInt(I)I

    move-result v22

    move/from16 v32, v0

    invoke-static/range {v22 .. v22}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    move-object/from16 v22, v8

    move-object/from16 v8, v23

    invoke-virtual {v10, v8, v0}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    move/from16 v0, v33

    .line 10681
    invoke-interface {v7, v0}, Landroid/database/Cursor;->getInt(I)I

    move-result v23

    move/from16 v33, v0

    invoke-static/range {v23 .. v23}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    move-object/from16 v23, v8

    move-object/from16 v8, v25

    invoke-virtual {v10, v8, v0}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    move/from16 v0, v34

    .line 10682
    invoke-interface {v7, v0}, Landroid/database/Cursor;->getInt(I)I

    move-result v25

    move/from16 v34, v0

    invoke-static/range {v25 .. v25}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    move-object/from16 v25, v8

    move-object/from16 v8, v26

    invoke-virtual {v10, v8, v0}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const-string v0, "spam_pdu"

    move-object/from16 v24, v1

    move-object/from16 v26, v8

    const/4 v8, 0x0

    move-object/from16 v1, p1

    .line 10685
    invoke-virtual {v1, v0, v8, v10}, Landroid/database/sqlite/SQLiteDatabase;->insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J

    move-result-wide v38

    move/from16 v0, v31

    move-object/from16 v31, v3

    move-object v3, v1

    move-object/from16 v1, p0

    move/from16 v36, v2

    move-object/from16 v2, p1

    move/from16 v40, v4

    move-object/from16 v41, v5

    move-object v5, v3

    move/from16 v43, v28

    move/from16 v28, v17

    move/from16 v17, v27

    move/from16 v27, v43

    move-wide v3, v11

    move-object v8, v5

    move-object/from16 v42, v6

    move-wide/from16 v5, v38

    .line 10688
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->recoverySpamMessageForUpgrade_ForKorVersion57_part(Landroid/database/sqlite/SQLiteDatabase;JJ)V

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-wide v3, v11

    move-wide/from16 v5, v38

    .line 10691
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->recoverySpamMessageForUpgrade_ForKorVersion57_addr(Landroid/database/sqlite/SQLiteDatabase;JJ)V

    const-string v1, "pdu"

    .line 10694
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "_id="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v11, v12}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    const/4 v3, 0x0

    invoke-virtual {v8, v1, v2, v3}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_1
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    move v1, v0

    move/from16 v2, v16

    move/from16 v3, v17

    move-object/from16 v8, v19

    move-object/from16 v19, v24

    move/from16 v16, v27

    move/from16 v17, v28

    move/from16 v12, v33

    move/from16 v11, v34

    move/from16 v0, v35

    move/from16 v5, v37

    move/from16 v4, v40

    move-object/from16 v27, v41

    move-object/from16 v6, v42

    move-object/from16 v28, v18

    move/from16 v18, v32

    move-object/from16 v32, v13

    move/from16 v13, v36

    goto/16 :goto_1

    :catch_1
    move-exception v0

    goto :goto_2

    :catchall_0
    move-exception v0

    move-object v1, v7

    goto :goto_5

    :catch_2
    move-exception v0

    move-object/from16 v13, v32

    :goto_2
    move-object v1, v7

    goto :goto_3

    :cond_0
    if-eqz v7, :cond_1

    .line 10702
    invoke-interface {v7}, Landroid/database/Cursor;->close()V

    goto :goto_4

    :catchall_1
    move-exception v0

    const/4 v3, 0x0

    move-object v1, v3

    goto :goto_5

    :catch_3
    move-exception v0

    move-object/from16 v13, v32

    const/4 v3, 0x0

    move-object v1, v3

    goto :goto_3

    :catchall_2
    move-exception v0

    move-object v3, v1

    goto :goto_5

    :catch_4
    move-exception v0

    move-object v3, v1

    move-object v13, v8

    :goto_3
    :try_start_5
    const-string v2, "recoverySpamMessageForUpgradeKorVersion57(): mms recovery error occured"

    .line 10698
    invoke-static {v13, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 10699
    invoke-virtual {v0}, Ljava/lang/Exception;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v13, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    if-eqz v1, :cond_1

    .line 10702
    invoke-interface {v1}, Landroid/database/Cursor;->close()V

    :cond_1
    :goto_4
    return-void

    :catchall_3
    move-exception v0

    :goto_5
    if-eqz v1, :cond_2

    invoke-interface {v1}, Landroid/database/Cursor;->close()V

    .line 10705
    :cond_2
    throw v0
.end method

.method private recoverySpamMessageForUpgrade_ForKorVersion57_addr(Landroid/database/sqlite/SQLiteDatabase;JJ)V
    .locals 1

    .line 10727
    :try_start_0
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "INSERT INTO spam_addr (msg_id, contact_id, address, type, charset) SELECT "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p4, p5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string p4, ", contact_id, address, type, charset FROM addr WHERE "

    invoke-virtual {p0, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p4, "msg_id"

    invoke-virtual {p0, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p4, "="

    invoke-virtual {p0, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p2, p3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 10729
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "DELETE FROM addr WHERE msg_id="

    invoke-virtual {p0, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p2, p3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
    :try_end_0
    .catch Landroid/database/SQLException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception p0

    const-string p1, "TP/MmsSmsDatabaseHelper"

    const-string p2, "recoverySpamMessageForUpgrade_ForKorVersion57_addr exception occured"

    .line 10731
    invoke-static {p1, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 10732
    invoke-virtual {p0}, Landroid/database/SQLException;->printStackTrace()V

    :goto_0
    return-void
.end method

.method private recoverySpamMessageForUpgrade_ForKorVersion57_part(Landroid/database/sqlite/SQLiteDatabase;JJ)V
    .locals 1

    .line 10713
    :try_start_0
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "INSERT INTO spam_part (mid, seq, ct, name, chset, cd, fn, cid, cl, ctt_s, ctt_t, _data, text) SELECT "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p4, p5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string p4, ", seq, ct, name, chset, cd, fn, cid, cl, ctt_s, ctt_t, _data, text FROM part WHERE "

    invoke-virtual {p0, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p4, "mid"

    invoke-virtual {p0, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p4, "="

    invoke-virtual {p0, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p2, p3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 10715
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "DELETE FROM part WHERE mid="

    invoke-virtual {p0, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p2, p3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
    :try_end_0
    .catch Landroid/database/SQLException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception p0

    const-string p1, "TP/MmsSmsDatabaseHelper"

    const-string p2, "recoverySpamMessageForUpgrade_ForKorVersion57_part exception occured"

    .line 10717
    invoke-static {p1, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 10718
    invoke-virtual {p0}, Landroid/database/SQLException;->printStackTrace()V

    :goto_0
    return-void
.end method

.method private renameColumn(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    .locals 1

    .line 9002
    invoke-direct {p0, p1, p2, p3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_0

    .line 9003
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "ALTER TABLE "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, " RENAME COLUMN "

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, " TO "

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    goto :goto_0

    .line 9005
    :cond_0
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p1, "renameColumn in table: "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " Column does not Exist"

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "TP/MmsSmsDatabaseHelper"

    invoke-static {p1, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    :goto_0
    return-void
.end method

.method private renameReplyColumns(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)V
    .locals 2

    const-string v0, "reply_original_body"

    const-string v1, "re_original_body"

    .line 9010
    invoke-direct {p0, p1, p2, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->renameColumn(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v0, "reply_body"

    const-string v1, "re_body"

    .line 9011
    invoke-direct {p0, p1, p2, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->renameColumn(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v0, "reply_original_key"

    const-string v1, "re_original_key"

    .line 9012
    invoke-direct {p0, p1, p2, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->renameColumn(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v0, "reply_recipient_address"

    const-string v1, "re_recipient_address"

    .line 9013
    invoke-direct {p0, p1, p2, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->renameColumn(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v0, "reply_content_uri"

    const-string v1, "re_content_uri"

    .line 9014
    invoke-direct {p0, p1, p2, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->renameColumn(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v0, "reply_content_type"

    const-string v1, "re_content_type"

    .line 9015
    invoke-direct {p0, p1, p2, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->renameColumn(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v0, "reply_file_name"

    const-string v1, "re_file_name"

    .line 9016
    invoke-direct {p0, p1, p2, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->renameColumn(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    return-void
.end method

.method private resetTriggerForMultiDraft(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string v0, "resetTriggerForMultiDraft start"

    .line 10849
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p0, "DROP TRIGGER IF EXISTS pdu_update_thread_type_on_update;"

    .line 10850
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER pdu_update_thread_type_on_update AFTER  UPDATE OF msg_box  ON pdu   WHEN new.m_type=132    OR new.m_type=130    OR new.m_type=128 BEGIN  UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM pdu          WHERE read = 0            AND thread_id = threads._id             AND (m_type=132 OR m_type=130 OR m_type=128))       WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id;   UPDATE threads SET snippet_type = (    SELECT snippet_type FROM (      SELECT date * 1000 AS date, msg_box AS snippet_type, thread_id FROM pdu WHERE thread_id = new.thread_id      UNION       SELECT date, type AS snippet_type, thread_id FROM sms WHERE thread_id = new.thread_id)    ORDER BY date DESC LIMIT 1)  WHERE threads._id = new.thread_id; END;"

    .line 10851
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS sms_update_thread_type_on_update;"

    .line 10855
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER sms_update_thread_type_on_update AFTER  UPDATE OF type  ON sms BEGIN  UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM sms          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id;   UPDATE threads SET snippet_type = (    SELECT snippet_type FROM (      SELECT date * 1000 AS date, msg_box AS snippet_type, thread_id FROM pdu WHERE thread_id = new.thread_id      UNION       SELECT date, type AS snippet_type, thread_id FROM sms WHERE thread_id = new.thread_id)    ORDER BY date DESC LIMIT 1)  WHERE threads._id = new.thread_id; END;"

    .line 10856
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS wpm_update_thread_type_on_update;"

    .line 10860
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER wpm_update_thread_type_on_update AFTER  UPDATE OF type  ON wpm BEGIN  UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM wpm          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; END;"

    .line 10861
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS pdu_update_thread_on_insert;"

    .line 10865
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER pdu_update_thread_on_insert AFTER INSERT ON pdu   WHEN new.m_type=132    OR new.m_type=130    OR new.m_type=128 BEGIN  UPDATE threads SET    date = new.date * 1000,     snippet = substr(new.sub,1,500),     snippet_cs = new.sub_cs,    snippet_type = new.msg_box  WHERE threads._id = new.thread_id;   UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM pdu          WHERE read = 0            AND thread_id = threads._id             AND (m_type=132 OR m_type=130 OR m_type=128))       WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; END;"

    .line 10866
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS sms_update_thread_on_insert;"

    .line 10870
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER sms_update_thread_on_insert AFTER INSERT ON sms BEGIN  UPDATE threads SET    date = new.date,     snippet = substr(new.body,1,300),     snippet_cs = 0,    snippet_type = new.type  WHERE threads._id = new.thread_id  AND (new.reserved = 0 OR (new.reserved = 1 AND new.type = 3));   UPDATE threads SET date = NULL        WHERE (threads._id = new.thread_id)           AND new.reserved > 0           AND 1 = (SELECT COUNT(sms._id) FROM sms WHERE thread_id = new.thread_id)           AND 0 = (SELECT COUNT(wpm._id) FROM wpm WHERE thread_id = new.thread_id)           AND 0 = (SELECT COUNT(pdu._id) FROM pdu WHERE thread_id = new.thread_id AND (m_type=132 OR m_type=130 OR m_type=128));   UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM sms          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; END;"

    .line 10871
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS pdu_update_thread_on_delete;"

    .line 10874
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER pdu_update_thread_on_delete AFTER DELETE ON pdu BEGIN   UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = old.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = old.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = old.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3)    , unread_count =    (SELECT count(*) FROM sms LEFT JOIN threads    ON threads._id = thread_id   WHERE thread_id = old.thread_id   AND sms.read = 0 AND sms.type = 1) +    (SELECT count(*) FROM wpm LEFT JOIN threads    ON threads._id = thread_id   WHERE thread_id = old.thread_id   AND wpm.read = 0) +    (SELECT count(*) FROM pdu LEFT JOIN threads    ON threads._id = thread_id   WHERE thread_id = old.thread_id    AND pdu.read = 0    AND (m_type = 128 OR m_type = 132 OR m_type = 130)   AND msg_box = 1)   WHERE threads._id = old.thread_id;   UPDATE threads SET snippet =    (SELECT substr(snippet,1,300) FROM     (SELECT date * 1000 AS date, sub AS snippet, sub_cs AS snippet_cs, thread_id FROM pdu WHERE thread_id = OLD.thread_id      UNION SELECT date, body AS snippet, 0 AS snippet_cs, thread_id FROM sms WHERE thread_id = OLD.thread_id)    ORDER BY date DESC LIMIT 1)   WHERE threads._id = OLD.thread_id;   UPDATE threads SET snippet_cs =    (SELECT snippet_cs FROM     (SELECT date * 1000 AS date, sub AS snippet, sub_cs AS snippet_cs, thread_id FROM pdu WHERE thread_id = OLD.thread_id      UNION SELECT date, body AS snippet, 0 AS snippet_cs, thread_id FROM sms WHERE thread_id = OLD.thread_id)    ORDER BY date DESC LIMIT 1)   WHERE threads._id = OLD.thread_id;   UPDATE threads SET snippet_type =    (SELECT snippet_type FROM     (SELECT date * 1000 AS date, sub AS snippet, sub_cs AS snippet_cs, thread_id, msg_box AS snippet_type FROM pdu WHERE thread_id = OLD.thread_id      UNION SELECT date, body AS snippet, 0 AS snippet_cs, thread_id, type AS snippet_type FROM sms WHERE thread_id = OLD.thread_id)    ORDER BY date DESC LIMIT 1)   WHERE threads._id = OLD.thread_id; END;"

    .line 10875
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS wpm_update_thread_on_insert;"

    .line 10886
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER wpm_update_thread_on_insert AFTER INSERT ON wpm BEGIN  UPDATE threads SET    date = new.date,     snippet = substr(new.body,1,300),     snippet_cs = 0,    snippet_type = 1  WHERE threads._id = new.thread_id;   UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM wpm          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; END;"

    .line 10887
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private static sendDbLostIntent(Landroid/content/Context;Z)V
    .locals 2

    .line 1250
    new-instance v0, Landroid/content/Intent;

    const-string v1, "android.provider.action.SMS_MMS_DB_LOST"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    const-string v1, "android.provider.extra.IS_CORRUPTED"

    .line 1251
    invoke-virtual {v0, v1, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    const/high16 p1, 0x1000000

    .line 1252
    invoke-virtual {v0, p1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 1253
    invoke-virtual {p0, v0}, Landroid/content/Context;->sendBroadcast(Landroid/content/Intent;)V

    return-void
.end method

.method private setInitialCreateDone()V
    .locals 2

    .line 2222
    sget-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sInitialCreateDone:Ljava/util/concurrent/atomic/AtomicBoolean;

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Ljava/util/concurrent/atomic/AtomicBoolean;->getAndSet(Z)Z

    move-result v0

    if-nez v0, :cond_0

    .line 2223
    iget-object p0, p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mContext:Landroid/content/Context;

    .line 2224
    invoke-static {p0}, Landroid/preference/PreferenceManager;->getDefaultSharedPreferences(Landroid/content/Context;)Landroid/content/SharedPreferences;

    move-result-object p0

    invoke-interface {p0}, Landroid/content/SharedPreferences;->edit()Landroid/content/SharedPreferences$Editor;

    move-result-object p0

    const-string v0, "initial_create_done"

    .line 2225
    invoke-interface {p0, v0, v1}, Landroid/content/SharedPreferences$Editor;->putBoolean(Ljava/lang/String;Z)Landroid/content/SharedPreferences$Editor;

    .line 2226
    invoke-interface {p0}, Landroid/content/SharedPreferences$Editor;->commit()Z

    :cond_0
    return-void
.end method

.method public static updateAllThreads(Landroid/database/sqlite/SQLiteDatabase;)I
    .locals 1

    const/4 v0, 0x0

    .line 1820
    invoke-static {p0, v0, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateAllThreads(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;)I

    move-result p0

    return p0
.end method

.method public static updateAllThreads(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;)I
    .locals 1

    const/4 v0, 0x0

    .line 1654
    invoke-static {p0, p1, p2, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateAllThreads(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;Z)I

    move-result p0

    return p0
.end method

.method public static updateAllThreads(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;Z)I
    .locals 10

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "updateAllThreads()"

    .line 1668
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, ")"

    if-nez p1, :cond_0

    const-string p1, " SELECT _id FROM threads WHERE _id IN (   SELECT DISTINCT thread_id FROM sms INDEXED BY index_date_ordered_sms   UNION   SELECT DISTINCT thread_id FROM wpm INDEXED BY index_date_ordered_wpm   UNION   SELECT DISTINCT thread_id FROM pdu INDEXED BY index_date_ordered_pdu   UNION   SELECT DISTINCT thread_id FROM bin_sms INDEXED BY index_date_ordered_bin_sms   UNION   SELECT DISTINCT thread_id FROM bin_wpm INDEXED BY index_date_ordered_bin_wpm   UNION   SELECT DISTINCT thread_id FROM bin_pdu INDEXED BY index_date_ordered_bin_pdu ) UNION SELECT normal_thread_id AS _id FROM im_threads WHERE normal_thread_id IN (   SELECT DISTINCT thread_id FROM im INDEXED BY index_date_ordered_im   UNION   SELECT DISTINCT thread_id FROM ft INDEXED BY index_date_ordered_ft   UNION   SELECT DISTINCT thread_id FROM bin_im INDEXED BY index_date_ordered_bin_im   UNION   SELECT DISTINCT thread_id FROM bin_ft INDEXED BY index_date_ordered_bin_ft )"

    goto :goto_0

    .line 1704
    :cond_0
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, " SELECT DISTINCT thread_id AS _id FROM sms WHERE ("

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 1707
    :goto_0
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, " SELECT _id, CASE WHEN (   _id IN (     SELECT DISTINCT thread_id FROM im     UNION     SELECT DISTINCT thread_id FROM ft     UNION     SELECT DISTINCT thread_id FROM bin_im     UNION     SELECT DISTINCT thread_id FROM bin_ft   ) ) THEN 1 ELSE 0 END AS need_im_update FROM ("

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    const/4 v1, 0x0

    .line 1720
    :try_start_0
    invoke-virtual {p0, p1, p2}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object p1
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_1

    move p2, v1

    .line 1721
    :goto_1
    :try_start_1
    invoke-interface {p1}, Landroid/database/Cursor;->moveToNext()Z

    move-result v2

    if-eqz v2, :cond_2

    .line 1722
    invoke-interface {p1, v1}, Landroid/database/Cursor;->getLong(I)J

    move-result-wide v4

    const-wide/16 v2, 0x0

    cmp-long v2, v4, v2

    if-lez v2, :cond_1

    const/4 v6, 0x1

    const/4 v2, 0x1

    .line 1724
    invoke-interface {p1, v2}, Landroid/database/Cursor;->getInt(I)I

    move-result v7

    const/4 v9, 0x1

    move-object v3, p0

    move v8, p3

    invoke-static/range {v3 .. v9}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThread(Landroid/database/sqlite/SQLiteDatabase;JZIZZ)I

    move-result v2

    add-int/2addr p2, v2

    goto :goto_1

    .line 1726
    :cond_1
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "updateAllThreads failed, threadId : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_1

    :cond_2
    if-eqz p1, :cond_4

    .line 1729
    :try_start_2
    invoke-interface {p1}, Landroid/database/Cursor;->close()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    goto :goto_4

    :catchall_0
    move-exception p3

    if-eqz p1, :cond_3

    .line 1720
    :try_start_3
    invoke-interface {p1}, Landroid/database/Cursor;->close()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    goto :goto_2

    :catchall_1
    move-exception p1

    :try_start_4
    invoke-virtual {p3, p1}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    :cond_3
    :goto_2
    throw p3
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_0

    :catch_0
    move-exception p1

    move v1, p2

    goto :goto_3

    :catch_1
    move-exception p1

    :goto_3
    const-string p2, "updateAllThreads(): collect all thread ids failed!"

    .line 1730
    invoke-static {v0, p2, p1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    move p2, v1

    :cond_4
    :goto_4
    const-string p1, "threads"

    const-string p3, "_id NOT IN (   SELECT DISTINCT thread_id FROM sms INDEXED BY index_date_ordered_sms WHERE thread_id NOT NULL   UNION   SELECT DISTINCT thread_id FROM wpm INDEXED BY index_date_ordered_wpm WHERE thread_id NOT NULL   UNION   SELECT DISTINCT thread_id FROM pdu INDEXED BY index_date_ordered_pdu WHERE thread_id NOT NULL   UNION   SELECT DISTINCT thread_id FROM bin_sms INDEXED BY index_date_ordered_bin_sms WHERE thread_id NOT NULL   UNION   SELECT DISTINCT thread_id FROM bin_wpm INDEXED BY index_date_ordered_bin_wpm WHERE thread_id NOT NULL   UNION   SELECT DISTINCT thread_id FROM bin_pdu INDEXED BY index_date_ordered_bin_pdu WHERE thread_id NOT NULL )"

    const/4 v1, 0x0

    .line 1734
    invoke-virtual {p0, p1, p3, v1}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I

    move-result p1

    add-int/2addr p2, p1

    .line 1752
    invoke-static {}, Lcom/android/providers/telephony/MmsSmsProvider;->getEnableCpm()Z

    move-result p1

    if-eqz p1, :cond_5

    invoke-static {}, Lcom/android/providers/telephony/MmsSmsProvider;->getEnableCmcc()Z

    move-result p1

    if-nez p1, :cond_5

    const-string p1, " OR im_type IN (0,1,3))"

    goto :goto_5

    :cond_5
    const-string p1, " OR im_type NOT IN (2,3))"

    .line 1755
    :goto_5
    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "(im_type=9"

    invoke-virtual {p3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " AND normal_thread_id NOT IN (   SELECT DISTINCT thread_id FROM im INDEXED BY index_date_ordered_im WHERE thread_id NOT NULL   UNION   SELECT DISTINCT thread_id FROM ft INDEXED BY index_date_ordered_ft WHERE thread_id NOT NULL   UNION   SELECT DISTINCT thread_id FROM bin_im INDEXED BY index_date_ordered_bin_im WHERE thread_id NOT NULL   UNION   SELECT DISTINCT thread_id FROM bin_ft INDEXED BY index_date_ordered_bin_ft WHERE thread_id NOT NULL )"

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    const-string p3, "im_threads"

    invoke-virtual {p0, p3, p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I

    move-result p1

    add-int/2addr p2, p1

    const-string p1, "updateAllThreads() end, affectedRows = "

    if-nez p2, :cond_6

    .line 1771
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v0, p0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    return p2

    :cond_6
    const-string p3, "canonical_addresses"

    const-string v2, "(   NOT EXISTS (     SELECT 1 FROM threads     WHERE \' \'||recipient_ids||\' \' LIKE \'% \'||canonical_addresses._id||\' %\'   )   AND NOT EXISTS (     SELECT 1 FROM im_threads     WHERE \' \'||recipient_ids||\' \' like \'% \'||canonical_addresses._id||\' %\'   ) )"

    .line 1776
    invoke-virtual {p0, p3, v2, v1}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I

    const-wide/16 v1, -0x1

    .line 1787
    invoke-static {p0, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->deleteObsoleteThreadCategory(Landroid/database/sqlite/SQLiteDatabase;J)V

    .line 1789
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v0, p0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    return p2
.end method

.method private updateCmasTriggers(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string v0, "DROP TRIGGER IF EXISTS Cmas_cleanup;"

    .line 2818
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS cmas_update_thread_alert_expired_on_update;"

    .line 2819
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 2820
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createCmasTriggers(Landroid/database/sqlite/SQLiteDatabase;)V

    return-void
.end method

.method private updateFailedMsgBoxType(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    .line 9128
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "UPDATE pdu SET msg_box=5 WHERE _id IN ("

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "SELECT pdu._id FROM pdu JOIN pending_msgs ON pdu._id=pending_msgs.msg_id WHERE err_type>=10 AND msg_box=4"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, ")"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    .line 9131
    :try_start_0
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception p0

    .line 9133
    invoke-virtual {p0}, Ljava/lang/Exception;->printStackTrace()V

    :goto_0
    return-void
.end method

.method public static updateFilesDirectories(Landroid/content/Context;Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const/4 v0, 0x0

    .line 9156
    invoke-static {p0, p1, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateFilesDirectories(Landroid/content/Context;Landroid/database/sqlite/SQLiteDatabase;Z)V

    return-void
.end method

.method public static updateFilesDirectories(Landroid/content/Context;Landroid/database/sqlite/SQLiteDatabase;Z)V
    .locals 11

    const-string v2, "parts"

    const-string v3, "part"

    const-string v4, "_data"

    move-object v0, p0

    move-object v1, p1

    move v5, p2

    .line 9160
    invoke-static/range {v0 .. v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateFilesDirectory(Landroid/content/Context;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V

    const-string v7, "parts"

    const-string v8, "spam_part"

    const-string v9, "_data"

    move-object v5, p0

    move-object v6, p1

    move v10, p2

    .line 9161
    invoke-static/range {v5 .. v10}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateFilesDirectory(Landroid/content/Context;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V

    const-string v2, "ft_files"

    const-string v3, "ft"

    const-string v4, "thumbnail_path"

    move v5, p2

    .line 9162
    invoke-static/range {v0 .. v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateFilesDirectory(Landroid/content/Context;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V

    const-string v7, "ft_files"

    const-string v8, "spam_ft"

    const-string v9, "thumbnail_path"

    move-object v5, p0

    .line 9163
    invoke-static/range {v5 .. v10}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateFilesDirectory(Landroid/content/Context;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V

    return-void
.end method

.method private static updateFilesDirectory(Landroid/content/Context;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
    .locals 7

    .line 9167
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "updateFilesDirectory(): dirName="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, ", table="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, ", columnName="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "TP/MmsSmsDatabaseHelper"

    invoke-static {v1, v0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 9168
    invoke-static {p3}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_2

    invoke-static {p4}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-eqz v0, :cond_0

    goto/16 :goto_1

    :cond_0
    const-string v0, ""

    const-string v2, "\') > 0"

    const-string v3, ", \'"

    const/4 v4, 0x0

    if-eqz p5, :cond_1

    const-string p5, "update path from ce path to de path"

    .line 9174
    invoke-static {v1, p5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9175
    invoke-static {p0}, Lcom/android/providers/telephony/ProviderUtil;->getCredentialEncryptedContext(Landroid/content/Context;)Landroid/content/Context;

    move-result-object p5

    .line 9177
    :try_start_0
    invoke-virtual {p5, p2, v4}, Landroid/content/Context;->getDir(Ljava/lang/String;I)Ljava/io/File;

    move-result-object p5

    invoke-virtual {p5}, Ljava/io/File;->getCanonicalPath()Ljava/lang/String;

    move-result-object p5

    .line 9179
    invoke-static {p5}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v5

    if-nez v5, :cond_1

    .line 9180
    sget-object v5, Ljava/io/File;->separator:Ljava/lang/String;

    invoke-virtual {p5, p2}, Ljava/lang/String;->lastIndexOf(Ljava/lang/String;)I

    move-result v6

    invoke-virtual {p5, v5, v6}, Ljava/lang/String;->lastIndexOf(Ljava/lang/String;I)I

    move-result v5

    .line 9181
    invoke-virtual {p5, v4, v5}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object p5

    .line 9182
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, " AND INSTR("

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception p5

    const-string v5, "updateFilesDirectory(): get ce directory failed!"

    .line 9185
    invoke-static {v1, v5, p5}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 9192
    :cond_1
    :goto_0
    :try_start_1
    invoke-static {p0}, Lcom/android/providers/telephony/ProviderUtil;->getDeviceEncryptedContext(Landroid/content/Context;)Landroid/content/Context;

    move-result-object p0

    .line 9193
    invoke-virtual {p0, p2, v4}, Landroid/content/Context;->getDir(Ljava/lang/String;I)Ljava/io/File;

    move-result-object p0

    invoke-virtual {p0}, Ljava/io/File;->getCanonicalPath()Ljava/lang/String;

    move-result-object p0

    .line 9195
    invoke-static {p0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result p5

    if-nez p5, :cond_2

    .line 9200
    sget-object p5, Ljava/io/File;->separator:Ljava/lang/String;

    invoke-virtual {p0, p2}, Ljava/lang/String;->lastIndexOf(Ljava/lang/String;)I

    move-result p2

    invoke-virtual {p0, p5, p2}, Ljava/lang/String;->lastIndexOf(Ljava/lang/String;I)I

    move-result p2

    .line 9201
    new-instance p5, Ljava/lang/StringBuilder;

    invoke-direct {p5}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p0, p2}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {p5, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v5, Ljava/io/File;->separator:Ljava/lang/String;

    invoke-virtual {p5, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p5

    .line 9207
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "UPDATE "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p3, " SET "

    invoke-virtual {v5, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p3, " = \'"

    invoke-virtual {v5, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 9208
    invoke-virtual {p0, v4, p2}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object p0

    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p0, "\' || SUBSTR("

    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p0, ", INSTR("

    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p0, "\')) WHERE INSTR("

    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    .line 9207
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1

    goto :goto_1

    :catch_1
    move-exception p0

    const-string p1, "updateFilesDirectory(): get new directory failed!"

    .line 9213
    invoke-static {v1, p1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    :cond_2
    :goto_1
    return-void
.end method

.method private static updateImThreadMessageType(Landroid/database/sqlite/SQLiteDatabase;J)V
    .locals 4

    .line 1648
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "updateImThreadMessageType threadId = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1, p2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "TP/MmsSmsDatabaseHelper"

    invoke-static {v1, v0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 1649
    sget-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_IM_THREADS_ON_DELETE_WITHOUT_TRIGGER:Ljava/lang/String;

    const/4 v1, 0x3

    new-array v1, v1, [Ljava/lang/Object;

    .line 1650
    invoke-static {p1, p2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v2

    const/4 v3, 0x0

    aput-object v2, v1, v3

    invoke-static {p1, p2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v2

    const/4 v3, 0x1

    aput-object v2, v1, v3

    invoke-static {p1, p2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p1

    const/4 p2, 0x2

    aput-object p1, v1, p2

    .line 1649
    invoke-virtual {p0, v0, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;[Ljava/lang/Object;)V

    return-void
.end method

.method private updatePartUpdateTheradOnDeleteTrigger(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "drop trigger update_threads_on_delete_part;"

    .line 10548
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER IF NOT EXISTS update_threads_on_delete_part  AFTER DELETE ON part  WHEN old.ct != \'text/plain\' AND old.ct != \'application/smil\'  BEGIN   UPDATE threads SET has_attachment =    CASE     (SELECT COUNT(*) FROM part JOIN pdu      WHERE pdu.thread_id = threads._id      AND part.ct != \'text/plain\' AND part.ct != \'application/smil\'      AND part.mid = pdu._id)   WHEN 0 THEN 0    ELSE 1    END   WHERE _id IN    (SELECT DISTINCT pdu.thread_id FROM part JOIN pdu ON pdu._id=part.mid       WHERE pdu._id=old.mid );  END"

    .line 10549
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method public static updateThread(Landroid/database/sqlite/SQLiteDatabase;J)I
    .locals 7

    const/4 v3, 0x1

    const/4 v4, 0x1

    const/4 v5, 0x0

    const/4 v6, 0x1

    move-object v0, p0

    move-wide v1, p1

    .line 1333
    invoke-static/range {v0 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThread(Landroid/database/sqlite/SQLiteDatabase;JZIZZ)I

    move-result p0

    return p0
.end method

.method public static updateThread(Landroid/database/sqlite/SQLiteDatabase;JZ)I
    .locals 7

    const/4 v4, 0x1

    const/4 v5, 0x0

    const/4 v6, 0x1

    move-object v0, p0

    move-wide v1, p1

    move v3, p3

    .line 1337
    invoke-static/range {v0 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThread(Landroid/database/sqlite/SQLiteDatabase;JZIZZ)I

    move-result p0

    return p0
.end method

.method private static updateThread(Landroid/database/sqlite/SQLiteDatabase;JZIZZ)I
    .locals 5

    .line 1351
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "updateThread(): threadId="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1, p2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v1, ", isCheckThreadValidation="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v1, ", needImUpdate="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", deleteObsoleteDelayed = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p6}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "TP/MmsSmsDatabaseHelper"

    invoke-static {v1, v0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    const/4 v0, 0x1

    const/4 v2, 0x0

    if-ne p4, v0, :cond_0

    goto :goto_0

    :cond_0
    move v0, v2

    :goto_0
    const-wide/16 v3, 0x0

    cmp-long p4, p1, v3

    if-gez p4, :cond_1

    const/4 p1, 0x0

    .line 1357
    invoke-static {p0, p1, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateAllThreads(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;)I

    move-result p0

    .line 1358
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string p2, "updateThread(): if threadId is less than 0, affectedRows="

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {v1, p1}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    return p0

    :cond_1
    if-eqz p3, :cond_2

    .line 1363
    invoke-static {p0, p1, p2, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->checkThreadValidation(Landroid/database/sqlite/SQLiteDatabase;JZ)I

    move-result p3

    if-lez p3, :cond_2

    .line 1365
    new-instance p4, Ljava/lang/StringBuilder;

    invoke-direct {p4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "updateThread(): affectedRowsForValidation = "

    invoke-virtual {p4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p4, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p4

    invoke-static {v1, p4}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 1367
    invoke-static {p0, p1, p2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->checkThreadDeleted(Landroid/database/sqlite/SQLiteDatabase;J)Z

    move-result p4

    if-eqz p4, :cond_2

    const-string p4, "updateThread(): end, threads/im_threads both deleted"

    .line 1368
    invoke-static {v1, p4}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 1370
    invoke-static {p0, p1, p2, p6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->deleteObsoleteMessages(Landroid/database/sqlite/SQLiteDatabase;JZ)V

    return p3

    .line 1377
    :cond_2
    invoke-static {p0, p1, p2, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThreadView(Landroid/database/sqlite/SQLiteDatabase;JZ)I

    move-result p3

    add-int/2addr v2, p3

    .line 1378
    invoke-static {p0, p1, p2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThreadError(Landroid/database/sqlite/SQLiteDatabase;J)I

    move-result p3

    add-int/2addr v2, p3

    .line 1379
    invoke-static {p0, p1, p2, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThreadBinStatus(Landroid/database/sqlite/SQLiteDatabase;JZ)I

    move-result p3

    add-int/2addr v2, p3

    if-eqz v0, :cond_3

    if-eqz p5, :cond_3

    .line 1383
    invoke-static {p0, p1, p2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateImThreadMessageType(Landroid/database/sqlite/SQLiteDatabase;J)V

    .line 1386
    :cond_3
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p1, "updateThread(): end, affectedRows = "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v1, p0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    return v2
.end method

.method public static updateThread(Landroid/database/sqlite/SQLiteDatabase;JZZ)I
    .locals 7

    const/4 v4, 0x1

    const/4 v6, 0x1

    move-object v0, p0

    move-wide v1, p1

    move v3, p3

    move v5, p4

    .line 1341
    invoke-static/range {v0 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThread(Landroid/database/sqlite/SQLiteDatabase;JZIZZ)I

    move-result p0

    return p0
.end method

.method public static updateThread(Landroid/database/sqlite/SQLiteDatabase;JZZZ)I
    .locals 7

    const/4 v4, 0x1

    move-object v0, p0

    move-wide v1, p1

    move v3, p3

    move v5, p4

    move v6, p5

    .line 1346
    invoke-static/range {v0 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThread(Landroid/database/sqlite/SQLiteDatabase;JZIZZ)I

    move-result p0

    return p0
.end method

.method public static updateThreadBinStatus(Landroid/database/sqlite/SQLiteDatabase;JZ)I
    .locals 6

    .line 1617
    invoke-static {p1, p2}, Ljava/lang/String;->valueOf(J)Ljava/lang/String;

    move-result-object p1

    .line 1620
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    .line 1621
    invoke-static {}, Lcom/android/providers/telephony/bin/BinDbConstants;->getThreadBinStatusQuery()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, " AS result_bin_status"

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    const/16 v0, 0xa

    new-array v0, v0, [Ljava/lang/String;

    const/4 v1, 0x0

    aput-object p1, v0, v1

    const/4 v2, 0x1

    aput-object p1, v0, v2

    const/4 v3, 0x2

    aput-object p1, v0, v3

    const/4 v4, 0x3

    aput-object p1, v0, v4

    const/4 v4, 0x4

    aput-object p1, v0, v4

    const/4 v4, 0x5

    aput-object p1, v0, v4

    const/4 v4, 0x6

    aput-object p1, v0, v4

    const/4 v4, 0x7

    aput-object p1, v0, v4

    const/16 v4, 0x8

    aput-object p1, v0, v4

    const/16 v4, 0x9

    aput-object p1, v0, v4

    .line 1620
    invoke-virtual {p0, p2, v0}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object p2

    if-eqz p2, :cond_1

    .line 1623
    :try_start_0
    invoke-interface {p2}, Landroid/database/Cursor;->moveToFirst()Z

    move-result v0

    if-eqz v0, :cond_1

    const-string v0, "result_bin_status"

    .line 1624
    invoke-interface {p2, v0}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v0

    invoke-interface {p2, v0}, Landroid/database/Cursor;->getInt(I)I

    move-result v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_1

    :catchall_0
    move-exception p0

    if-eqz p2, :cond_0

    .line 1620
    :try_start_1
    invoke-interface {p2}, Landroid/database/Cursor;->close()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    goto :goto_0

    :catchall_1
    move-exception p1

    invoke-virtual {p0, p1}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    :cond_0
    :goto_0
    throw p0

    :cond_1
    const/4 v0, -0x1

    :goto_1
    if-eqz p2, :cond_2

    .line 1626
    invoke-interface {p2}, Landroid/database/Cursor;->close()V

    .line 1628
    :cond_2
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "updateThreadBinStatus - binStatus = "

    invoke-virtual {p2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    const-string v4, "TP/MmsSmsDatabaseHelper"

    invoke-static {v4, p2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    if-gez v0, :cond_3

    return v1

    .line 1634
    :cond_3
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "UPDATE threads SET bin_status="

    invoke-virtual {p2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " WHERE _id = ? AND bin_status != ?"

    invoke-virtual {p2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    new-array v4, v3, [Ljava/lang/String;

    aput-object p1, v4, v1

    .line 1635
    invoke-static {v0}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v5

    aput-object v5, v4, v2

    .line 1634
    invoke-virtual {p0, p2, v4}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;[Ljava/lang/Object;)V

    if-nez p3, :cond_4

    return v1

    .line 1641
    :cond_4
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "UPDATE im_threads SET bin_status="

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p3, " WHERE normal_thread_id = ? AND bin_status != ?"

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    new-array p3, v3, [Ljava/lang/String;

    aput-object p1, p3, v1

    .line 1642
    invoke-static {v0}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object p1

    aput-object p1, p3, v2

    .line 1641
    invoke-virtual {p0, p2, p3}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;[Ljava/lang/Object;)V

    return v1
.end method

.method private static updateThreadError(Landroid/database/sqlite/SQLiteDatabase;J)I
    .locals 3

    const/4 v0, 0x2

    new-array v0, v0, [Ljava/lang/Object;

    .line 1610
    invoke-static {p1, p2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v1

    const/4 v2, 0x0

    aput-object v1, v0, v2

    invoke-static {p1, p2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p1

    const/4 p2, 0x1

    aput-object p1, v0, p2

    const-string p1, " UPDATE threads SET error=(   SELECT count(*) FROM sms INDEXED BY index_date_ordered_sms   WHERE thread_id=? AND type=5   LIMIT 1 ) WHERE _id=?"

    .line 1604
    invoke-virtual {p0, p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;[Ljava/lang/Object;)V

    return v2
.end method

.method private static updateThreadView(Landroid/database/sqlite/SQLiteDatabase;JZ)I
    .locals 4

    .line 1563
    sget v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_MSG_QUERY_PARAMS_COUNT:I

    new-array v0, v0, [Ljava/lang/Object;

    const/4 v1, 0x0

    move v2, v1

    .line 1564
    :goto_0
    sget v3, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_MSG_QUERY_PARAMS_COUNT:I

    if-ge v2, v3, :cond_0

    .line 1565
    invoke-static {p1, p2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v3

    aput-object v3, v0, v2

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 1567
    :cond_0
    sget-object v2, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_MSG_QUERY:Ljava/lang/String;

    invoke-virtual {p0, v2, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;[Ljava/lang/Object;)V

    .line 1572
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "updateThreadView(): sUpgradeVersion = "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v2, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sUpgradeVersion:I

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", db.getVersion() = "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Landroid/database/sqlite/SQLiteDatabase;->getVersion()I

    move-result v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v2, "TP/MmsSmsDatabaseHelper"

    invoke-static {v2, v0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    if-eqz p3, :cond_3

    .line 1573
    sget p3, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sUpgradeVersion:I

    const/16 v0, 0x45

    if-ge p3, v0, :cond_1

    invoke-virtual {p0}, Landroid/database/sqlite/SQLiteDatabase;->getVersion()I

    move-result p3

    const/16 v0, 0x46

    if-lt p3, v0, :cond_3

    .line 1581
    :cond_1
    sget p3, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_RCS_QUERY_PARAMS_COUNT:I

    new-array p3, p3, [Ljava/lang/Object;

    move v0, v1

    .line 1582
    :goto_1
    sget v2, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_RCS_QUERY_PARAMS_COUNT:I

    if-ge v0, v2, :cond_2

    .line 1583
    invoke-static {p1, p2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v2

    aput-object v2, p3, v0

    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    :cond_2
    const/4 p1, 0x7

    .line 1585
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v2

    invoke-static {v2, v3}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p2

    aput-object p2, p3, p1

    .line 1586
    sget-object p1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_VIEW_RCS_QUERY:Ljava/lang/String;

    invoke-virtual {p0, p1, p3}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;[Ljava/lang/Object;)V

    .line 1591
    :cond_3
    invoke-virtual {p0}, Landroid/database/sqlite/SQLiteDatabase;->getVersion()I

    move-result p0

    const/16 p1, 0x68

    if-ge p0, p1, :cond_4

    :cond_4
    return v1
.end method

.method private updateThreadsAttachmentColumn(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "UPDATE threads SET has_attachment=1 WHERE _id IN   (SELECT DISTINCT pdu.thread_id FROM part    JOIN pdu ON pdu._id=part.mid    WHERE part.ct != \'text/plain\' AND part.ct != \'application/smil\')"

    .line 10338
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private updateThreadsMessageTypeTriggers(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "updateThreadsMessageTypeTriggers start"

    .line 10832
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "DROP TRIGGER IF EXISTS update_threads_message_type_on_update_pending_msgs;"

    .line 10833
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS update_threads_message_type_on_insert_pending_msgs;"

    .line 10834
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS update_threads_message_type_on_update_sms;"

    .line 10835
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS update_threads_message_type_on_update_pdu;"

    .line 10836
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS update_threads_message_type_on_insert_sms;"

    .line 10837
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS update_threads_message_type_on_insert_pdu;"

    .line 10838
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS update_threads_message_type_on_delete_sms;"

    .line 10839
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS update_threads_message_type_on_delete_pdu;"

    .line 10840
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 10841
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createThreadsMessageTypeTriggers(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string p0, "updateThreadsMessageTypeTriggers end"

    .line 10842
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private updateThreadsOnUpdatePdu(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "drop trigger update_threads_on_update_pdu;"

    .line 10553
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER update_threads_on_update_pdu  AFTER UPDATE of thread_id ON pdu  BEGIN   UPDATE threads SET has_attachment=1 WHERE _id IN    (SELECT pdu.thread_id FROM part JOIN pdu      WHERE part.ct != \'text/plain\' AND part.ct != \'application/smil\'      AND part.mid = pdu._id); END"

    .line 10554
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private updateThreadsUnreadCountColumn(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, " UPDATE threads SET unread_count =    (SELECT count(*) FROM sms    WHERE threads._id = thread_id   AND sms.read = 0 AND sms.type = 1)    + (SELECT count(*) FROM wpm    WHERE threads._id = thread_id   AND wpm.read = 0)    + (SELECT count(*) FROM pdu    WHERE threads._id = thread_id   AND pdu.read = 0 AND msg_box = 1    AND (m_type = 128 OR m_type = 132 OR m_type = 130))  WHERE _id in  (SELECT thread_id FROM sms where sms.read = 0)  OR _id in (select thread_id from pdu where pdu.read = 0); "

    .line 10349
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private updateThreadsUnreadCountTrigger(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "DROP TRIGGER IF EXISTS pdu_update_thread_on_insert;"

    .line 10355
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER pdu_update_thread_on_insert AFTER INSERT ON pdu   WHEN new.m_type=132    OR new.m_type=130    OR new.m_type=128 BEGIN  UPDATE threads SET    date = new.date * 1000,     snippet = substr(new.sub,1,500),     snippet_cs = new.sub_cs,    snippet_type = new.msg_box  WHERE threads._id = new.thread_id;   UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM pdu          WHERE read = 0            AND thread_id = threads._id             AND (m_type=132 OR m_type=130 OR m_type=128))       WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; END;"

    .line 10356
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS sms_update_thread_on_insert;"

    .line 10361
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER sms_update_thread_on_insert AFTER INSERT ON sms BEGIN  UPDATE threads SET    date = new.date,     snippet = substr(new.body,1,300),     snippet_cs = 0,    snippet_type = new.type  WHERE threads._id = new.thread_id  AND (new.reserved = 0 OR (new.reserved = 1 AND new.type = 3));   UPDATE threads SET date = NULL        WHERE (threads._id = new.thread_id)           AND new.reserved > 0           AND 1 = (SELECT COUNT(sms._id) FROM sms WHERE thread_id = new.thread_id)           AND 0 = (SELECT COUNT(wpm._id) FROM wpm WHERE thread_id = new.thread_id)           AND 0 = (SELECT COUNT(pdu._id) FROM pdu WHERE thread_id = new.thread_id AND (m_type=132 OR m_type=130 OR m_type=128));   UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM sms          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; END;"

    .line 10362
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS pdu_update_thread_date_on_update;"

    .line 10365
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER pdu_update_thread_date_on_update AFTER  UPDATE OF date, sub  ON pdu   WHEN new.m_type=132    OR new.m_type=130    OR new.m_type=128 BEGIN  UPDATE threads SET    date = new.date * 1000,     snippet = substr(new.sub,1,500),     snippet_cs = new.sub_cs,    snippet_type = new.msg_box  WHERE threads._id = new.thread_id; END;"

    .line 10367
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS pdu_update_thread_type_on_update;"

    .line 10373
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER pdu_update_thread_type_on_update AFTER  UPDATE OF msg_box  ON pdu   WHEN new.m_type=132    OR new.m_type=130    OR new.m_type=128 BEGIN  UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM pdu          WHERE read = 0            AND thread_id = threads._id             AND (m_type=132 OR m_type=130 OR m_type=128))       WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id;   UPDATE threads SET snippet_type = (    SELECT snippet_type FROM (      SELECT date * 1000 AS date, msg_box AS snippet_type, thread_id FROM pdu WHERE thread_id = new.thread_id      UNION       SELECT date, type AS snippet_type, thread_id FROM sms WHERE thread_id = new.thread_id)    ORDER BY date DESC LIMIT 1)  WHERE threads._id = new.thread_id; END;"

    .line 10375
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS sms_update_thread_type_on_update;"

    .line 10381
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER sms_update_thread_type_on_update AFTER  UPDATE OF type  ON sms BEGIN  UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM sms          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id;   UPDATE threads SET snippet_type = (    SELECT snippet_type FROM (      SELECT date * 1000 AS date, msg_box AS snippet_type, thread_id FROM pdu WHERE thread_id = new.thread_id      UNION       SELECT date, type AS snippet_type, thread_id FROM sms WHERE thread_id = new.thread_id)    ORDER BY date DESC LIMIT 1)  WHERE threads._id = new.thread_id; END;"

    .line 10383
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS sms_update_thread_date_subject_on_update;"

    .line 10388
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS sms_update_thread_date_on_update;"

    .line 10389
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER sms_update_thread_date_on_update AFTER  UPDATE OF body, date  ON sms BEGIN  UPDATE threads SET    date = new.date,     snippet = substr(new.body,1,300),     snippet_cs = 0,    snippet_type = new.type  WHERE threads._id = new.thread_id; END;"

    .line 10390
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS pdu_update_thread_on_delete;"

    .line 10396
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER pdu_update_thread_on_delete AFTER DELETE ON pdu BEGIN   UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = old.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = old.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = old.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3)    , unread_count =    (SELECT count(*) FROM sms LEFT JOIN threads    ON threads._id = thread_id   WHERE thread_id = old.thread_id   AND sms.read = 0 AND sms.type = 1) +    (SELECT count(*) FROM wpm LEFT JOIN threads    ON threads._id = thread_id   WHERE thread_id = old.thread_id   AND wpm.read = 0) +    (SELECT count(*) FROM pdu LEFT JOIN threads    ON threads._id = thread_id   WHERE thread_id = old.thread_id    AND pdu.read = 0    AND (m_type = 128 OR m_type = 132 OR m_type = 130)   AND msg_box = 1)   WHERE threads._id = old.thread_id;   UPDATE threads SET snippet =    (SELECT substr(snippet,1,300) FROM     (SELECT date * 1000 AS date, sub AS snippet, sub_cs AS snippet_cs, thread_id FROM pdu WHERE thread_id = OLD.thread_id      UNION SELECT date, body AS snippet, 0 AS snippet_cs, thread_id FROM sms WHERE thread_id = OLD.thread_id)    ORDER BY date DESC LIMIT 1)   WHERE threads._id = OLD.thread_id;   UPDATE threads SET snippet_cs =    (SELECT snippet_cs FROM     (SELECT date * 1000 AS date, sub AS snippet, sub_cs AS snippet_cs, thread_id FROM pdu WHERE thread_id = OLD.thread_id      UNION SELECT date, body AS snippet, 0 AS snippet_cs, thread_id FROM sms WHERE thread_id = OLD.thread_id)    ORDER BY date DESC LIMIT 1)   WHERE threads._id = OLD.thread_id;   UPDATE threads SET snippet_type =    (SELECT snippet_type FROM     (SELECT date * 1000 AS date, sub AS snippet, sub_cs AS snippet_cs, thread_id, msg_box AS snippet_type FROM pdu WHERE thread_id = OLD.thread_id      UNION SELECT date, body AS snippet, 0 AS snippet_cs, thread_id, type AS snippet_type FROM sms WHERE thread_id = OLD.thread_id)    ORDER BY date DESC LIMIT 1)   WHERE threads._id = OLD.thread_id; END;"

    .line 10398
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS pdu_update_thread_read_on_update;"

    .line 10410
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER pdu_update_thread_read_on_update AFTER  UPDATE OF read  ON pdu   WHEN new.m_type=132    OR new.m_type=130    OR new.m_type=128 BEGIN   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM pdu          WHERE read = 0            AND thread_id = threads._id             AND (m_type=132 OR m_type=130 OR m_type=128))       WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id;    UPDATE threads SET unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id           AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id           AND wpm.read = 0) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id            AND pdu.read = 0            AND (m_type = 128 OR m_type = 132 OR m_type = 130)           AND msg_box = 1)   WHERE threads._id = new.thread_id; END;"

    .line 10412
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS sms_update_thread_read_on_update;"

    .line 10421
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER sms_update_thread_read_on_update AFTER  UPDATE OF read  ON sms BEGIN   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM sms          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id;    UPDATE threads SET unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id           AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id           AND wpm.read = 0) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id            AND pdu.read = 0            AND (m_type = 128 OR m_type = 132 OR m_type = 130)           AND msg_box = 1)   WHERE threads._id = new.thread_id; END;"

    .line 10423
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private upgradeAddressTableToAutoIncrement(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string v0, "canonical_addresses"

    .line 10154
    invoke-direct {p0, p1, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->hasAutoIncrement(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)Z

    move-result p0

    const-string v0, "TP/MmsSmsDatabaseHelper"

    if-eqz p0, :cond_0

    const-string p0, "[MmsSmsDb] upgradeAddressTableToAutoIncrement: already upgraded"

    .line 10155
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    :cond_0
    const-string p0, "[MmsSmsDb] upgradeAddressTableToAutoIncrement: upgrading"

    .line 10158
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p0, "CREATE TABLE canonical_addresses_temp (_id INTEGER PRIMARY KEY AUTOINCREMENT,address TEXT);"

    .line 10163
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "INSERT INTO canonical_addresses_temp SELECT * from canonical_addresses;"

    .line 10166
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE canonical_addresses;"

    .line 10167
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "ALTER TABLE canonical_addresses_temp RENAME TO canonical_addresses;"

    .line 10168
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private upgradeDatabaseForCmasTable(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "Inside upgradeDatabaseForCmas"

    .line 9767
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "sms"

    const-string v2, "service_category"

    .line 9770
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    const-string v1, "upgradeDatabaseToVersion59  copy cmas fields from sms table to cmas table"

    .line 9771
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "INSERT INTO cmas (sms_id, thread_id, service_category, category, response_type, severity, urgency, certainty, identifier, alert_handling, expires, language, expired) SELECT _id, thread_id, service_category, category, response_type, severity, urgency,certainty, identifier,alert_handling,expires,language,cmas_sms_expired FROM sms WHERE service_category IS NOT NULL"

    .line 9772
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    goto :goto_0

    :cond_0
    const-string v1, "upgradeDatabaseToVersion59 CMAS table not Updated!!!"

    .line 9777
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9781
    :goto_0
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UpdateSmsTableDiffColumn(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string p0, "After UpgradeSmsTableDiffColumn"

    .line 9782
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p0, "UPDATE threads SET type = 100 WHERE  _id in (SELECT T._id FROM threads T, canonical_addresses  C WHERE T.recipient_ids = C._id and C.address = \'#CMAS#Presidential\');"

    .line 9785
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "UPDATE threads SET type = 101 WHERE  _id in (SELECT T._id FROM threads T, canonical_addresses  C WHERE T.recipient_ids = C._id and C.address = \'#CMAS#Extreme\');"

    .line 9787
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "UPDATE threads SET type = 102 WHERE  _id in (SELECT T._id FROM threads T, canonical_addresses  C WHERE T.recipient_ids = C._id and C.address = \'#CMAS#Severe\');"

    .line 9789
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "UPDATE threads SET type = 103 WHERE  _id in (SELECT T._id FROM threads T, canonical_addresses  C WHERE T.recipient_ids = C._id and C.address = \'#CMAS#Amber\');"

    .line 9791
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "UPDATE threads SET type = 104 WHERE  _id in (SELECT T._id FROM threads T, canonical_addresses  C WHERE T.recipient_ids = C._id and C.address = \'#CMAS#Test\');"

    .line 9794
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "UPDATE cmas SET expired = 0 WHERE thread_id IN (SELECT _id FROM threads WHERE type = 100 AND cmas_expired =0);"

    .line 9799
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "UPDATE threads SET alert_expired = 0 WHERE _id IN (SELECT _id FROM threads WHERE type = 100 AND cmas_expired =0);"

    .line 9801
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "After Upgrade thread type for cmas"

    .line 9804
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion100(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion100 start"

    .line 8183
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion100 end"

    .line 8185
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion101(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion101 start"

    .line 8188
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion101 end"

    .line 8190
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion102(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion102 start"

    .line 8195
    invoke-static {v0, v1}, Landroid/util/Log;->secV(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "sms"

    const-string v2, "announcements_subtype"

    .line 8196
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_0

    const-string v2, "upgradeDatabaseToVersion102 sms.announcements_type Column Exist"

    .line 8197
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string v2, "ALTER TABLE sms ADD COLUMN announcements_subtype INTEGER DEFAULT 0"

    .line 8199
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string v2, "announcements_scenario_id"

    .line 8201
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_1

    const-string p0, "upgradeDatabaseToVersion102 sms.announcements_scenario_id Column Exist"

    .line 8202
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :cond_1
    const-string p0, "ALTER TABLE sms ADD COLUMN announcements_scenario_id TEXT"

    .line 8204
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1
    const-string p0, "upgradeDatabaseToVersion102 end"

    .line 8207
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion103(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string v0, "upgradeDatabaseToVersion103 start"

    .line 8212
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "DROP TRIGGER IF EXISTS update_threads_autoincrement_count_on_insert_im_threads;"

    .line 8213
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p1, "upgradeDatabaseToVersion103 end"

    .line 8214
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion104(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 14

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion104 start"

    .line 8218
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v3, "upgradeDatabaseToVersion104"

    const-string v5, "threads"

    const-string v6, "message_date"

    const-string v7, "INTEGER"

    move-object v2, p0

    move-object v4, p1

    .line 8219
    invoke-direct/range {v2 .. v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v9, "upgradeDatabaseToVersion104"

    const-string v11, "im_threads"

    const-string v12, "message_date"

    const-string v13, "INTEGER"

    move-object v8, p0

    move-object v10, p1

    .line 8220
    invoke-direct/range {v8 .. v13}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 8221
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->fillMessagesDate(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string p0, "upgradeDatabaseToVersion104 end"

    .line 8222
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion105(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string v0, "upgradeDatabaseToVersion105 start"

    .line 8226
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "DROP TRIGGER IF EXISTS update_threads_message_type_on_update_sms;"

    .line 8228
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 8229
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "CREATE TRIGGER update_threads_message_type_on_update_sms   AFTER UPDATE OF type ON sms  WHEN OLD.type != NEW.type BEGIN "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "  WHERE _id = NEW.thread_id; END;"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS update_threads_message_type_on_update_pdu;"

    .line 8236
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 8237
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "CREATE TRIGGER update_threads_message_type_on_update_pdu   AFTER UPDATE OF msg_box ON pdu  WHEN OLD.msg_box != NEW.msg_box BEGIN "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v2, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS update_threads_message_type_on_insert_sms;"

    .line 8244
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 8245
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "CREATE TRIGGER update_threads_message_type_on_insert_sms   AFTER INSERT ON sms  WHEN NEW.type >= 0 BEGIN "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v2, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS update_threads_message_type_on_insert_pdu;"

    .line 8252
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 8253
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "CREATE TRIGGER update_threads_message_type_on_insert_pdu   AFTER INSERT ON pdu  WHEN NEW.msg_box >= 0 BEGIN "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v2, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS update_threads_message_type_on_delete_sms;"

    .line 8260
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 8261
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "CREATE TRIGGER update_threads_message_type_on_delete_sms   AFTER DELETE ON sms  WHEN OLD.type >= 0 BEGIN "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_DELETE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "  WHERE _id = OLD.thread_id; END;"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS update_threads_message_type_on_delete_pdu;"

    .line 8268
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 8269
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "CREATE TRIGGER update_threads_message_type_on_delete_pdu   AFTER DELETE ON pdu  WHEN OLD.msg_box >= 0 BEGIN "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v2, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_DELETE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p1, "upgradeDatabaseToVersion105 end"

    .line 8276
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion106(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion106 start"

    .line 8280
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion106 end"

    .line 8282
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion107(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion107 start"

    .line 8286
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion107 end"

    .line 8288
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion108(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion108 start"

    .line 8292
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion108 end"

    .line 8294
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion109(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion109 start"

    .line 8298
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion109 end"

    .line 8300
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion110(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 8

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion110 start"

    .line 8304
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v3, "upgradeDatabaseToVersion110"

    const-string v5, "im_threads"

    const-string v6, "thread_service_type"

    const-string v7, "INTEGER DEFAULT -1"

    move-object v2, p0

    move-object v4, p1

    .line 8306
    invoke-direct/range {v2 .. v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string p0, "upgradeDatabaseToVersion110 end"

    .line 8308
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion111(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion111 start"

    .line 8312
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8314
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addDeviceNameColumn(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string p0, "UPDATE im SET user_alias = user_alias"

    .line 8316
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "UPDATE ft SET user_alias = user_alias"

    .line 8317
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "upgradeDatabaseToVersion111 end"

    .line 8319
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion112(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string v0, "upgradeDatabaseToVersion112 start"

    .line 8323
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "DROP TRIGGER IF EXISTS im_update_thread_on_insert;"

    .line 8325
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER im_update_thread_on_insert AFTER INSERT ON im BEGIN  UPDATE im_threads SET    date = new.date,    snippet =        CASE            WHEN new.display_notification_status = 22 THEN \'/#UnreadTimedMsg@/\'           WHEN new.message_type >= 105 and new.body is NULL  THEN \'/#Sticker@/\'           WHEN new.service_type = 1 and new.content_type = \'107\'  THEN \'/#Sticker@/\'           WHEN new.secret_message = 1  THEN \'/#RcsSecretMessage@/\'           ELSE substr(new.body ,1,300)        END     , snippet_cs = 0    , snippet_type = new.type  WHERE (im_threads.normal_thread_id = new.thread_id         AND new.message_type NOT IN (1,2,3,4,8,9,10,11,12,13) AND new.reserved = 0 AND new.hidden = 0);  UPDATE im_threads SET message_count =      (SELECT COUNT(im._id) FROM im LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id       AND im.type != 3 ) +      (SELECT COUNT(ft._id) FROM ft LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id      ) , unread_count =        (SELECT count(*) FROM im LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND im.read = 0 AND im.type = 1) +        (SELECT count(*) FROM ft LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND ft.read = 0 AND ft.type = 1)   WHERE im_threads.normal_thread_id = new.thread_id;   UPDATE im_threads SET read =     CASE (SELECT COUNT(*)          FROM im          WHERE read = 0            AND thread_id = im_threads.normal_thread_id)      WHEN 0 THEN 1      ELSE 0    END  WHERE im_threads.normal_thread_id = new.thread_id; END;"

    .line 8326
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS im_update_thread_on_update;"

    .line 8329
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER im_update_thread_on_update AFTER  UPDATE OF date  ON im BEGIN  UPDATE im_threads SET    date = new.date,    snippet =        CASE            WHEN new.display_notification_status = 22 THEN \'/#UnreadTimedMsg@/\'           WHEN new.message_type >= 105 and new.body is NULL  THEN \'/#Sticker@/\'           WHEN new.service_type = 1 and new.content_type = \'107\'  THEN \'/#Sticker@/\'           WHEN new.secret_message = 1  THEN \'/#RcsSecretMessage@/\'           ELSE substr(new.body ,1,300)        END     , snippet_cs = 0    , snippet_type = new.type  WHERE (im_threads.normal_thread_id = new.thread_id         AND new.message_type NOT IN (1,2,3,4,8,9,10,11,12,13) AND new.reserved = 0 AND new.hidden = 0);  UPDATE im_threads SET message_count =      (SELECT COUNT(im._id) FROM im LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id       AND im.type != 3 ) +      (SELECT COUNT(ft._id) FROM ft LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id      ) , unread_count =        (SELECT count(*) FROM im LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND im.read = 0 AND im.type = 1) +        (SELECT count(*) FROM ft LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND ft.read = 0 AND ft.type = 1)   WHERE im_threads.normal_thread_id = new.thread_id;   UPDATE im_threads SET read =     CASE (SELECT COUNT(*)          FROM im          WHERE read = 0            AND thread_id = im_threads.normal_thread_id)      WHEN 0 THEN 1      ELSE 0    END  WHERE im_threads.normal_thread_id = new.thread_id; END;"

    .line 8330
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS ft_update_thread_on_insert;"

    .line 8334
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER ft_update_thread_on_insert AFTER INSERT ON ft BEGIN  UPDATE im_threads SET    date = new.date,    snippet =        CASE            WHEN (new.message_type = 80 or new.message_type = 81)  THEN \'/#EasyShare@/\'           WHEN new.display_notification_status = 22 THEN \'/#UnreadTimedMsg@/\'           WHEN new.secret_message = 1  THEN \'/#RcsSecretMessage@/\'           ELSE new.file_name       END    , snippet_cs = 0   , snippet_type = new.type  WHERE im_threads.normal_thread_id = new.thread_id AND new.reserved = 0 AND new.hidden = 0;  UPDATE im_threads SET message_count =      (SELECT COUNT(im._id) FROM im LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id       AND im.type != 3 ) +      (SELECT COUNT(ft._id) FROM ft LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id      ) , unread_count =        (SELECT count(*) FROM im LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND im.read = 0 AND im.type = 1) +        (SELECT count(*) FROM ft LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND ft.read = 0 AND ft.type = 1)   WHERE im_threads.normal_thread_id = new.thread_id;   UPDATE im_threads SET read =     CASE (SELECT COUNT(*)          FROM ft          WHERE read = 0            AND thread_id = im_threads.normal_thread_id)      WHEN 0 THEN 1      ELSE 0    END  WHERE im_threads.normal_thread_id = new.thread_id; END;"

    .line 8335
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p1, "upgradeDatabaseToVersion112 end"

    .line 8339
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion113(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion113 start"

    .line 8343
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "wpm"

    .line 8346
    invoke-static {v1}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_0

    .line 8347
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p1, "upgradeDatabaseToVersion113 wpm."

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v1}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " Column Exist"

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 8349
    :cond_0
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "ALTER TABLE wpm ADD COLUMN "

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v1}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " INTEGER DEFAULT "

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "default"

    invoke-static {v1}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string p0, "upgradeDatabaseToVersion113 end"

    .line 8353
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion114(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion114 start"

    .line 8357
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8359
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addDeviceNameColumn(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string v1, "UPDATE pdu SET exp = exp WHERE m_type=130;"

    .line 8362
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 8366
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->changeTriggerPduObsoleteThread(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string p0, "upgradeDatabaseToVersion114 end"

    .line 8368
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion115(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion115 start"

    .line 8373
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion115 end"

    .line 8375
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion116(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion116 start"

    .line 8379
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion116 end"

    .line 8381
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion117(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion117 start"

    .line 8385
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8387
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addDeviceNameColumn(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string p0, "upgradeDatabaseToVersion117 end"

    .line 8389
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion118(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion118 start"

    .line 8393
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8395
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addDeviceNameColumn(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string p0, "upgradeDatabaseToVersion118 end"

    .line 8397
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion119(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion119 start"

    .line 8401
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8405
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion82(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string p0, "upgradeDatabaseToVersion119 end"

    .line 8407
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion120(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion120 start"

    .line 8411
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion120 end"

    .line 8413
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion121(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion121 start"

    .line 8418
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion121 end"

    .line 8420
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion122(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string v0, "upgradeDatabaseToVersion122 start"

    .line 8425
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "CREATE VIEW IF NOT EXISTS sms_restricted AS SELECT * FROM sms WHERE type=1 OR type=2;"

    .line 8426
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE VIEW IF NOT EXISTS pdu_restricted  AS SELECT * FROM pdu WHERE (msg_box=1 OR msg_box=2) AND (m_type!=130);"

    .line 8431
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p1, "upgradeDatabaseToVersion122 end"

    .line 8438
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion123(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 14

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion123 start"

    .line 8442
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v3, "upgradeDatabaseToVersion123"

    const-string v5, "im"

    const-string v6, "safe_message"

    const-string v7, "INTEGER DEFAULT 0"

    move-object v2, p0

    move-object v4, p1

    .line 8444
    invoke-direct/range {v2 .. v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v9, "upgradeDatabaseToVersion123"

    const-string v11, "ft"

    const-string v12, "safe_message"

    const-string v13, "INTEGER DEFAULT 0"

    move-object v8, p0

    move-object v10, p1

    .line 8445
    invoke-direct/range {v8 .. v13}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion123"

    const-string v4, "spam_im"

    const-string v5, "safe_message"

    const-string v6, "INTEGER DEFAULT 0"

    move-object v1, p0

    move-object v3, p1

    .line 8446
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v8, "upgradeDatabaseToVersion123"

    const-string v10, "spam_ft"

    const-string v11, "safe_message"

    const-string v12, "INTEGER DEFAULT 0"

    move-object v7, p0

    move-object v9, p1

    .line 8447
    invoke-direct/range {v7 .. v12}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string p0, "upgradeDatabaseToVersion123 end"

    .line 8449
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion124(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion124 start"

    .line 8453
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "threads"

    const-string v2, "pa_ownnumber"

    .line 8454
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    const-string v1, "upgradeDatabaseToVersion124 threads pa_ownnumber Column Exist"

    .line 8455
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string v1, "ALTER TABLE threads ADD COLUMN pa_ownnumber TEXT"

    .line 8457
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string v1, "im_threads"

    .line 8459
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_1

    const-string p0, "upgradeDatabaseToVersion124 im_threads pa_ownnumber Column Exist"

    .line 8460
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :cond_1
    const-string p0, "ALTER TABLE im_threads ADD COLUMN pa_ownnumber TEXT"

    .line 8462
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1
    return-void
.end method

.method private upgradeDatabaseToVersion125(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion125 start"

    .line 8467
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion125 end"

    .line 8469
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion126(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 14

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion126 start"

    .line 8473
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v3, "upgradeDatabaseToVersion126"

    const-string v5, "ft"

    const-string v6, "imdn_message_id"

    const-string v7, "TEXT"

    move-object v2, p0

    move-object v4, p1

    .line 8475
    invoke-direct/range {v2 .. v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v9, "upgradeDatabaseToVersion126"

    const-string v11, "spam_ft"

    const-string v12, "imdn_message_id"

    const-string v13, "TEXT"

    move-object v8, p0

    move-object v10, p1

    .line 8476
    invoke-direct/range {v8 .. v13}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string p0, "upgradeDatabaseToVersion126 end"

    .line 8478
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion128(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 14

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion128 start"

    .line 8482
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "DROP TRIGGER IF EXISTS im_update_thread_on_insert;"

    .line 8484
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "CREATE TRIGGER im_update_thread_on_insert AFTER INSERT ON im BEGIN  UPDATE im_threads SET    date = new.date,    snippet =        CASE            WHEN new.display_notification_status = 22 THEN \'/#UnreadTimedMsg@/\'           WHEN new.message_type >= 105 and new.body is NULL  THEN \'/#Sticker@/\'           WHEN new.service_type = 1 and new.content_type = \'107\'  THEN \'/#Sticker@/\'           WHEN new.secret_message = 1  THEN \'/#RcsSecretMessage@/\'           ELSE substr(new.body ,1,300)        END     , snippet_cs = 0    , snippet_type = new.type  WHERE (im_threads.normal_thread_id = new.thread_id         AND new.message_type NOT IN (1,2,3,4,8,9,10,11,12,13) AND new.reserved = 0 AND new.hidden = 0);  UPDATE im_threads SET message_count =      (SELECT COUNT(im._id) FROM im LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id       AND im.type != 3 ) +      (SELECT COUNT(ft._id) FROM ft LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id      ) , unread_count =        (SELECT count(*) FROM im LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND im.read = 0 AND im.type = 1) +        (SELECT count(*) FROM ft LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND ft.read = 0 AND ft.type = 1)   WHERE im_threads.normal_thread_id = new.thread_id;   UPDATE im_threads SET read =     CASE (SELECT COUNT(*)          FROM im          WHERE read = 0            AND thread_id = im_threads.normal_thread_id)      WHEN 0 THEN 1      ELSE 0    END  WHERE im_threads.normal_thread_id = new.thread_id; END;"

    .line 8485
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS im_update_thread_on_update;"

    .line 8488
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "CREATE TRIGGER im_update_thread_on_update AFTER  UPDATE OF date  ON im BEGIN  UPDATE im_threads SET    date = new.date,    snippet =        CASE            WHEN new.display_notification_status = 22 THEN \'/#UnreadTimedMsg@/\'           WHEN new.message_type >= 105 and new.body is NULL  THEN \'/#Sticker@/\'           WHEN new.service_type = 1 and new.content_type = \'107\'  THEN \'/#Sticker@/\'           WHEN new.secret_message = 1  THEN \'/#RcsSecretMessage@/\'           ELSE substr(new.body ,1,300)        END     , snippet_cs = 0    , snippet_type = new.type  WHERE (im_threads.normal_thread_id = new.thread_id         AND new.message_type NOT IN (1,2,3,4,8,9,10,11,12,13) AND new.reserved = 0 AND new.hidden = 0);  UPDATE im_threads SET message_count =      (SELECT COUNT(im._id) FROM im LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id       AND im.type != 3 ) +      (SELECT COUNT(ft._id) FROM ft LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id      ) , unread_count =        (SELECT count(*) FROM im LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND im.read = 0 AND im.type = 1) +        (SELECT count(*) FROM ft LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND ft.read = 0 AND ft.type = 1)   WHERE im_threads.normal_thread_id = new.thread_id;   UPDATE im_threads SET read =     CASE (SELECT COUNT(*)          FROM im          WHERE read = 0            AND thread_id = im_threads.normal_thread_id)      WHEN 0 THEN 1      ELSE 0    END  WHERE im_threads.normal_thread_id = new.thread_id; END;"

    .line 8489
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v3, "upgradeDatabaseToVersion128"

    const-string v5, "im"

    const-string v6, "safe_image_path"

    const-string v7, "Text"

    move-object v2, p0

    move-object v4, p1

    .line 8493
    invoke-direct/range {v2 .. v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v9, "upgradeDatabaseToVersion128"

    const-string v11, "im"

    const-string v12, "spam_report"

    const-string v13, "INTEGER DEFAULT 0"

    move-object v8, p0

    move-object v10, p1

    .line 8494
    invoke-direct/range {v8 .. v13}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion128"

    const-string v4, "ft"

    const-string v5, "safe_image_path"

    const-string v6, "Text"

    move-object v1, p0

    move-object v3, p1

    .line 8495
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v8, "upgradeDatabaseToVersion128"

    const-string v10, "ft"

    const-string v11, "spam_report"

    const-string v12, "INTEGER DEFAULT 0"

    move-object v7, p0

    move-object v9, p1

    .line 8496
    invoke-direct/range {v7 .. v12}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion128"

    const-string v4, "spam_im"

    const-string v5, "safe_image_path"

    const-string v6, "Text"

    .line 8497
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v8, "upgradeDatabaseToVersion128"

    const-string v10, "spam_im"

    const-string v11, "spam_report"

    const-string v12, "INTEGER DEFAULT 0"

    .line 8498
    invoke-direct/range {v7 .. v12}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion128"

    const-string v4, "spam_ft"

    const-string v5, "safe_image_path"

    const-string v6, "Text"

    .line 8499
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v8, "upgradeDatabaseToVersion128"

    const-string v10, "spam_ft"

    const-string v11, "spam_report"

    const-string v12, "INTEGER DEFAULT 0"

    .line 8500
    invoke-direct/range {v7 .. v12}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string p0, "upgradeDatabaseToVersion128 end"

    .line 8502
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion129(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 14

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion129 start"

    .line 8506
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v3, "upgradeDatabaseToVersion129"

    const-string v5, "threads"

    const-string v6, "snippet_type"

    const-string v7, "INTEGER"

    move-object v2, p0

    move-object v4, p1

    .line 8508
    invoke-direct/range {v2 .. v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v9, "upgradeDatabaseToVersion129"

    const-string v11, "im_threads"

    const-string v12, "snippet_type"

    const-string v13, "INTEGER"

    move-object v8, p0

    move-object v10, p1

    .line 8509
    invoke-direct/range {v8 .. v13}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 8511
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createThreadsSnippetTriggers(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 8512
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createCommonTriggers(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 8514
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "UPDATE threads SET snippet_type = (  SELECT snippet_type FROM (    SELECT * FROM (      SELECT date * 1000 AS date, msg_box AS snippet_type, thread_id FROM pdu      WHERE "

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_PDU_UPDATE_SELECTION:Ljava/lang/String;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " AND thread_id = threads._id      ORDER BY date DESC LIMIT 1    )    UNION ALL    SELECT * FROM (      SELECT date, type AS snippet_type, thread_id FROM wpm        WHERE thread_id = threads._id        ORDER BY date DESC LIMIT 1    )    UNION ALL    SELECT * FROM (      SELECT date, type AS snippet_type, thread_id FROM sms        WHERE thread_id = threads._id AND reserved=0        ORDER BY date DESC LIMIT 1    )  )  ORDER BY date DESC LIMIT 1)"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 8538
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "UPDATE im_threads SET snippet_type = (  SELECT snippet_type FROM (    SELECT * FROM (      SELECT date, type AS snippet_type, thread_id FROM im       WHERE "

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->UPDATE_THREAD_IM_UPDATE_SELECTION:Ljava/lang/String;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " AND thread_id = im_threads._id      ORDER BY date DESC LIMIT 1    )    UNION ALL    SELECT * FROM (      SELECT date, type AS snippet_type, thread_id FROM ft       WHERE "

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "reserved=0 AND hidden=0"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " AND thread_id = im_threads._id      ORDER BY date DESC LIMIT 1    )  )  ORDER BY date DESC LIMIT 1)"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "upgradeDatabaseToVersion129 end"

    .line 8556
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion150(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 8

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion150 start"

    .line 8560
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8561
    iget-object v1, p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mContext:Landroid/content/Context;

    invoke-static {v1, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateFilesDirectories(Landroid/content/Context;Landroid/database/sqlite/SQLiteDatabase;)V

    const-string v1, "raw"

    const-string v2, "deleted"

    .line 8564
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    const-string v1, "upgradeDatabaseToVersion150 : raw deleted Column Exist"

    .line 8565
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string v1, "ALTER TABLE raw ADD COLUMN deleted INTEGER DEFAULT 0"

    .line 8567
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    :try_start_0
    const-string v3, "upgradeDatabaseToVersion150"

    const-string v5, "raw"

    const-string v6, "message_body"

    const-string v7, "TEXT"

    move-object v2, p0

    move-object v4, p1

    .line 8575
    invoke-direct/range {v2 .. v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    :try_end_0
    .catch Landroid/database/sqlite/SQLiteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_1

    :catch_0
    move-exception v1

    .line 8577
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "upgradeDatabaseToVersion150 Exception adding column message_body; trying createDateOrderedIndices() instead: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8579
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createDateOrderedIndices(Landroid/database/sqlite/SQLiteDatabase;)V

    :goto_1
    const-string p0, "upgradeDatabaseToVersion150 end"

    .line 8582
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion151(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion151"

    .line 8586
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion152(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion152 start"

    .line 8591
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion152 end"

    .line 8593
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion153(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion153 start"

    .line 8597
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion153 end"

    .line 8599
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion154(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 6

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string v0, "upgradeDatabaseToVersion154 start"

    .line 8603
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "DROP TRIGGER IF EXISTS wpm_update_thread_on_insert;"

    .line 8605
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER wpm_update_thread_on_insert AFTER INSERT ON wpm BEGIN  UPDATE threads SET    date = new.date,     snippet = substr(new.body,1,300),     snippet_cs = 0,    snippet_type = 1  WHERE threads._id = new.thread_id;   UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM wpm          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; END;"

    .line 8606
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS wpm_update_thread_date_on_update;"

    .line 8609
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER wpm_update_thread_date_on_update AFTER  UPDATE OF date, body  ON wpm BEGIN  UPDATE threads SET    date = new.date,     snippet = substr(new.body,1,300),     snippet_cs = 0,    snippet_type = 1  WHERE threads._id = new.thread_id; END;"

    .line 8610
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS wpm_update_thread_type_on_update;"

    .line 8615
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER wpm_update_thread_type_on_update AFTER  UPDATE OF type  ON wpm BEGIN  UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM wpm          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; END;"

    .line 8616
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :try_start_0
    const-string v0, "SELECT DISTINCT thread_id FROM wpm"

    const/4 v1, 0x0

    .line 8622
    invoke-virtual {p1, v0, v1}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v0
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 8624
    :goto_0
    :try_start_1
    invoke-interface {v0}, Landroid/database/Cursor;->moveToNext()Z

    move-result v1

    if-eqz v1, :cond_1

    const/4 v1, 0x0

    .line 8625
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getLong(I)J

    move-result-wide v1

    invoke-static {v1, v2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v1

    .line 8626
    invoke-virtual {v1}, Ljava/lang/Long;->longValue()J

    move-result-wide v2

    const-wide/16 v4, 0x0

    cmp-long v2, v2, v4

    if-gtz v2, :cond_0

    goto :goto_0

    .line 8630
    :cond_0
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "UPDATE threads SET snippet_type = 1 WHERE _id = "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8631
    invoke-virtual {v1}, Ljava/lang/Long;->longValue()J

    move-result-wide v3

    invoke-static {v3, v4}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 8630
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    :cond_1
    if-eqz v0, :cond_3

    .line 8633
    :try_start_2
    invoke-interface {v0}, Landroid/database/Cursor;->close()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    goto :goto_2

    :catchall_0
    move-exception p1

    if-eqz v0, :cond_2

    .line 8622
    :try_start_3
    invoke-interface {v0}, Landroid/database/Cursor;->close()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    goto :goto_1

    :catchall_1
    move-exception v0

    :try_start_4
    invoke-virtual {p1, v0}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    :cond_2
    :goto_1
    throw p1
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_0

    :catch_0
    move-exception p1

    .line 8634
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "upgradeDatabaseToVersion154 update thread error : "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/Exception;->getMessage()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p0, p1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    :cond_3
    :goto_2
    const-string p1, "upgradeDatabaseToVersion154 end"

    .line 8636
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion155(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion155 start"

    .line 8640
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion155 end"

    .line 8642
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion156(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion156 start"

    .line 8647
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8648
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createDateOrderedIndices(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string p0, "upgradeDatabaseToVersion156 end"

    .line 8649
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion157(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string v0, "upgradeDatabaseToVersion157 start"

    .line 8653
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "DROP TRIGGER IF EXISTS delete_obsolete_threads_pdu"

    .line 8654
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p1, "upgradeDatabaseToVersion157 end"

    .line 8655
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion158(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion158 start"

    .line 8659
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion158 end"

    .line 8661
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion160(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string v0, "upgradeDatabaseToVersion160 start"

    .line 8665
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "DROP TRIGGER IF EXISTS sms_words_update;"

    .line 8667
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER sms_words_update AFTER UPDATE OF [body] ON sms BEGIN UPDATE words  SET index_text = NEW.body WHERE (source_id=NEW._id AND table_to_use=1);  END;"

    .line 8668
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p1, "upgradeDatabaseToVersion160 end"

    .line 8672
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion161(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string v0, "upgradeDatabaseToVersion161 start"

    .line 8676
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    :try_start_0
    const-string v0, "ALTER TABLE raw ADD COLUMN display_originating_addr TEXT"

    .line 8679
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
    :try_end_0
    .catch Landroid/database/sqlite/SQLiteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception p1

    .line 8682
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "[upgradeDatabaseToVersion161] Exception adding column display_originating_addr; "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p0, p1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    :goto_0
    const-string p1, "upgradeDatabaseToVersion161 end"

    .line 8685
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion162(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion162 start"

    .line 8690
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion162 end"

    .line 8692
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion201(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion201 start"

    .line 8696
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion201 end"

    .line 8698
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion202(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion202 start"

    .line 8702
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion202 end"

    .line 8704
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion203(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 14

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion203 start"

    .line 8708
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v3, "upgradeDatabaseToVersion203"

    const-string v5, "wpm"

    const-string v6, "creator"

    const-string v7, "TEXT"

    move-object v2, p0

    move-object v4, p1

    .line 8710
    invoke-direct/range {v2 .. v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v9, "upgradeDatabaseToVersion203"

    const-string v11, "im"

    const-string v12, "creator"

    const-string v13, "TEXT"

    move-object v8, p0

    move-object v10, p1

    .line 8711
    invoke-direct/range {v8 .. v13}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion203"

    const-string v4, "ft"

    const-string v5, "creator"

    const-string v6, "TEXT"

    move-object v1, p0

    move-object v3, p1

    .line 8712
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string p0, "upgradeDatabaseToVersion203 end"

    .line 8714
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion204(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 14

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion204 start"

    .line 8718
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v3, "upgradeDatabaseToVersion204"

    const-string v5, "part"

    const-string v6, "sef_type"

    const-string v7, "INTEGER DEFAULT 0"

    move-object v2, p0

    move-object v4, p1

    .line 8720
    invoke-direct/range {v2 .. v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v9, "upgradeDatabaseToVersion204"

    const-string v11, "ft"

    const-string v12, "sef_type"

    const-string v13, "INTEGER DEFAULT 0"

    move-object v8, p0

    move-object v10, p1

    .line 8721
    invoke-direct/range {v8 .. v13}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion204"

    const-string v4, "spam_part"

    const-string v5, "sef_type"

    const-string v6, "INTEGER DEFAULT 0"

    move-object v1, p0

    move-object v3, p1

    .line 8722
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v8, "upgradeDatabaseToVersion204"

    const-string v10, "spam_ft"

    const-string v11, "sef_type"

    const-string v12, "INTEGER DEFAULT 0"

    move-object v7, p0

    move-object v9, p1

    .line 8723
    invoke-direct/range {v7 .. v12}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string p0, "upgradeDatabaseToVersion204 end"

    .line 8725
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion205()V
    .locals 1

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string v0, "upgradeDatabaseToVersion205"

    .line 8729
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion206(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string v0, "upgradeDatabaseToVersion206 start"

    .line 8733
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8735
    invoke-static {p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->migrateImThreadIdByNormalThreadId(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string p1, "upgradeDatabaseToVersion206 end"

    .line 8737
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion251(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 14

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion251 start"

    .line 8741
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v3, "upgradeDatabaseToVersion251"

    const-string v5, "im_threads"

    const-string v6, "conversation_type"

    const-string v7, "INTEGER DEFAULT 0"

    move-object v2, p0

    move-object v4, p1

    .line 8743
    invoke-direct/range {v2 .. v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v9, "upgradeDatabaseToVersion251"

    const-string v11, "ft"

    const-string v12, "ft_mech"

    const-string v13, "INTEGER DEFAULT 0"

    move-object v8, p0

    move-object v10, p1

    .line 8744
    invoke-direct/range {v8 .. v13}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string p0, "upgradeDatabaseToVersion251 end"

    .line 8746
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion252(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion252 start"

    .line 8750
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion252 end"

    .line 8751
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion300(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion300 start"

    .line 8755
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8756
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createPartMidIndex(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 8757
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createAddrMsgIdIndex(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string p0, "upgradeDatabaseToVersion300 end"

    .line 8758
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion301(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 14

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion301 start"

    .line 8762
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v3, "upgradeDatabaseToVersion301"

    const-string v5, "sms"

    const-string v6, "correlation_tag"

    const-string v7, "TEXT"

    move-object v2, p0

    move-object v4, p1

    .line 8764
    invoke-direct/range {v2 .. v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v9, "upgradeDatabaseToVersion301"

    const-string v11, "sms"

    const-string v12, "object_id"

    const-string v13, "TEXT"

    move-object v8, p0

    move-object v10, p1

    .line 8765
    invoke-direct/range {v8 .. v13}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion301"

    const-string v4, "pdu"

    const-string v5, "correlation_tag"

    const-string v6, "TEXT"

    move-object v1, p0

    move-object v3, p1

    .line 8767
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v8, "upgradeDatabaseToVersion301"

    const-string v10, "pdu"

    const-string v11, "object_id"

    const-string v12, "TEXT"

    move-object v7, p0

    move-object v9, p1

    .line 8768
    invoke-direct/range {v7 .. v12}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion301"

    const-string v4, "wpm"

    const-string v5, "correlation_tag"

    const-string v6, "TEXT"

    .line 8770
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v8, "upgradeDatabaseToVersion301"

    const-string v10, "wpm"

    const-string v11, "object_id"

    const-string v12, "TEXT"

    .line 8771
    invoke-direct/range {v7 .. v12}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion301"

    const-string v4, "im"

    const-string v5, "correlation_tag"

    const-string v6, "TEXT"

    .line 8773
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v8, "upgradeDatabaseToVersion301"

    const-string v10, "im"

    const-string v11, "object_id"

    const-string v12, "TEXT"

    .line 8774
    invoke-direct/range {v7 .. v12}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion301"

    const-string v4, "ft"

    const-string v5, "correlation_tag"

    const-string v6, "TEXT"

    .line 8776
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v8, "upgradeDatabaseToVersion301"

    const-string v10, "ft"

    const-string v11, "object_id"

    const-string v12, "TEXT"

    .line 8777
    invoke-direct/range {v7 .. v12}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string p0, "upgradeDatabaseToVersion301 end"

    .line 8779
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion302(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 8

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion302 start"

    .line 8783
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v3, "upgradeDatabaseToVersion302"

    const-string v5, "ft"

    const-string v6, "expiry_timestamp"

    const-string v7, "INTEGER DEFAULT 0"

    move-object v2, p0

    move-object v4, p1

    .line 8785
    invoke-direct/range {v2 .. v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string p0, "upgradeDatabaseToVersion302 end"

    .line 8787
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion303(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 14

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion303 start"

    .line 8791
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v3, "upgradeDatabaseToVersion303"

    const-string v5, "sms"

    const-string v6, "cmc_prop"

    const-string v7, "TEXT"

    move-object v2, p0

    move-object v4, p1

    .line 8793
    invoke-direct/range {v2 .. v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v9, "upgradeDatabaseToVersion303"

    const-string v11, "pdu"

    const-string v12, "cmc_prop"

    const-string v13, "TEXT"

    move-object v8, p0

    move-object v10, p1

    .line 8794
    invoke-direct/range {v8 .. v13}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion303"

    const-string v4, "wpm"

    const-string v5, "cmc_prop"

    const-string v6, "TEXT"

    move-object v1, p0

    move-object v3, p1

    .line 8795
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v8, "upgradeDatabaseToVersion303"

    const-string v10, "im"

    const-string v11, "cmc_prop"

    const-string v12, "TEXT"

    move-object v7, p0

    move-object v9, p1

    .line 8796
    invoke-direct/range {v7 .. v12}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion303"

    const-string v4, "ft"

    const-string v5, "cmc_prop"

    const-string v6, "TEXT"

    .line 8797
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string p0, "upgradeDatabaseToVersion303 end"

    .line 8799
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion304(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 14

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion304 start"

    .line 8803
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v3, "upgradeDatabaseToVersion304"

    const-string v5, "im"

    const-string v6, "is_bot"

    const-string v7, "INTEGER DEFAULT 0"

    move-object v2, p0

    move-object v4, p1

    .line 8805
    invoke-direct/range {v2 .. v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v9, "upgradeDatabaseToVersion304"

    const-string v11, "ft"

    const-string v12, "is_bot"

    const-string v13, "INTEGER DEFAULT 0"

    move-object v8, p0

    move-object v10, p1

    .line 8806
    invoke-direct/range {v8 .. v13}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string p0, "upgradeDatabaseToVersion304 end"

    .line 8808
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion305(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 14

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion305 start"

    .line 8812
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v3, "upgradeDatabaseToVersion305"

    const-string v5, "spam_im"

    const-string v6, "is_bot"

    const-string v7, "INTEGER DEFAULT 0"

    move-object v2, p0

    move-object v4, p1

    .line 8814
    invoke-direct/range {v2 .. v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v9, "upgradeDatabaseToVersion305"

    const-string v11, "spam_ft"

    const-string v12, "is_bot"

    const-string v13, "INTEGER DEFAULT 0"

    move-object v8, p0

    move-object v10, p1

    .line 8815
    invoke-direct/range {v8 .. v13}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string p0, "upgradeDatabaseToVersion305 end"

    .line 8817
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion306(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 14

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion306 start"

    .line 8821
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v3, "upgradeDatabaseToVersion306"

    const-string v5, "spam_im"

    const-string v6, "is_bot"

    const-string v7, "INTEGER DEFAULT 0"

    move-object v2, p0

    move-object v4, p1

    .line 8823
    invoke-direct/range {v2 .. v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v9, "upgradeDatabaseToVersion306"

    const-string v11, "spam_ft"

    const-string v12, "is_bot"

    const-string v13, "INTEGER DEFAULT 0"

    move-object v8, p0

    move-object v10, p1

    .line 8824
    invoke-direct/range {v8 .. v13}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string p0, "upgradeDatabaseToVersion306 end"

    .line 8826
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion307(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion307 start"

    .line 8830
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8831
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateFailedMsgBoxType(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string p0, "upgradeDatabaseToVersion307 end"

    .line 8832
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion308(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion308"

    .line 8836
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion350(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion350"

    .line 8840
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion351(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion351"

    .line 8844
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion352(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 14

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion352 start"

    .line 8848
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v3, "upgradeDatabaseToVersion352"

    const-string v5, "im_threads"

    const-string v6, "sim_imsi"

    const-string v7, "TEXT"

    move-object v2, p0

    move-object v4, p1

    .line 8850
    invoke-direct/range {v2 .. v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v9, "upgradeDatabaseToVersion352"

    const-string v11, "im_threads"

    const-string v12, "sim_imsi2"

    const-string v13, "TEXT"

    move-object v8, p0

    move-object v10, p1

    .line 8851
    invoke-direct/range {v8 .. v13}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string p0, "upgradeDatabaseToVersion352 end"

    .line 8853
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion353(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion353"

    .line 8857
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion354(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion354 start"

    .line 8861
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8862
    invoke-virtual {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createCategoryTables(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string p0, "upgradeDatabaseToVersion354 end"

    .line 8863
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion355(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion355"

    .line 8867
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion356(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion356 start"

    .line 8871
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8872
    iget-object p0, p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mContext:Landroid/content/Context;

    const/4 v1, 0x1

    invoke-static {p0, p1, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateFilesDirectories(Landroid/content/Context;Landroid/database/sqlite/SQLiteDatabase;Z)V

    const-string p0, "upgradeDatabaseToVersion356 end"

    .line 8873
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion357(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion357"

    .line 8877
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion358(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion358 start"

    .line 8881
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8882
    invoke-virtual {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createBotServiceIdSmsNumberTable(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string p0, "upgradeDatabaseToVersion358 end"

    .line 8883
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion400(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion400"

    .line 8887
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion401(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 14

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion401 start"

    .line 8891
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8892
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createThreadsView(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 8893
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createImThreadsView(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 8894
    invoke-static {p1}, Lcom/android/providers/telephony/bin/BinCommonDbUtil;->createBinTables(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 8895
    invoke-static {p1}, Lcom/android/providers/telephony/bin/BinCommonDbUtil;->createBinStatusAllTrigger(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 8896
    invoke-static {p1}, Lcom/android/providers/telephony/bin/BinCommonDbUtil;->createDateOrderedIndices(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string v1, "upgradeDatabaseToVersion401 create tables, view, index done"

    .line 8897
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v3, "upgradeDatabaseToVersion401"

    const-string v5, "threads"

    const-string v6, "bin_status"

    const-string v7, "INTEGER DEFAULT 0"

    move-object v2, p0

    move-object v4, p1

    .line 8899
    invoke-direct/range {v2 .. v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v9, "upgradeDatabaseToVersion401"

    const-string v11, "im_threads"

    const-string v12, "bin_status"

    const-string v13, "INTEGER DEFAULT 0"

    move-object v8, p0

    move-object v10, p1

    .line 8901
    invoke-direct/range {v8 .. v13}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string p0, "upgradeDatabaseToVersion401 end"

    .line 8904
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion402(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion402 start"

    .line 8908
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8909
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->dropMessagesTriggersAndTable(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string p0, "upgradeDatabaseToVersion402 end"

    .line 8910
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion403(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    return-void
.end method

.method private upgradeDatabaseToVersion404(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 14

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion404 start"

    .line 8927
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v3, "upgradeDatabaseToVersion404"

    const-string v5, "sms"

    const-string v6, "bin_info"

    const-string v7, "INTEGER DEFAULT 0"

    move-object v2, p0

    move-object v4, p1

    .line 8929
    invoke-direct/range {v2 .. v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v9, "upgradeDatabaseToVersion404"

    const-string v11, "pdu"

    const-string v12, "bin_info"

    const-string v13, "INTEGER DEFAULT 0"

    move-object v8, p0

    move-object v10, p1

    .line 8930
    invoke-direct/range {v8 .. v13}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion404"

    const-string v4, "wpm"

    const-string v5, "bin_info"

    const-string v6, "INTEGER DEFAULT 0"

    move-object v1, p0

    move-object v3, p1

    .line 8931
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v8, "upgradeDatabaseToVersion404"

    const-string v10, "im"

    const-string v11, "bin_info"

    const-string v12, "INTEGER DEFAULT 0"

    move-object v7, p0

    move-object v9, p1

    .line 8932
    invoke-direct/range {v7 .. v12}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion404"

    const-string v4, "ft"

    const-string v5, "bin_info"

    const-string v6, "INTEGER DEFAULT 0"

    .line 8933
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string p0, "upgradeDatabaseToVersion404 end"

    .line 8935
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion405(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 5

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion405 start"

    .line 8939
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8940
    iget-object v1, p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mMessageTables:[Ljava/lang/String;

    array-length v2, v1

    const/4 v3, 0x0

    :goto_0
    if-ge v3, v2, :cond_0

    aget-object v4, v1, v3

    .line 8941
    invoke-direct {p0, p1, v4}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addReplyColumns(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)V

    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    :cond_0
    const-string p0, "upgradeDatabaseToVersion405 end"

    .line 8943
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion406(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string v0, "upgradeDatabaseToVersion406 start"

    .line 8971
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "DROP TABLE IF EXISTS sessions;"

    .line 8972
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p1, "upgradeDatabaseToVersion406 end"

    .line 8973
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion407(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 14

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion407 start"

    .line 8977
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v3, "upgradeDatabaseToVersion407"

    const-string v5, "im_threads"

    const-string v6, "im_conversation_id"

    const-string v7, "TEXT"

    move-object v2, p0

    move-object v4, p1

    .line 8979
    invoke-direct/range {v2 .. v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v9, "upgradeDatabaseToVersion407"

    const-string v11, "im_threads"

    const-string v12, "im_conversation_id2"

    const-string v13, "TEXT"

    move-object v8, p0

    move-object v10, p1

    .line 8980
    invoke-direct/range {v8 .. v13}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion407"

    const-string v4, "im_threads"

    const-string v5, "im_contribution_id"

    const-string v6, "TEXT"

    move-object v1, p0

    move-object v3, p1

    .line 8981
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v8, "upgradeDatabaseToVersion407"

    const-string v10, "im_threads"

    const-string v11, "im_contribution_id2"

    const-string v12, "TEXT"

    move-object v7, p0

    move-object v9, p1

    .line 8982
    invoke-direct/range {v7 .. v12}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion407"

    const-string v4, "im_threads"

    const-string v5, "session_uri"

    const-string v6, "TEXT"

    .line 8984
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v8, "upgradeDatabaseToVersion407"

    const-string v10, "im_threads"

    const-string v11, "session_uri2"

    const-string v12, "TEXT"

    .line 8985
    invoke-direct/range {v7 .. v12}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string p0, "upgradeDatabaseToVersion407 end"

    .line 8988
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion408(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 5

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion408 start"

    .line 8992
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8993
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->changeTriggerPduObsoleteThread(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 8994
    iget-object v1, p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mMessageTables:[Ljava/lang/String;

    array-length v2, v1

    const/4 v3, 0x0

    :goto_0
    if-ge v3, v2, :cond_0

    aget-object v4, v1, v3

    .line 8995
    invoke-direct {p0, p1, v4}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->renameReplyColumns(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)V

    .line 8996
    invoke-direct {p0, p1, v4}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addReactionColumns(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)V

    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    :cond_0
    const-string p0, "upgradeDatabaseToVersion408 end"

    .line 8998
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion409(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 8

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion409 start"

    .line 9025
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v3, "upgradeDatabaseToVersion409"

    const-string v5, "im_threads"

    const-string v6, "conversation_detail_info"

    const-string v7, "TEXT"

    move-object v2, p0

    move-object v4, p1

    .line 9026
    invoke-direct/range {v2 .. v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string p0, "upgradeDatabaseToVersion409 end"

    .line 9028
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion41(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "DROP TRIGGER IF EXISTS update_threads_error_on_move_mms"

    .line 6279
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER update_threads_error_on_move_mms   BEFORE UPDATE OF msg_box ON pdu   WHEN (OLD.msg_box = 4 AND NEW.msg_box != 4)   AND (OLD._id IN (SELECT DISTINCT msg_id                   FROM pending_msgs                   WHERE err_type >= 10)) BEGIN   UPDATE threads SET error = error - 1  WHERE _id = OLD.thread_id; END;"

    .line 6280
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private upgradeDatabaseToVersion410(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion410 start"

    .line 9032
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion410 end"

    .line 9033
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion411(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 14

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion411 start"

    .line 9037
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v3, "upgradeDatabaseToVersion411"

    const-string v5, "spam_sms"

    const-string v6, "roam_pending"

    const-string v7, "INTEGER DEFAULT 0"

    move-object v2, p0

    move-object v4, p1

    .line 9039
    invoke-direct/range {v2 .. v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v9, "upgradeDatabaseToVersion411"

    const-string v11, "spam_sms"

    const-string v12, "announcements_subtype"

    const-string v13, "INTEGER DEFAULT 0"

    move-object v8, p0

    move-object v10, p1

    .line 9040
    invoke-direct/range {v8 .. v13}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion411"

    const-string v4, "spam_sms"

    const-string v5, "announcements_scenario_id"

    const-string v6, "TEXT"

    move-object v1, p0

    move-object v3, p1

    .line 9041
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v8, "upgradeDatabaseToVersion411"

    const-string v10, "spam_sms"

    const-string v11, "correlation_tag"

    const-string v12, "TEXT"

    move-object v7, p0

    move-object v9, p1

    .line 9042
    invoke-direct/range {v7 .. v12}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion411"

    const-string v4, "spam_sms"

    const-string v5, "object_id"

    const-string v6, "TEXT"

    .line 9043
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v8, "upgradeDatabaseToVersion411"

    const-string v10, "spam_sms"

    const-string v11, "cmc_prop"

    const-string v12, "TEXT"

    .line 9044
    invoke-direct/range {v7 .. v12}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion411"

    const-string v4, "spam_pdu"

    const-string v5, "correlation_tag"

    const-string v6, "TEXT"

    .line 9046
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v8, "upgradeDatabaseToVersion411"

    const-string v10, "spam_pdu"

    const-string v11, "object_id"

    const-string v12, "TEXT"

    .line 9047
    invoke-direct/range {v7 .. v12}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion411"

    const-string v4, "spam_pdu"

    const-string v5, "cmc_prop"

    const-string v6, "TEXT"

    .line 9048
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v8, "upgradeDatabaseToVersion411"

    const-string v10, "spam_im"

    const-string v11, "creator"

    const-string v12, "TEXT"

    .line 9050
    invoke-direct/range {v7 .. v12}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion411"

    const-string v4, "spam_im"

    const-string v5, "correlation_tag"

    const-string v6, "TEXT"

    .line 9051
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v8, "upgradeDatabaseToVersion411"

    const-string v10, "spam_im"

    const-string v11, "object_id"

    const-string v12, "TEXT"

    .line 9052
    invoke-direct/range {v7 .. v12}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion411"

    const-string v4, "spam_im"

    const-string v5, "cmc_prop"

    const-string v6, "TEXT"

    .line 9053
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v8, "upgradeDatabaseToVersion411"

    const-string v10, "spam_ft"

    const-string v11, "ft_mech"

    const-string v12, "INTEGER DEFAULT 0"

    .line 9055
    invoke-direct/range {v7 .. v12}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion411"

    const-string v4, "spam_ft"

    const-string v5, "creator"

    const-string v6, "TEXT"

    .line 9056
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v8, "upgradeDatabaseToVersion411"

    const-string v10, "spam_ft"

    const-string v11, "correlation_tag"

    const-string v12, "TEXT"

    .line 9057
    invoke-direct/range {v7 .. v12}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion411"

    const-string v4, "spam_ft"

    const-string v5, "object_id"

    const-string v6, "TEXT"

    .line 9058
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v8, "upgradeDatabaseToVersion411"

    const-string v10, "spam_ft"

    const-string v11, "expiry_timestamp"

    const-string v12, "INTEGER DEFAULT 0"

    .line 9059
    invoke-direct/range {v7 .. v12}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "upgradeDatabaseToVersion411"

    const-string v4, "spam_ft"

    const-string v5, "cmc_prop"

    const-string v6, "TEXT"

    .line 9060
    invoke-direct/range {v1 .. v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addColumn(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    const-string p0, "upgradeDatabaseToVersion411 end"

    .line 9062
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion42(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "DROP TRIGGER IF EXISTS sms_update_thread_on_delete"

    .line 6293
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS delete_obsolete_threads_sms"

    .line 6294
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TRIGGER IF EXISTS update_threads_error_on_delete_sms"

    .line 6295
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private upgradeDatabaseToVersion43(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string v0, "ALTER TABLE threads ADD COLUMN has_attachment INTEGER DEFAULT 0"

    .line 6300
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 6302
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThreadsAttachmentColumn(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string p0, "CREATE TRIGGER update_threads_on_insert_part  AFTER INSERT ON part  WHEN new.ct != \'text/plain\' AND new.ct != \'application/smil\'  BEGIN   UPDATE threads SET has_attachment=1 WHERE _id IN    (SELECT pdu.thread_id FROM part JOIN pdu ON pdu._id=part.mid      WHERE part._id=new._id LIMIT 1);  END"

    .line 6305
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER IF NOT EXISTS update_threads_on_delete_part  AFTER DELETE ON part  WHEN old.ct != \'text/plain\' AND old.ct != \'application/smil\'  BEGIN   UPDATE threads SET has_attachment =    CASE     (SELECT COUNT(*) FROM part JOIN pdu      WHERE pdu.thread_id = threads._id      AND part.ct != \'text/plain\' AND part.ct != \'application/smil\'      AND part.mid = pdu._id)   WHEN 0 THEN 0    ELSE 1    END   WHERE _id IN    (SELECT DISTINCT pdu.thread_id FROM part JOIN pdu ON pdu._id=part.mid       WHERE pdu._id=old.mid );  END"

    .line 6306
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private upgradeDatabaseToVersion44(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    .line 6310
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThreadsAttachmentColumn(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string p0, "CREATE TRIGGER update_threads_on_update_part  AFTER UPDATE of mid ON part  WHEN new.ct != \'text/plain\' AND new.ct != \'application/smil\'  BEGIN   UPDATE threads SET has_attachment=1 WHERE _id IN    (SELECT pdu.thread_id FROM part JOIN pdu ON pdu._id=part.mid      WHERE part._id=new._id LIMIT 1);  END"

    .line 6313
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private upgradeDatabaseToVersion45(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "ALTER TABLE sms ADD COLUMN locked INTEGER DEFAULT 0"

    .line 6318
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "ALTER TABLE pdu ADD COLUMN locked INTEGER DEFAULT 0"

    .line 6321
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private upgradeDatabaseToVersion46(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 13

    const-string p0, "unable to clean up old mms file for "

    const-string v0, "IOException caught while closing stream"

    const-string v1, "TP/MmsSmsDatabaseHelper"

    const-string v2, "ALTER TABLE part ADD COLUMN text TEXT"

    .line 6327
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v2, "_id"

    const-string v3, "_data"

    const-string v4, "text"

    .line 6329
    filled-new-array {v2, v3, v4}, [Ljava/lang/String;

    move-result-object v7

    const-string v6, "part"

    const-string v8, "ct = \'text/plain\' OR ct == \'application/smil\'"

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    move-object v5, p1

    invoke-virtual/range {v5 .. v12}, Landroid/database/sqlite/SQLiteDatabase;->query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v2

    .line 6337
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    .line 6339
    :try_start_0
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    if-eqz v2, :cond_2

    .line 6341
    invoke-interface {v2, v3}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v3

    .line 6347
    :cond_0
    :goto_0
    invoke-interface {v2}, Landroid/database/Cursor;->moveToNext()Z

    move-result v5

    if-eqz v5, :cond_2

    .line 6348
    invoke-interface {v2, v3}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    if-eqz v5, :cond_0

    const/4 v6, 0x0

    .line 6352
    :try_start_1
    new-instance v7, Ljava/io/FileInputStream;

    invoke-direct {v7, v5}, Ljava/io/FileInputStream;-><init>(Ljava/lang/String;)V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_2
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 6353
    :try_start_2
    invoke-virtual {v7}, Ljava/io/InputStream;->available()I

    move-result v6

    new-array v6, v6, [B

    .line 6354
    invoke-virtual {v7, v6}, Ljava/io/InputStream;->read([B)I

    .line 6355
    new-instance v8, Lcom/google/android/mms/pdu/EncodedStringValue;

    invoke-direct {v8, v6}, Lcom/google/android/mms/pdu/EncodedStringValue;-><init>([B)V

    const-string v6, "UPDATE part SET _data = NULL, text = ?"

    const/4 v9, 0x1

    new-array v9, v9, [Ljava/lang/String;

    const/4 v10, 0x0

    .line 6357
    invoke-virtual {v8}, Lcom/google/android/mms/pdu/EncodedStringValue;->getString()Ljava/lang/String;

    move-result-object v8

    aput-object v8, v9, v10

    .line 6356
    invoke-virtual {p1, v6, v9}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;[Ljava/lang/Object;)V

    .line 6359
    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 6366
    :try_start_3
    invoke-virtual {v7}, Ljava/io/InputStream;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    goto :goto_0

    :catch_0
    move-exception v5

    .line 6369
    :goto_1
    :try_start_4
    invoke-static {v1, v0, v5}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    goto :goto_0

    :catchall_0
    move-exception v3

    move-object v6, v7

    goto :goto_3

    :catch_1
    move-exception v5

    move-object v6, v7

    goto :goto_2

    :catchall_1
    move-exception v3

    goto :goto_3

    :catch_2
    move-exception v5

    .line 6362
    :goto_2
    :try_start_5
    invoke-virtual {v5}, Ljava/io/IOException;->printStackTrace()V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    if-eqz v6, :cond_0

    .line 6366
    :try_start_6
    invoke-virtual {v6}, Ljava/io/InputStream;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_3
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    goto :goto_0

    :catch_3
    move-exception v5

    goto :goto_1

    :goto_3
    if-eqz v6, :cond_1

    :try_start_7
    invoke-virtual {v6}, Ljava/io/InputStream;->close()V
    :try_end_7
    .catch Ljava/io/IOException; {:try_start_7 .. :try_end_7} :catch_4
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    goto :goto_4

    :catch_4
    move-exception v5

    .line 6369
    :try_start_8
    invoke-static {v1, v0, v5}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 6372
    :cond_1
    :goto_4
    throw v3

    .line 6376
    :cond_2
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    .line 6378
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 6379
    invoke-virtual {v4}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object p1

    :goto_5
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_3

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    .line 6381
    :try_start_9
    new-instance v3, Ljava/io/File;

    invoke-direct {v3, v0}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    invoke-virtual {v3}, Ljava/io/File;->delete()Z
    :try_end_9
    .catch Ljava/lang/SecurityException; {:try_start_9 .. :try_end_9} :catch_5

    goto :goto_5

    :catch_5
    move-exception v3

    .line 6383
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v4, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_5

    :cond_3
    if-eqz v2, :cond_4

    .line 6387
    invoke-interface {v2}, Landroid/database/Cursor;->close()V

    :cond_4
    return-void

    :catchall_2
    move-exception v0

    .line 6378
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 6379
    invoke-virtual {v4}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object p1

    :goto_6
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_5

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;

    .line 6381
    :try_start_a
    new-instance v4, Ljava/io/File;

    invoke-direct {v4, v3}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    invoke-virtual {v4}, Ljava/io/File;->delete()Z
    :try_end_a
    .catch Ljava/lang/SecurityException; {:try_start_a .. :try_end_a} :catch_6

    goto :goto_6

    :catch_6
    move-exception v4

    .line 6383
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_6

    :cond_5
    if-eqz v2, :cond_6

    .line 6387
    invoke-interface {v2}, Landroid/database/Cursor;->close()V

    .line 6389
    :cond_6
    throw v0
.end method

.method private upgradeDatabaseToVersion47(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    .line 6393
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThreadsAttachmentColumn(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string p0, "CREATE TRIGGER update_threads_on_update_pdu  AFTER UPDATE of thread_id ON pdu  BEGIN   UPDATE threads SET has_attachment=1 WHERE _id IN    (SELECT pdu.thread_id FROM part JOIN pdu      WHERE part.ct != \'text/plain\' AND part.ct != \'application/smil\'      AND part.mid = pdu._id); END"

    .line 6396
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private upgradeDatabaseToVersion48(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    .line 6401
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addThreadsUnreadCountColumn(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6402
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThreadsUnreadCountColumn(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6403
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThreadsUnreadCountTrigger(Landroid/database/sqlite/SQLiteDatabase;)V

    return-void
.end method

.method private upgradeDatabaseToVersion49(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "ALTER TABLE sms ADD COLUMN error_code INTEGER DEFAULT -1"

    .line 6410
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private upgradeDatabaseToVersion51(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 6

    const-string p0, "[MmsSmsDb] upgradeDatabaseToVersion51: updated "

    const-string v0, "read=1"

    const-string v1, "TP/MmsSmsDatabaseHelper"

    const-string v2, "ALTER TABLE sms add COLUMN seen INTEGER DEFAULT 0"

    .line 6414
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v2, "ALTER TABLE pdu add COLUMN seen INTEGER DEFAULT 0"

    .line 6415
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 6420
    :try_start_0
    new-instance v2, Landroid/content/ContentValues;

    invoke-direct {v2}, Landroid/content/ContentValues;-><init>()V

    const-string v3, "seen"

    const/4 v4, 0x1

    .line 6421
    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-virtual {v2, v3, v4}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const-string v3, "sms"

    const/4 v4, 0x0

    .line 6422
    invoke-virtual {p1, v3, v2, v0, v4}, Landroid/database/sqlite/SQLiteDatabase;->update(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I

    move-result v3

    .line 6423
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " rows in sms table to have READ=1"

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v3, "pdu"

    .line 6425
    invoke-virtual {p1, v3, v2, v0, v4}, Landroid/database/sqlite/SQLiteDatabase;->update(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I

    move-result p1

    .line 6426
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p0, " rows in pdu table to have READ=1"

    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v1, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception p0

    const-string p1, "[MmsSmsDb] upgradeDatabaseToVersion51 caught "

    .line 6429
    invoke-static {v1, p1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    :goto_0
    return-void
.end method

.method private upgradeDatabaseToVersion53(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "DROP TRIGGER IF EXISTS pdu_update_thread_read_on_update"

    .line 6434
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER pdu_update_thread_read_on_update AFTER  UPDATE OF read  ON pdu   WHEN new.m_type=132    OR new.m_type=130    OR new.m_type=128 BEGIN   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM pdu          WHERE read = 0            AND thread_id = threads._id             AND (m_type=132 OR m_type=130 OR m_type=128))       WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; END;"

    .line 6437
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private upgradeDatabaseToVersion54(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    .line 6447
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addIndex(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6450
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updatePartUpdateTheradOnDeleteTrigger(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6451
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThreadsOnUpdatePdu(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6454
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThreadsUnreadCountColumn(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6455
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThreadsUnreadCountTrigger(Landroid/database/sqlite/SQLiteDatabase;)V

    return-void
.end method

.method private upgradeDatabaseToVersion55(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "ALTER TABLE sms ADD COLUMN date_sent INTEGER DEFAULT 0"

    .line 6460
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "ALTER TABLE pdu ADD COLUMN date_sent INTEGER DEFAULT 0"

    .line 6463
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "ALTER TABLE wpm ADD COLUMN date_sent INTEGER DEFAULT 0"

    .line 6466
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private upgradeDatabaseToVersion56(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 4

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion56 start"

    .line 6471
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "sms"

    const-string v2, "pri"

    .line 6473
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_0

    const-string v2, "upgradeDatabaseToVersion56 Column pri Exist"

    .line 6474
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string v2, "ALTER TABLE sms ADD COLUMN pri INTEGER DEFAULT 0"

    .line 6476
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string v2, "reserved"

    .line 6479
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    const-string v3, "upgradeDatabaseToVersion56 Column reserved Exist"

    if-eqz v1, :cond_1

    .line 6480
    invoke-static {v0, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :cond_1
    const-string v1, "ALTER TABLE sms ADD COLUMN reserved INTEGER DEFAULT 0"

    .line 6482
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1
    const-string v1, "pdu"

    .line 6485
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_2

    .line 6486
    invoke-static {v0, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :cond_2
    const-string p0, "ALTER TABLE pdu ADD COLUMN reserved INTEGER DEFAULT 0"

    .line 6488
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_2
    const-string p0, "upgradeDatabaseToVersion56 end"

    .line 6491
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion57(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    .line 6532
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->addUpgradeDiffColumn(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6533
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createCmasTable(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6536
    sget-object v0, Landroid/os/Build;->MODEL:Ljava/lang/String;

    if-eqz v0, :cond_0

    const-string v1, "SPH-D710"

    invoke-virtual {v0, v1}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 6537
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseForCmasTable(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6538
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->deleteSmsDatabaseTriggersOnUpgrade(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6539
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createSmsDatabaseTriggersOnUpgrade(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6543
    :cond_0
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createThreadsSnippetTriggers(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6544
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThreadsMessageTypeTriggers(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6545
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateCmasTriggers(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6548
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createSpamMmsTables(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6549
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createSpamSmsTables(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6550
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createSpamMmsTriggers(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6551
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createSpamFilterTable(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6556
    :try_start_0
    sget-object v0, Landroid/os/Build;->MODEL:Ljava/lang/String;

    if-eqz v0, :cond_2

    .line 6557
    invoke-virtual {v0}, Ljava/lang/String;->isEmpty()Z

    move-result v1

    if-nez v1, :cond_2

    const-string v1, "SHW-M250"

    .line 6558
    invoke-virtual {v0, v1}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_1

    const-string v1, "SHV-E110"

    .line 6559
    invoke-virtual {v0, v1}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_1

    const-string v1, "SHV-E120"

    .line 6560
    invoke-virtual {v0, v1}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_1

    const-string v1, "SHV-E160"

    .line 6561
    invoke-virtual {v0, v1}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 6562
    :cond_1
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion57_ForKOR_KtOma(Landroid/database/sqlite/SQLiteDatabase;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception p0

    const-string p1, "TP/MmsSmsDatabaseHelper"

    const-string v0, "[MmsSmsDb] upgradeDatabaseToVersion57(ForKOR_ktOma) caught "

    .line 6565
    invoke-static {p1, v0, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    :cond_2
    :goto_0
    return-void
.end method

.method private upgradeDatabaseToVersion57_ForKOR_KtOma(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    .line 10575
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThreadsUnreadCountTrigger(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string v0, "DROP TRIGGER IF EXISTS delete_obsolete_threads_pdu;"

    .line 10577
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER delete_obsolete_threads_pdu AFTER DELETE ON pdu BEGIN   DELETE FROM threads   WHERE     _id = old.thread_id     AND _id NOT IN     (SELECT thread_id FROM sms      UNION SELECT thread_id from pdu); END;"

    .line 10578
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS delete_obsolete_threads_when_update_pdu;"

    .line 10582
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER delete_obsolete_threads_when_update_pdu AFTER UPDATE OF thread_id ON pdu WHEN old.thread_id != new.thread_id BEGIN   DELETE FROM threads   WHERE     _id = old.thread_id     AND _id NOT IN     (SELECT thread_id FROM sms      UNION SELECT thread_id from pdu); END;"

    .line 10583
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS wpm_update_thread_on_insert;"

    .line 10587
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER wpm_update_thread_on_insert AFTER INSERT ON wpm BEGIN  UPDATE threads SET    date = new.date,     snippet = substr(new.body,1,300),     snippet_cs = 0,    snippet_type = 1  WHERE threads._id = new.thread_id;   UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM wpm          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; END;"

    .line 10588
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS wpm_update_thread_date_on_update;"

    .line 10591
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER wpm_update_thread_date_on_update AFTER  UPDATE OF date, body  ON wpm BEGIN  UPDATE threads SET    date = new.date,     snippet = substr(new.body,1,300),     snippet_cs = 0,    snippet_type = 1  WHERE threads._id = new.thread_id; END;"

    .line 10592
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS wpm_update_thread_type_on_update;"

    .line 10595
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER wpm_update_thread_type_on_update AFTER  UPDATE OF type  ON wpm BEGIN  UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM wpm          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; END;"

    .line 10596
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 10601
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->recoverySpamMessageForUpgrade_ForKorVersion57(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 10606
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->recoveryReservedMessageForUpgrade_ForKorVersion57(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string v0, "DROP TABLE IF EXISTS domain;"

    .line 10610
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TABLE IF EXISTS phrase;"

    .line 10611
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TABLE IF EXISTS reservationMsgExtraInfo;"

    .line 10612
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TABLE IF EXISTS spam;"

    .line 10613
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 10617
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->convertStringEncodingForUpgrade_ForKorVersion57(Landroid/database/sqlite/SQLiteDatabase;)V

    return-void
.end method

.method private upgradeDatabaseToVersion58(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "sms"

    const-string v1, "pri"

    .line 6572
    invoke-direct {p0, p1, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    const-string v2, "TP/MmsSmsDatabaseHelper"

    if-eqz v0, :cond_0

    const-string v0, "upgradeDatabaseToVersion58 Sms.pri Column Exist"

    .line 6573
    invoke-static {v2, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string v0, "ALTER TABLE sms ADD COLUMN pri INTEGER DEFAULT 0"

    .line 6575
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string v0, "pdu"

    .line 6579
    invoke-direct {p0, p1, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    const-string v0, "upgradeDatabaseToVersion58 Mms.pri Column Exist"

    .line 6580
    invoke-static {v2, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :cond_1
    const-string v0, "ALTER TABLE pdu ADD COLUMN pri INTEGER"

    .line 6582
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1
    const-string v0, "spam_sms"

    .line 6586
    invoke-direct {p0, p1, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2

    const-string v0, "upgradeDatabaseToVersion58 Spam Sms.pri Column Exist"

    .line 6587
    invoke-static {v2, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :cond_2
    const-string v0, "ALTER TABLE spam_sms ADD COLUMN pri INTEGER DEFAULT 0"

    .line 6589
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_2
    const-string v0, "spam_pdu"

    .line 6592
    invoke-direct {p0, p1, v0, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_3

    const-string p0, "upgradeDatabaseToVersion58 Spam Mms.pri Column Exist"

    .line 6593
    invoke-static {v2, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    :cond_3
    const-string p0, "ALTER TABLE spam_pdu ADD COLUMN pri INTEGER"

    .line 6595
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_3
    return-void
.end method

.method private upgradeDatabaseToVersion59(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion59 start"

    .line 6601
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "threads"

    const-string v2, "display_recipient_ids"

    .line 6602
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_0

    const-string p0, "upgradeDatabaseToVersion59 threads.display_recipient_ids Column Exist"

    .line 6603
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string p0, "ALTER TABLE threads ADD COLUMN display_recipient_ids Text"

    .line 6605
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "UPDATE threads SET display_recipient_ids=recipient_ids"

    .line 6606
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string p0, "upgradeDatabaseToVersion59 end"

    .line 6609
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion60(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion60 start"

    .line 6613
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 6614
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createThreadsSnippetTriggers(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string p0, "upgradeDatabaseToVersion60 end"

    .line 6615
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion61(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 6

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion61 start"

    .line 6620
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const/4 v1, 0x0

    .line 6624
    :try_start_0
    sget-object v2, Landroid/os/Build;->MODEL:Ljava/lang/String;

    if-eqz v2, :cond_1

    .line 6625
    invoke-virtual {v2}, Ljava/lang/String;->isEmpty()Z

    move-result v3

    if-nez v3, :cond_1

    const-string v3, "SHV-E230"

    .line 6626
    invoke-virtual {v2, v3}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_0

    const-string v3, "SHW-M480"

    invoke-virtual {v2, v3}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v2
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    if-eqz v2, :cond_1

    :cond_0
    const/4 v1, 0x1

    goto :goto_0

    :catch_0
    move-exception v2

    const-string v3, "[MmsSmsDb] korea tablet check caught "

    .line 6630
    invoke-static {v0, v3, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    :cond_1
    :goto_0
    if-eqz v1, :cond_3

    const-string v1, "threads"

    const-string v2, "display_recipient_ids"

    .line 6635
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_2

    const-string v1, "upgradeDatabaseToVersion61 threads.display_recipient_ids Column Exist"

    .line 6636
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :cond_2
    const-string v1, "ALTER TABLE threads ADD COLUMN display_recipient_ids Text"

    .line 6638
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "UPDATE threads SET display_recipient_ids=recipient_ids"

    .line 6639
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 6643
    :goto_1
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->updateThreadsMessageTypeTriggers(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string v1, "DROP TRIGGER IF EXISTS pdu_update_thread_date_on_update;"

    .line 6644
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "CREATE TRIGGER pdu_update_thread_date_on_update AFTER  UPDATE OF date, sub  ON pdu   WHEN new.m_type=132    OR new.m_type=130    OR new.m_type=128 BEGIN  UPDATE threads SET    date = new.date * 1000,     snippet = substr(new.sub,1,500),     snippet_cs = new.sub_cs,    snippet_type = new.msg_box  WHERE threads._id = new.thread_id; END;"

    .line 6645
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 6649
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->resetTriggerForMultiDraft(Landroid/database/sqlite/SQLiteDatabase;)V

    :cond_3
    const-string v1, "DELETE FROM pdu WHERE thread_id IS NULL"

    .line 6653
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "ALTER TABLE threads ADD COLUMN translate_mode TEXT default \'off\'"

    .line 6656
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "ALTER TABLE pdu ADD COLUMN text_only INTEGER DEFAULT 0"

    .line 6660
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "sms"

    const-string v2, "svc_cmd"

    .line 6664
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    const-string v4, "upgradeDatabaseToVersion57_ForKtOma Sms.svc_cmd Column Exist"

    if-eqz v3, :cond_4

    .line 6665
    invoke-static {v0, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :cond_4
    const-string v3, "ALTER TABLE sms ADD COLUMN svc_cmd INTEGER DEFAULT 0"

    .line 6667
    invoke-virtual {p1, v3}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_2
    const-string v3, "svc_cmd_content"

    .line 6671
    invoke-direct {p0, p1, v1, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    const-string v5, "upgradeDatabaseToVersion57_ForKtOma Sms.svc_cmd_content Column Exist"

    if-eqz v1, :cond_5

    .line 6672
    invoke-static {v0, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    :cond_5
    const-string v1, "ALTER TABLE sms ADD COLUMN svc_cmd_content TEXT"

    .line 6674
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_3
    const-string v1, "ALTER TABLE spam_pdu ADD COLUMN text_only INTEGER DEFAULT 0"

    .line 6679
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "spam_sms"

    .line 6683
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_6

    .line 6684
    invoke-static {v0, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    :cond_6
    const-string v2, "ALTER TABLE spam_sms ADD COLUMN svc_cmd INTEGER DEFAULT 0"

    .line 6686
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 6690
    :goto_4
    invoke-direct {p0, p1, v1, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_7

    .line 6691
    invoke-static {v0, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_5

    :cond_7
    const-string p0, "ALTER TABLE spam_sms ADD COLUMN svc_cmd_content TEXT"

    .line 6693
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_5
    const-string p0, "upgradeDatabaseToVersion61 end"

    .line 6697
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion62(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion62 start"

    .line 6703
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "sms"

    const-string v2, "roam_pending"

    .line 6705
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_0

    const-string p0, "upgradeDatabaseToVersion62 Sms.roam_pending Column Exist"

    .line 6706
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string p0, "ALTER TABLE sms ADD COLUMN roam_pending INTEGER DEFAULT 0"

    .line 6709
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string p0, "upgradeDatabaseToVersion62 end"

    .line 6712
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion63(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string v0, "upgradeDatabaseToVersion63 start"

    .line 6716
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "ALTER TABLE threads ADD COLUMN secret_mode INTEGER DEFAULT 0"

    .line 6718
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p1, "upgradeDatabaseToVersion63 end"

    .line 6720
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion64(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion64 start"

    .line 6724
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "ro.product.name"

    .line 6726
    invoke-static {v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_1

    const-string v2, "ja3gchnduoszn"

    .line 6728
    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_0

    const-string v2, "ja3gduosctc"

    .line 6729
    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1

    :cond_0
    const-string v1, "CHN doesn\'t upgrade 64"

    .line 6730
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_1
    const-string v1, "CREATE TABLE incomplete_lms (_id INTEGER PRIMARY KEY,address TEXT,reference_number INTEGER,uri TEXT);"

    .line 6733
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string v1, "raw"

    const-string v2, "format"

    .line 6742
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_2

    const-string p0, "upgradeDatabaseToVersion64 : raw format Column Exist"

    .line 6743
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :cond_2
    const-string p0, "ALTER TABLE raw ADD COLUMN format TEXT"

    .line 6745
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1
    const-string p0, "upgradeDatabaseToVersion64 end"

    .line 6748
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion65(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion65 start"

    .line 6752
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "ro.product.name"

    .line 6754
    invoke-static {v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_1

    const-string v2, "h3gduoszn"

    .line 6756
    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_0

    const-string v2, "h3gduosctc"

    .line 6757
    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_0

    const-string v2, "ja3gchnduoszn"

    .line 6758
    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_0

    const-string v2, "ja3gduosctc"

    .line 6759
    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1

    :cond_0
    const-string p0, "CHN doesn\'t upgrade 65"

    .line 6760
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_1
    const-string v1, "pdu"

    .line 6762
    invoke-direct {p0, v1, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->convertMmsSubjectEncoding(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;)V

    const-string v1, "spam_pdu"

    .line 6763
    invoke-direct {p0, v1, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->convertMmsSubjectEncoding(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6765
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->NewupdateThreadsSnippetTrigger(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6766
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->NewupdateThreadsForSnippet(Landroid/database/sqlite/SQLiteDatabase;)V

    :goto_0
    const-string p0, "upgradeDatabaseToVersion65 end"

    .line 6769
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion66(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion66 start"

    .line 6773
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion66 end"

    .line 6775
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion67(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion67 start"

    .line 6779
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "ro.product.name"

    .line 6781
    invoke-static {v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_2

    const-string v2, "ja3gchnduoszn"

    .line 6783
    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_0

    const-string v2, "ja3gduosctc"

    .line 6784
    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_2

    :cond_0
    const-string v1, "threads"

    const-string v2, "secret_mode"

    .line 6785
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_1

    const-string p0, "upgradeDatabaseToVersion67 : threads secret_mode Column Exist"

    .line 6786
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_1
    const-string p0, "ALTER TABLE threads ADD COLUMN secret_mode INTEGER DEFAULT 0"

    .line 6788
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :cond_2
    :goto_0
    const-string p0, "upgradeDatabaseToVersion67 end"

    .line 6792
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion68(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 8

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion68 start"

    .line 6797
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "sms"

    const-string v2, "sim_slot"

    .line 6800
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    const-string v4, "card_mode"

    const-string v5, "phonetype"

    if-eqz v3, :cond_0

    const-string v3, "upgradeDatabaseToVersion68 sms.sim_slot Column Exist"

    .line 6801
    invoke-static {v0, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string v3, "ALTER TABLE sms ADD COLUMN sim_slot INTEGER DEFAULT 0"

    .line 6803
    invoke-virtual {p1, v3}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 6804
    invoke-direct {p0, p1, v1, v4}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_1

    const-string v3, "UPDATE sms SET sim_slot = card_mode"

    .line 6805
    invoke-virtual {p1, v3}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    goto :goto_0

    .line 6806
    :cond_1
    invoke-direct {p0, p1, v1, v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_2

    const-string v3, "UPDATE sms SET sim_slot = phonetype"

    .line 6807
    invoke-virtual {p1, v3}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :cond_2
    :goto_0
    const-string v3, "sim_imsi"

    .line 6811
    invoke-direct {p0, p1, v1, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_3

    const-string v1, "upgradeDatabaseToVersion68 sms.sim_imsi Column Exist"

    .line 6812
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :cond_3
    const-string v1, "ALTER TABLE sms ADD COLUMN sim_imsi TEXT"

    .line 6814
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1
    const-string v1, "pdu"

    .line 6817
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_4

    const-string v6, "upgradeDatabaseToVersion68 table_pdu.sim_slot Column Exist"

    .line 6818
    invoke-static {v0, v6}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :cond_4
    const-string v6, "ALTER TABLE pdu ADD COLUMN sim_slot INTEGER DEFAULT 0"

    .line 6820
    invoke-virtual {p1, v6}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 6821
    invoke-direct {p0, p1, v1, v4}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_5

    const-string v6, "UPDATE pdu SET sim_slot = card_mode"

    .line 6822
    invoke-virtual {p1, v6}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    goto :goto_2

    .line 6823
    :cond_5
    invoke-direct {p0, p1, v1, v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_6

    const-string v6, "UPDATE pdu SET sim_slot = phonetype"

    .line 6824
    invoke-virtual {p1, v6}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 6828
    :cond_6
    :goto_2
    invoke-direct {p0, p1, v1, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_7

    const-string v6, "upgradeDatabaseToVersion68 table_pdu.sim_imsi Column Exist"

    .line 6829
    invoke-static {v0, v6}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    :cond_7
    const-string v6, "ALTER TABLE pdu ADD COLUMN sim_imsi TEXT"

    .line 6831
    invoke-virtual {p1, v6}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_3
    const-string v6, "wpm"

    .line 6834
    invoke-direct {p0, p1, v6, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_8

    const-string v7, "upgradeDatabaseToVersion68 wpm.sim_slot Column Exist"

    .line 6835
    invoke-static {v0, v7}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    :cond_8
    const-string v7, "ALTER TABLE wpm ADD COLUMN sim_slot INTEGER DEFAULT 0"

    .line 6837
    invoke-virtual {p1, v7}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 6838
    invoke-direct {p0, p1, v6, v4}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_9

    const-string v7, "UPDATE wpm SET sim_slot = card_mode"

    .line 6839
    invoke-virtual {p1, v7}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    goto :goto_4

    .line 6840
    :cond_9
    invoke-direct {p0, p1, v6, v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_a

    const-string v7, "UPDATE wpm SET sim_slot = phonetype"

    .line 6841
    invoke-virtual {p1, v7}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 6845
    :cond_a
    :goto_4
    invoke-direct {p0, p1, v6, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_b

    const-string v6, "upgradeDatabaseToVersion68 wpm.sim_imsi Column Exist"

    .line 6846
    invoke-static {v0, v6}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_5

    :cond_b
    const-string v6, "ALTER TABLE wpm ADD COLUMN sim_imsi TEXT"

    .line 6848
    invoke-virtual {p1, v6}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_5
    const-string v6, "mychannels"

    .line 6851
    invoke-direct {p0, p1, v6, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_c

    const-string v6, "upgradeDatabaseToVersion68 mychannels. sim_slot Column Exist"

    .line 6852
    invoke-static {v0, v6}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_6

    :cond_c
    const-string v6, "ALTER TABLE mychannels ADD COLUMN sim_slot INTEGER DEFAULT 0"

    .line 6854
    invoke-virtual {p1, v6}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_6
    const-string v6, "pending_msgs"

    const-string v7, "sim_slot2"

    .line 6857
    invoke-direct {p0, p1, v6, v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_d

    const-string v6, "upgradeDatabaseToVersion68 MmsSmsProvider.TABLE_PENDING_MSG PendingMessages.SIM_SLOT Column Exist"

    .line 6858
    invoke-static {v0, v6}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_7

    :cond_d
    const-string v7, "ALTER TABLE pending_msgs ADD COLUMN sim_slot2 INTEGER DEFAULT 0"

    .line 6860
    invoke-virtual {p1, v7}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v7, "pending_phonetype"

    .line 6861
    invoke-direct {p0, p1, v6, v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_e

    const-string v6, "UPDATE pending_msgs SET sim_slot2 = pending_phonetype"

    .line 6862
    invoke-virtual {p1, v6}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :cond_e
    :goto_7
    const-string v6, "raw"

    .line 6866
    invoke-direct {p0, p1, v6, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_f

    const-string v7, "upgradeDatabaseToVersion68 raw sim_slot Column Exist"

    .line 6867
    invoke-static {v0, v7}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_8

    :cond_f
    const-string v7, "ALTER TABLE raw ADD COLUMN sim_slot INTEGER DEFAULT 0"

    .line 6869
    invoke-virtual {p1, v7}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 6870
    invoke-direct {p0, p1, v6, v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_10

    const-string v7, "UPDATE raw SET sim_slot = phonetype"

    .line 6871
    invoke-virtual {p1, v7}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :cond_10
    :goto_8
    const-string v7, "format"

    .line 6875
    invoke-direct {p0, p1, v6, v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_11

    const-string v6, "upgradeDatabaseToVersion68 raw format Column Exist"

    .line 6876
    invoke-static {v0, v6}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_9

    :cond_11
    const-string v6, "ALTER TABLE raw ADD COLUMN format TEXT"

    .line 6878
    invoke-virtual {p1, v6}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_9
    const-string v6, "spam_pdu"

    .line 6881
    invoke-direct {p0, p1, v6, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_12

    const-string v7, "upgradeDatabaseToVersion68 table_spam_pdu.sim_slot Column Exist"

    .line 6882
    invoke-static {v0, v7}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_a

    :cond_12
    const-string v7, "ALTER TABLE spam_pdu ADD COLUMN sim_slot INTEGER DEFAULT 0"

    .line 6884
    invoke-virtual {p1, v7}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 6885
    invoke-direct {p0, p1, v6, v4}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_13

    const-string v7, "UPDATE spam_pdu SET sim_slot = card_mode"

    .line 6886
    invoke-virtual {p1, v7}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    goto :goto_a

    .line 6887
    :cond_13
    invoke-direct {p0, p1, v6, v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_14

    const-string v7, "UPDATE spam_pdu SET sim_slot = phonetype"

    .line 6888
    invoke-virtual {p1, v7}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 6892
    :cond_14
    :goto_a
    invoke-direct {p0, p1, v6, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_15

    const-string v7, "upgradeDatabaseToVersion68 table_spam_pdu.sim_imsi Column Exist"

    .line 6893
    invoke-static {v0, v7}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_b

    :cond_15
    const-string v7, "ALTER TABLE spam_pdu ADD COLUMN sim_imsi TEXT"

    .line 6895
    invoke-virtual {p1, v7}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_b
    const-string v7, "spam_sms"

    .line 6898
    invoke-direct {p0, p1, v7, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_16

    const-string v2, "upgradeDatabaseToVersion68 spam_sms.sim_slot Column Exist"

    .line 6899
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_c

    :cond_16
    const-string v2, "ALTER TABLE spam_sms ADD COLUMN sim_slot INTEGER DEFAULT 0"

    .line 6901
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 6902
    invoke-direct {p0, p1, v7, v4}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_17

    const-string v2, "UPDATE spam_sms SET sim_slot = card_mode"

    .line 6903
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    goto :goto_c

    .line 6904
    :cond_17
    invoke-direct {p0, p1, v7, v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_18

    const-string v2, "UPDATE spam_sms SET sim_slot = phonetype"

    .line 6905
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 6909
    :cond_18
    :goto_c
    invoke-direct {p0, p1, v7, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_19

    const-string v2, "upgradeDatabaseToVersion68 spam_sms.sim_imsi Column Exist"

    .line 6910
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_d

    :cond_19
    const-string v2, "ALTER TABLE spam_sms ADD COLUMN sim_imsi TEXT"

    .line 6912
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 6916
    :goto_d
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgrade_pdu_Table_trigger(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6917
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgrade_sms_Table_trigger(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6918
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgrade_wpm_Table_trigger(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string v2, "ro.product.name"

    .line 6921
    invoke-static {v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    if-eqz v2, :cond_1b

    const-string v3, "h3gduoszn"

    .line 6923
    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_1a

    const-string v3, "h3gduosctc"

    .line 6924
    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_1a

    const-string v3, "ja3gchnduoszn"

    .line 6925
    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_1a

    const-string v3, "ja3gduosctc"

    .line 6926
    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1b

    :cond_1a
    const-string v2, "upgrade 65 for CHN"

    .line 6927
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 6929
    invoke-direct {p0, v1, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->convertMmsSubjectEncoding(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6930
    invoke-direct {p0, v6, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->convertMmsSubjectEncoding(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6932
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->NewupdateThreadsSnippetTrigger(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6933
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->NewupdateThreadsForSnippet(Landroid/database/sqlite/SQLiteDatabase;)V

    :cond_1b
    const-string p0, "upgradeDatabaseToVersion68 end"

    .line 6936
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion69(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion69 start"

    .line 6942
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "sms"

    const-string v2, "spam_report"

    .line 6943
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    const-string v1, "upgradeDatabaseToVersion69 Sms.spam_report Column Exist"

    .line 6944
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string v1, "ALTER TABLE sms ADD COLUMN spam_report INTEGER DEFAULT 0"

    .line 6946
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string v1, "pdu"

    .line 6949
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    const-string v1, "upgradeDatabaseToVersion69 Mms.spam_report Column Exist"

    .line 6950
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :cond_1
    const-string v1, "ALTER TABLE pdu ADD COLUMN spam_report INTEGER DEFAULT 0"

    .line 6952
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1
    const-string v1, "spam_sms"

    .line 6956
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_2

    const-string v1, "upgradeDatabaseToVersion69 Spam Sms.spam_report Column Exist"

    .line 6957
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :cond_2
    const-string v1, "ALTER TABLE spam_sms ADD COLUMN spam_report INTEGER DEFAULT 0"

    .line 6959
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_2
    const-string v1, "spam_pdu"

    .line 6962
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_3

    const-string p0, "upgradeDatabaseToVersion69 Spam Mms.spam_report Column Exist"

    .line 6963
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    :cond_3
    const-string p0, "ALTER TABLE spam_pdu ADD COLUMN spam_report INTEGER DEFAULT 0"

    .line 6965
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_3
    const-string p0, "upgradeDatabaseToVersion69 end"

    .line 6968
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion70(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 4

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion70 start"

    .line 6974
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 6976
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createImTables(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6977
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createFtTables(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6978
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createImThreadsTables(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6981
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createSpamImTable(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6982
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createSpamFtTable(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string v1, "DROP TRIGGER IF EXISTS im_update_thread_on_insert;"

    .line 6987
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "CREATE TRIGGER im_update_thread_on_insert AFTER INSERT ON im BEGIN  UPDATE im_threads SET    date = new.date,    snippet =        CASE            WHEN new.display_notification_status = 22 THEN \'/#UnreadTimedMsg@/\'           WHEN new.message_type >= 105 and new.body is NULL  THEN \'/#Sticker@/\'           WHEN new.service_type = 1 and new.content_type = \'107\'  THEN \'/#Sticker@/\'           WHEN new.secret_message = 1  THEN \'/#RcsSecretMessage@/\'           ELSE substr(new.body ,1,300)        END     , snippet_cs = 0    , snippet_type = new.type  WHERE (im_threads.normal_thread_id = new.thread_id         AND new.message_type NOT IN (1,2,3,4,8,9,10,11,12,13) AND new.reserved = 0 AND new.hidden = 0);  UPDATE im_threads SET message_count =      (SELECT COUNT(im._id) FROM im LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id       AND im.type != 3 ) +      (SELECT COUNT(ft._id) FROM ft LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id      ) , unread_count =        (SELECT count(*) FROM im LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND im.read = 0 AND im.type = 1) +        (SELECT count(*) FROM ft LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND ft.read = 0 AND ft.type = 1)   WHERE im_threads.normal_thread_id = new.thread_id;   UPDATE im_threads SET read =     CASE (SELECT COUNT(*)          FROM im          WHERE read = 0            AND thread_id = im_threads.normal_thread_id)      WHEN 0 THEN 1      ELSE 0    END  WHERE im_threads.normal_thread_id = new.thread_id; END;"

    .line 6988
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS im_update_thread_on_update;"

    .line 6991
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "CREATE TRIGGER im_update_thread_on_update AFTER  UPDATE OF date  ON im BEGIN  UPDATE im_threads SET    date = new.date,    snippet =        CASE            WHEN new.display_notification_status = 22 THEN \'/#UnreadTimedMsg@/\'           WHEN new.message_type >= 105 and new.body is NULL  THEN \'/#Sticker@/\'           WHEN new.service_type = 1 and new.content_type = \'107\'  THEN \'/#Sticker@/\'           WHEN new.secret_message = 1  THEN \'/#RcsSecretMessage@/\'           ELSE substr(new.body ,1,300)        END     , snippet_cs = 0    , snippet_type = new.type  WHERE (im_threads.normal_thread_id = new.thread_id         AND new.message_type NOT IN (1,2,3,4,8,9,10,11,12,13) AND new.reserved = 0 AND new.hidden = 0);  UPDATE im_threads SET message_count =      (SELECT COUNT(im._id) FROM im LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id       AND im.type != 3 ) +      (SELECT COUNT(ft._id) FROM ft LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id      ) , unread_count =        (SELECT count(*) FROM im LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND im.read = 0 AND im.type = 1) +        (SELECT count(*) FROM ft LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND ft.read = 0 AND ft.type = 1)   WHERE im_threads.normal_thread_id = new.thread_id;   UPDATE im_threads SET read =     CASE (SELECT COUNT(*)          FROM im          WHERE read = 0            AND thread_id = im_threads.normal_thread_id)      WHEN 0 THEN 1      ELSE 0    END  WHERE im_threads.normal_thread_id = new.thread_id; END;"

    .line 6992
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS ft_update_thread_on_insert;"

    .line 6996
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "CREATE TRIGGER ft_update_thread_on_insert AFTER INSERT ON ft BEGIN  UPDATE im_threads SET    date = new.date,    snippet =        CASE            WHEN (new.message_type = 80 or new.message_type = 81)  THEN \'/#EasyShare@/\'           WHEN new.display_notification_status = 22 THEN \'/#UnreadTimedMsg@/\'           WHEN new.secret_message = 1  THEN \'/#RcsSecretMessage@/\'           ELSE new.file_name       END    , snippet_cs = 0   , snippet_type = new.type  WHERE im_threads.normal_thread_id = new.thread_id AND new.reserved = 0 AND new.hidden = 0;  UPDATE im_threads SET message_count =      (SELECT COUNT(im._id) FROM im LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id       AND im.type != 3 ) +      (SELECT COUNT(ft._id) FROM ft LEFT JOIN im_threads       ON im_threads.normal_thread_id = thread_id      WHERE thread_id = new.thread_id      ) , unread_count =        (SELECT count(*) FROM im LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND im.read = 0 AND im.type = 1) +        (SELECT count(*) FROM ft LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id       AND ft.read = 0 AND ft.type = 1)   WHERE im_threads.normal_thread_id = new.thread_id;   UPDATE im_threads SET read =     CASE (SELECT COUNT(*)          FROM ft          WHERE read = 0            AND thread_id = im_threads.normal_thread_id)      WHEN 0 THEN 1      ELSE 0    END  WHERE im_threads.normal_thread_id = new.thread_id; END;"

    .line 6997
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS im_update_thread_read_on_update;"

    .line 7000
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "CREATE TRIGGER im_update_thread_read_on_update AFTER  UPDATE OF read  ON im BEGIN   UPDATE im_threads SET read =     CASE (SELECT COUNT(*)          FROM im          WHERE read = 0            AND thread_id = im_threads.normal_thread_id)      WHEN 0 THEN 1      ELSE 0    END  WHERE im_threads.normal_thread_id = new.thread_id;    UPDATE im_threads SET unread_count =        (SELECT count(*) FROM im LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id           AND im.read = 0 AND im.type = 1) +        (SELECT count(*) FROM ft LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id           AND ft.read = 0 AND ft.type = 1)   WHERE im_threads.normal_thread_id = new.thread_id; END;"

    .line 7001
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS ft_update_im_thread_read_on_update;"

    .line 7006
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "CREATE TRIGGER ft_update_im_thread_read_on_update AFTER  UPDATE OF read  ON ft BEGIN   UPDATE im_threads SET read =     CASE (SELECT COUNT(*)          FROM ft          WHERE read = 0            AND thread_id = im_threads.normal_thread_id)      WHEN 0 THEN 1      ELSE 0    END  WHERE im_threads.normal_thread_id = new.thread_id;    UPDATE im_threads SET unread_count =        (SELECT count(*) FROM im LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id           AND im.read = 0 AND im.type = 1) +        (SELECT count(*) FROM ft LEFT JOIN im_threads        ON im_threads.normal_thread_id = thread_id       WHERE thread_id = new.thread_id           AND ft.read = 0 AND ft.type = 1)   WHERE im_threads.normal_thread_id = new.thread_id; END;"

    .line 7007
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS update_threads_message_type_on_update_sms;"

    .line 7014
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7015
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "CREATE TRIGGER update_threads_message_type_on_update_sms   AFTER UPDATE OF type ON sms  WHEN OLD.type != NEW.type BEGIN "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v2, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "  WHERE _id = NEW.thread_id; END;"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS update_threads_message_type_on_update_pdu;"

    .line 7022
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7023
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "CREATE TRIGGER update_threads_message_type_on_update_pdu   AFTER UPDATE OF msg_box ON pdu  WHEN OLD.msg_box != NEW.msg_box BEGIN "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v3, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS update_threads_message_type_on_insert_sms;"

    .line 7030
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7031
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "CREATE TRIGGER update_threads_message_type_on_insert_sms   AFTER INSERT ON sms  WHEN NEW.type >= 0 BEGIN "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v3, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS update_threads_message_type_on_insert_pdu;"

    .line 7038
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7039
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "CREATE TRIGGER update_threads_message_type_on_insert_pdu   AFTER INSERT ON pdu  WHEN NEW.msg_box >= 0 BEGIN "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v3, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS update_threads_message_type_on_delete_sms;"

    .line 7046
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7047
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "CREATE TRIGGER update_threads_message_type_on_delete_sms   AFTER DELETE ON sms  WHEN OLD.type >= 0 BEGIN "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v2, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_DELETE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "  WHERE _id = OLD.thread_id; END;"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS update_threads_message_type_on_delete_pdu;"

    .line 7054
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7055
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "CREATE TRIGGER update_threads_message_type_on_delete_pdu   AFTER DELETE ON pdu  WHEN OLD.msg_box >= 0 BEGIN "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v3, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_THREADS_ON_DELETE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS update_threads_message_type_on_update_im;"

    .line 7062
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7063
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "CREATE TRIGGER update_threads_message_type_on_update_im   AFTER UPDATE OF type ON im  WHEN OLD.type != NEW.type BEGIN "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v2, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_IM_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "  WHERE normal_thread_id = NEW.thread_id; END;"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS update_threads_message_type_on_update_ft;"

    .line 7070
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7071
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "CREATE TRIGGER update_threads_message_type_on_update_ft   AFTER UPDATE OF status ON ft  WHEN OLD.status != NEW.status BEGIN "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v3, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_IM_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS update_threads_message_type_on_insert_im;"

    .line 7078
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7079
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "CREATE TRIGGER update_threads_message_type_on_insert_im   AFTER INSERT ON im  WHEN NEW.type >= 0 BEGIN "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v3, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_IM_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS update_threads_message_type_on_insert_ft;"

    .line 7086
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7087
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "CREATE TRIGGER update_threads_message_type_on_insert_ft   AFTER INSERT ON ft  WHEN NEW.type >= 0 BEGIN "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v3, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_IM_THREADS_ON_UPDATE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS update_threads_message_type_on_delete_im;"

    .line 7094
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7095
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "CREATE TRIGGER update_threads_message_type_on_delete_im   AFTER DELETE ON im  WHEN OLD.type >= 0 BEGIN "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v2, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_IM_THREADS_ON_DELETE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "  WHERE normal_thread_id = OLD.thread_id; END;"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v1, "DROP TRIGGER IF EXISTS update_threads_message_type_on_delete_ft;"

    .line 7102
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7103
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "CREATE TRIGGER update_threads_message_type_on_delete_ft   AFTER DELETE ON ft  WHEN OLD.type >= 0 BEGIN "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v3, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->MESSAGE_TYPE_UPDATE_IM_THREADS_ON_DELETE_TRIGGER:Ljava/lang/String;

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7112
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->moveRcsDataToImTables(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string p0, "upgradeDatabaseToVersion70 end"

    .line 7114
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion71(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 12

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion71 start"

    .line 7120
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "im"

    const-string v2, "imdn_message_id"

    .line 7122
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_0

    const-string v3, "upgradeDatabaseToVersion71 im imdn_message_id Column Exist"

    .line 7123
    invoke-static {v0, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string v3, "ALTER TABLE im ADD COLUMN imdn_message_id TEXT"

    .line 7125
    invoke-virtual {p1, v3}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string v3, "rcsdb_id"

    .line 7128
    invoke-direct {p0, p1, v1, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_1

    const-string v4, "upgradeDatabaseToVersion71 im rcsdb_id Column Exist"

    .line 7129
    invoke-static {v0, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :cond_1
    const-string v4, "ALTER TABLE im ADD COLUMN rcsdb_id TEXT"

    .line 7131
    invoke-virtual {p1, v4}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1
    const-string v4, "user_alias"

    .line 7134
    invoke-direct {p0, p1, v1, v4}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_2

    const-string v5, "upgradeDatabaseToVersion71 im user_alias Column Exist"

    .line 7135
    invoke-static {v0, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :cond_2
    const-string v5, "ALTER TABLE im ADD COLUMN user_alias TEXT"

    .line 7137
    invoke-virtual {p1, v5}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_2
    const-string v5, "delivered_timestamp"

    .line 7140
    invoke-direct {p0, p1, v1, v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_3

    const-string v6, "upgradeDatabaseToVersion71 im delivered_timestamp Column Exist"

    .line 7141
    invoke-static {v0, v6}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    :cond_3
    const-string v6, "ALTER TABLE im ADD COLUMN delivered_timestamp INTEGER DEFAULT 0"

    .line 7143
    invoke-virtual {p1, v6}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_3
    const-string v6, "remote_uri"

    .line 7146
    invoke-direct {p0, p1, v1, v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_4

    const-string v7, "upgradeDatabaseToVersion71 im remote_uri Column Exist"

    .line 7147
    invoke-static {v0, v7}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    :cond_4
    const-string v7, "ALTER TABLE im ADD COLUMN remote_uri TEXT"

    .line 7149
    invoke-virtual {p1, v7}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_4
    const-string v7, "service_type"

    .line 7152
    invoke-direct {p0, p1, v1, v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_5

    const-string v1, "upgradeDatabaseToVersion71 im service_type Column Exist"

    .line 7153
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_5

    :cond_5
    const-string v1, "ALTER TABLE im ADD COLUMN service_type TEXT"

    .line 7155
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_5
    const-string v1, "ft"

    const-string v8, "reject_reason"

    .line 7158
    invoke-direct {p0, p1, v1, v8}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v9

    if-eqz v9, :cond_6

    const-string v9, "upgradeDatabaseToVersion71 ft reject_reason Column Exist"

    .line 7159
    invoke-static {v0, v9}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_6

    :cond_6
    const-string v9, "ALTER TABLE ft ADD COLUMN reject_reason INTEGER"

    .line 7161
    invoke-virtual {p1, v9}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_6
    const-string v9, "chat_session_id"

    .line 7164
    invoke-direct {p0, p1, v1, v9}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v10

    if-eqz v10, :cond_7

    const-string v10, "upgradeDatabaseToVersion71 ft chat_session_id Column Exist"

    .line 7165
    invoke-static {v0, v10}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_7

    :cond_7
    const-string v10, "ALTER TABLE ft ADD COLUMN chat_session_id TEXT"

    .line 7167
    invoke-virtual {p1, v10}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7170
    :goto_7
    invoke-direct {p0, p1, v1, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v10

    if-eqz v10, :cond_8

    const-string v10, "upgradeDatabaseToVersion71 ft rcsdb_id Column Exist"

    .line 7171
    invoke-static {v0, v10}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_8

    :cond_8
    const-string v10, "ALTER TABLE ft ADD COLUMN rcsdb_id INTEGER"

    .line 7173
    invoke-virtual {p1, v10}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7176
    :goto_8
    invoke-direct {p0, p1, v1, v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v10

    if-eqz v10, :cond_9

    const-string v10, "upgradeDatabaseToVersion71 ft delivered_timestamp Column Exist"

    .line 7177
    invoke-static {v0, v10}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_9

    :cond_9
    const-string v10, "ALTER TABLE ft ADD COLUMN delivered_timestamp INTEGER DEFAULT 0"

    .line 7179
    invoke-virtual {p1, v10}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7182
    :goto_9
    invoke-direct {p0, p1, v1, v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v10

    if-eqz v10, :cond_a

    const-string v10, "upgradeDatabaseToVersion71 ft remote_uri Column Exist"

    .line 7183
    invoke-static {v0, v10}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_a

    :cond_a
    const-string v10, "ALTER TABLE ft ADD COLUMN remote_uri TEXT"

    .line 7185
    invoke-virtual {p1, v10}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_a
    const-string v10, "message_type"

    .line 7188
    invoke-direct {p0, p1, v1, v10}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v11

    if-eqz v11, :cond_b

    const-string v11, "upgradeDatabaseToVersion71 ft message_type Column Exist"

    .line 7189
    invoke-static {v0, v11}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_b

    :cond_b
    const-string v11, "ALTER TABLE ft ADD COLUMN message_type INTEGER DEFAULT 0"

    .line 7191
    invoke-virtual {p1, v11}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7194
    :goto_b
    invoke-direct {p0, p1, v1, v4}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v11

    if-eqz v11, :cond_c

    const-string v11, "upgradeDatabaseToVersion71 ft user_alias Column Exist"

    .line 7195
    invoke-static {v0, v11}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_c

    :cond_c
    const-string v11, "ALTER TABLE ft ADD COLUMN user_alias TEXT"

    .line 7197
    invoke-virtual {p1, v11}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7200
    :goto_c
    invoke-direct {p0, p1, v1, v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_d

    const-string v1, "upgradeDatabaseToVersion71 ft service_type Column Exist"

    .line 7201
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_d

    :cond_d
    const-string v1, "ALTER TABLE ft ADD COLUMN service_type TEXT"

    .line 7203
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_d
    const-string v1, "spam_im"

    .line 7206
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_e

    const-string v2, "upgradeDatabaseToVersion71 spam_im imdn_message_id Column Exist"

    .line 7207
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_e

    :cond_e
    const-string v2, "ALTER TABLE spam_im ADD COLUMN imdn_message_id TEXT"

    .line 7209
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7212
    :goto_e
    invoke-direct {p0, p1, v1, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_f

    const-string v2, "upgradeDatabaseToVersion71 spam_im rcsdb_id Column Exist"

    .line 7213
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_f

    :cond_f
    const-string v2, "ALTER TABLE spam_im ADD COLUMN rcsdb_id TEXT"

    .line 7215
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7218
    :goto_f
    invoke-direct {p0, p1, v1, v4}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_10

    const-string v2, "upgradeDatabaseToVersion71 spam_im user_alias Column Exist"

    .line 7219
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_10

    :cond_10
    const-string v2, "ALTER TABLE spam_im ADD COLUMN user_alias TEXT"

    .line 7221
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7224
    :goto_10
    invoke-direct {p0, p1, v1, v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_11

    const-string v2, "upgradeDatabaseToVersion71 spam_im delivered_timestamp Column Exist"

    .line 7225
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_11

    :cond_11
    const-string v2, "ALTER TABLE spam_im ADD COLUMN delivered_timestamp INTEGER DEFAULT 0"

    .line 7227
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7230
    :goto_11
    invoke-direct {p0, p1, v1, v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_12

    const-string v2, "upgradeDatabaseToVersion71 spam_im remote_uri Column Exist"

    .line 7231
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_12

    :cond_12
    const-string v2, "ALTER TABLE spam_im ADD COLUMN remote_uri TEXT"

    .line 7233
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7236
    :goto_12
    invoke-direct {p0, p1, v1, v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_13

    const-string v1, "upgradeDatabaseToVersion71 spam_im service_type Column Exist"

    .line 7237
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_13

    :cond_13
    const-string v1, "ALTER TABLE spam_im ADD COLUMN service_type TEXT"

    .line 7239
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_13
    const-string v1, "spam_ft"

    .line 7242
    invoke-direct {p0, p1, v1, v8}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_14

    const-string v2, "upgradeDatabaseToVersion71 spam_ft reject_reason Column Exist"

    .line 7243
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_14

    :cond_14
    const-string v2, "ALTER TABLE spam_ft ADD COLUMN reject_reason INTEGER"

    .line 7245
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7248
    :goto_14
    invoke-direct {p0, p1, v1, v9}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_15

    const-string v2, "upgradeDatabaseToVersion71 spam_ft chat_session_id Column Exist"

    .line 7249
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_15

    :cond_15
    const-string v2, "ALTER TABLE spam_ft ADD COLUMN chat_session_id TEXT"

    .line 7251
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7254
    :goto_15
    invoke-direct {p0, p1, v1, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_16

    const-string v2, "upgradeDatabaseToVersion71 spam_ft rcsdb_id Column Exist"

    .line 7255
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_16

    :cond_16
    const-string v2, "ALTER TABLE spam_ft ADD COLUMN rcsdb_id INTEGER"

    .line 7257
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7260
    :goto_16
    invoke-direct {p0, p1, v1, v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_17

    const-string v2, "upgradeDatabaseToVersion71 spam_ft delivered_timestamp Column Exist"

    .line 7261
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_17

    :cond_17
    const-string v2, "ALTER TABLE spam_ft ADD COLUMN delivered_timestamp INTEGER DEFAULT 0"

    .line 7263
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7266
    :goto_17
    invoke-direct {p0, p1, v1, v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_18

    const-string v2, "upgradeDatabaseToVersion71 spam_ft remote_uri Column Exist"

    .line 7267
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_18

    :cond_18
    const-string v2, "ALTER TABLE spam_ft ADD COLUMN remote_uri TEXT"

    .line 7269
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7272
    :goto_18
    invoke-direct {p0, p1, v1, v10}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_19

    const-string v2, "upgradeDatabaseToVersion71 spam_ft message_type Column Exist"

    .line 7273
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_19

    :cond_19
    const-string v2, "ALTER TABLE spam_ft ADD COLUMN message_type INTEGER DEFAULT 0"

    .line 7275
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7278
    :goto_19
    invoke-direct {p0, p1, v1, v4}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_1a

    const-string v2, "upgradeDatabaseToVersion71 spam_ft user_alias Column Exist"

    .line 7279
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1a

    :cond_1a
    const-string v2, "ALTER TABLE spam_ft ADD COLUMN user_alias TEXT"

    .line 7281
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7284
    :goto_1a
    invoke-direct {p0, p1, v1, v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1b

    const-string v1, "upgradeDatabaseToVersion71 spam_ft service_type Column Exist"

    .line 7285
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1b

    :cond_1b
    const-string v1, "ALTER TABLE spam_ft ADD COLUMN service_type TEXT"

    .line 7287
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1b
    const-string v1, "im_threads"

    const-string v2, "alias"

    .line 7290
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_1c

    const-string v2, "upgradeDatabaseToVersion71 im_threads alias Column Exist"

    .line 7291
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1c

    :cond_1c
    const-string v2, "ALTER TABLE im_threads ADD COLUMN alias TEXT"

    .line 7293
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1c
    const-string v2, "opened"

    .line 7296
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_1d

    const-string p0, "upgradeDatabaseToVersion71 im_threads opened Column Exist"

    .line 7297
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1d

    :cond_1d
    const-string p0, "ALTER TABLE im_threads ADD COLUMN opened TEXT"

    .line 7299
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1d
    const-string p0, "upgradeDatabaseToVersion71 end"

    .line 7301
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion72(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion72 start"

    .line 7305
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "im"

    const-string v2, "recipients"

    .line 7307
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    const-string v1, "upgradeDatabaseToVersion72 im recipients Column Exist"

    .line 7308
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string v1, "ALTER TABLE im ADD COLUMN recipients TEXT"

    .line 7310
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string v1, "ft"

    .line 7312
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    const-string v1, "upgradeDatabaseToVersion72 ft recipients Column Exist"

    .line 7313
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :cond_1
    const-string v1, "ALTER TABLE ft ADD COLUMN recipients TEXT"

    .line 7315
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1
    const-string v1, "spam_im"

    .line 7319
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_2

    const-string v1, "upgradeDatabaseToVersion72 spam_im recipients Column Exist"

    .line 7320
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :cond_2
    const-string v1, "ALTER TABLE spam_im ADD COLUMN recipients TEXT"

    .line 7322
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_2
    const-string v1, "spam_ft"

    .line 7324
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_3

    const-string p0, "upgradeDatabaseToVersion72 spam_ft recipients Column Exist"

    .line 7325
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    :cond_3
    const-string p0, "ALTER TABLE spam_ft ADD COLUMN recipients TEXT"

    .line 7327
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_3
    const-string p0, "upgradeDatabaseToVersion72 end"

    .line 7329
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion73(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion73 start"

    .line 7335
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "sms"

    const-string v2, "safe_message"

    .line 7336
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    const-string v1, "upgradeDatabaseToVersion73 Sms.safe_message Column Exist"

    .line 7337
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string v1, "ALTER TABLE sms ADD COLUMN safe_message INTEGER DEFAULT 0"

    .line 7339
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string v1, "pdu"

    .line 7341
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    const-string v1, "upgradeDatabaseToVersion73 Mms.safe_message Column Exist"

    .line 7342
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :cond_1
    const-string v1, "ALTER TABLE pdu ADD COLUMN safe_message INTEGER DEFAULT 0"

    .line 7344
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1
    const-string v1, "threads"

    .line 7346
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_2

    const-string v1, "upgradeDatabaseToVersion73 threads.safe_message Column Exist"

    .line 7347
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :cond_2
    const-string v1, "ALTER TABLE threads ADD COLUMN safe_message INTEGER DEFAULT 0"

    .line 7349
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_2
    const-string v1, "spam_sms"

    .line 7353
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_3

    const-string v1, "upgradeDatabaseToVersion73 Spam Sms.safe_message Column Exist"

    .line 7354
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    :cond_3
    const-string v1, "ALTER TABLE spam_sms ADD COLUMN safe_message INTEGER DEFAULT 0"

    .line 7356
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_3
    const-string v1, "spam_pdu"

    .line 7359
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_4

    const-string v1, "upgradeDatabaseToVersion73 Spam Mms.safe_message Column Exist"

    .line 7360
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    :cond_4
    const-string v1, "ALTER TABLE spam_pdu ADD COLUMN safe_message INTEGER DEFAULT 0"

    .line 7362
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7367
    :goto_4
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createThreadsSafeMessageTriggers(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string p0, "upgradeDatabaseToVersion73 end"

    .line 7368
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion74(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 10

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion74 start"

    .line 7373
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 7375
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createFTRetryTable(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string v1, "mms"

    .line 7377
    invoke-static {v1}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    const-string v3, "pdu"

    invoke-direct {p0, p1, v3, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    const-string v4, "default"

    const-string v5, " Column Exist"

    const-string v6, " INTEGER DEFAULT "

    if-eqz v2, :cond_0

    .line 7378
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "upgradeDatabaseToVersion74 pdu."

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v1}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 7380
    :cond_0
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "ALTER TABLE pdu ADD COLUMN "

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v1}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v4}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string v2, "pending"

    .line 7383
    invoke-static {v2}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v7

    const-string v8, "pending_msgs"

    invoke-direct {p0, p1, v8, v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_1

    .line 7384
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "upgradeDatabaseToVersion74 pending_msgs."

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v2}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    .line 7386
    :cond_1
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "ALTER TABLE pending_msgs ADD COLUMN "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7387
    invoke-static {v2}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "default0"

    invoke-static {v2}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 7386
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1
    const-string v2, "sms"

    .line 7390
    invoke-static {v2}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v7

    invoke-direct {p0, p1, v2, v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_2

    .line 7391
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "upgradeDatabaseToVersion74 sms."

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v2}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v0, v7}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    .line 7393
    :cond_2
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "ALTER TABLE sms ADD COLUMN "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v2}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v4}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {p1, v7}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7396
    :goto_2
    invoke-static {v2}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v7

    const-string v8, "raw"

    invoke-direct {p0, p1, v8, v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_3

    .line 7397
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "upgradeDatabaseToVersion74 raw."

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v2}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v0, v7}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    .line 7399
    :cond_3
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "ALTER TABLE raw ADD COLUMN "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v2}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v4}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {p1, v7}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_3
    const-string v7, "creator"

    .line 7402
    invoke-direct {p0, p1, v3, v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_4

    const-string v3, "upgradeDatabaseToVersion74 pdu.creator Column Exist"

    .line 7403
    invoke-static {v0, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    :cond_4
    const-string v3, "ALTER TABLE pdu ADD COLUMN creator TEXT"

    .line 7405
    invoke-virtual {p1, v3}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7408
    :goto_4
    invoke-direct {p0, p1, v2, v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_5

    const-string v3, "upgradeDatabaseToVersion74 sms.creator Column Exist"

    .line 7409
    invoke-static {v0, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_5

    :cond_5
    const-string v3, "ALTER TABLE sms ADD COLUMN creator TEXT"

    .line 7411
    invoke-virtual {p1, v3}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_5
    const-string v3, "threads"

    const-string v8, "archived"

    .line 7414
    invoke-direct {p0, p1, v3, v8}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_6

    const-string v3, "upgradeDatabaseToVersion74 threads.archived Column Exist"

    .line 7415
    invoke-static {v0, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_6

    :cond_6
    const-string v3, "ALTER TABLE threads ADD COLUMN archived INTEGER DEFAULT 0"

    .line 7417
    invoke-virtual {p1, v3}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7420
    :goto_6
    invoke-static {v1}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    const-string v8, "spam_pdu"

    invoke-direct {p0, p1, v8, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_7

    .line 7421
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "upgradeDatabaseToVersion74 spam_pdu."

    invoke-virtual {v3, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v1}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_7

    .line 7423
    :cond_7
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "ALTER TABLE spam_pdu ADD COLUMN "

    invoke-virtual {v3, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v1}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v4}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7426
    :goto_7
    invoke-static {v2}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    const-string v3, "spam_sms"

    invoke-direct {p0, p1, v3, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_8

    .line 7427
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "upgradeDatabaseToVersion74 spam_sms."

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v2}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_8

    .line 7429
    :cond_8
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "ALTER TABLE spam_sms ADD COLUMN "

    invoke-virtual {v1, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v2}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v4}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7432
    :goto_8
    invoke-direct {p0, p1, v8, v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_9

    const-string v1, "upgradeDatabaseToVersion74 spam_pdu.creator Column Exist"

    .line 7433
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_9

    :cond_9
    const-string v1, "ALTER TABLE spam_pdu ADD COLUMN creator TEXT"

    .line 7435
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7438
    :goto_9
    invoke-direct {p0, p1, v3, v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_a

    const-string p0, "upgradeDatabaseToVersion74 spam_sms.creator Column Exist"

    .line 7439
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_a

    :cond_a
    const-string p0, "ALTER TABLE spam_sms ADD COLUMN creator TEXT"

    .line 7441
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_a
    const-string p0, "upgradeDatabaseToVersion74 end"

    .line 7444
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion75(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion75 start"

    .line 7448
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "im"

    const-string v2, "sticker_id"

    .line 7450
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    const-string v1, "upgradeDatabaseToVersion75 im.sticker_id Column Exist"

    .line 7451
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string v1, "ALTER TABLE im ADD COLUMN sticker_id TEXT"

    .line 7453
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string v1, "spam_im"

    .line 7456
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_1

    const-string p0, "upgradeDatabaseToVersion75 spam_im.sticker_id Column Exist"

    .line 7457
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :cond_1
    const-string p0, "ALTER TABLE spam_im ADD COLUMN sticker_id TEXT"

    .line 7459
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1
    const-string p0, "upgradeDatabaseToVersion75 end"

    .line 7462
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion76(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 5

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion76 start"

    .line 7466
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "im"

    const-string v2, "sim_slot"

    .line 7468
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_0

    const-string v3, "upgradeDatabaseToVersion76 im.sim_slot Column Exist"

    .line 7469
    invoke-static {v0, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string v3, "ALTER TABLE im ADD COLUMN sim_slot INTEGER DEFAULT 0"

    .line 7471
    invoke-virtual {p1, v3}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string v3, "delivered_count"

    .line 7474
    invoke-direct {p0, p1, v1, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    const-string v1, "upgradeDatabaseToVersion76 im.delivered_count Column Exist"

    .line 7475
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :cond_1
    const-string v1, "ALTER TABLE im ADD COLUMN delivered_count INTEGER DEFAULT 0"

    .line 7477
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1
    const-string v1, "ft"

    .line 7480
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_2

    const-string v4, "upgradeDatabaseToVersion76 ft.sim_slot Column Exist"

    .line 7481
    invoke-static {v0, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :cond_2
    const-string v4, "ALTER TABLE ft ADD COLUMN sim_slot INTEGER DEFAULT 0"

    .line 7483
    invoke-virtual {p1, v4}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7486
    :goto_2
    invoke-direct {p0, p1, v1, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_3

    const-string v1, "upgradeDatabaseToVersion76 ft.delivered_count Column Exist"

    .line 7487
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    :cond_3
    const-string v1, "ALTER TABLE ft ADD COLUMN delivered_count INTEGER DEFAULT 0"

    .line 7489
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_3
    const-string v1, "spam_im"

    .line 7492
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_4

    const-string v4, "upgradeDatabaseToVersion76 spam_im.sim_slot Column Exist"

    .line 7493
    invoke-static {v0, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    :cond_4
    const-string v4, "ALTER TABLE spam_im ADD COLUMN sim_slot INTEGER DEFAULT 0"

    .line 7495
    invoke-virtual {p1, v4}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7498
    :goto_4
    invoke-direct {p0, p1, v1, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_5

    const-string v1, "upgradeDatabaseToVersion76 spam_im.delivered_count Column Exist"

    .line 7499
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_5

    :cond_5
    const-string v1, "ALTER TABLE spam_im ADD COLUMN delivered_count INTEGER DEFAULT 0"

    .line 7501
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_5
    const-string v1, "spam_ft"

    .line 7504
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_6

    const-string v2, "upgradeDatabaseToVersion76 spam_ft.sim_slot Column Exist"

    .line 7505
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_6

    :cond_6
    const-string v2, "ALTER TABLE spam_ft ADD COLUMN sim_slot INTEGER DEFAULT 0"

    .line 7507
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7510
    :goto_6
    invoke-direct {p0, p1, v1, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_7

    const-string v1, "upgradeDatabaseToVersion76 spam_ft.delivered_count Column Exist"

    .line 7511
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_7

    :cond_7
    const-string v1, "ALTER TABLE spam_ft ADD COLUMN delivered_count INTEGER DEFAULT 0"

    .line 7513
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_7
    const-string v1, "im_threads"

    const-string v2, "session_id2"

    .line 7516
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_8

    const-string p0, "upgradeDatabaseToVersion76 im_threads.session_id2 Column Exist"

    .line 7517
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_8

    :cond_8
    const-string p0, "ALTER TABLE im_threads ADD COLUMN session_id2 TEXT"

    .line 7519
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_8
    const-string p0, "upgradeDatabaseToVersion76 end"

    .line 7522
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion77(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion77 start"

    .line 7526
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "im"

    const-string v2, "timedmsg_expiry"

    .line 7528
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    const-string v1, "upgradeDatabaseToVersion77 im.timedmsg_expiry Column Exist"

    .line 7529
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string v1, "ALTER TABLE im ADD COLUMN timedmsg_expiry INTEGER DEFAULT 0"

    .line 7531
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string v1, "ft"

    .line 7534
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    const-string v1, "upgradeDatabaseToVersion77 ft.timedmsg_expiry Column Exist"

    .line 7535
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :cond_1
    const-string v1, "ALTER TABLE ft ADD COLUMN timedmsg_expiry INTEGER DEFAULT 0"

    .line 7537
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1
    const-string v1, "spam_im"

    .line 7540
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_2

    const-string v1, "upgradeDatabaseToVersion77 spam_im.timedmsg_expiry Column Exist"

    .line 7541
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :cond_2
    const-string v1, "ALTER TABLE spam_im ADD COLUMN timedmsg_expiry INTEGER DEFAULT 0"

    .line 7543
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_2
    const-string v1, "spam_ft"

    .line 7546
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_3

    const-string p0, "upgradeDatabaseToVersion77 spam_ft.timedmsg_expiry Column Exist"

    .line 7547
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    :cond_3
    const-string p0, "ALTER TABLE spam_ft ADD COLUMN timedmsg_expiry INTEGER DEFAULT 0"

    .line 7549
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_3
    const-string p0, "upgradeDatabaseToVersion77 end"

    .line 7552
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion78(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 7

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion78 start"

    .line 7556
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "pdu"

    const-string v2, "secret_mode"

    .line 7558
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    const-string v3, "upgradeDatabaseToVersion78 pdu.secret_mode Column Exist"

    if-eqz v1, :cond_0

    .line 7559
    invoke-static {v0, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string v1, "ALTER TABLE pdu ADD COLUMN secret_mode INTEGER DEFAULT 0"

    .line 7561
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string v1, "sms"

    .line 7564
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    const-string v4, "upgradeDatabaseToVersion78 sms.secret_mode Column Exist"

    if-eqz v1, :cond_1

    .line 7565
    invoke-static {v0, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :cond_1
    const-string v1, "ALTER TABLE sms ADD COLUMN secret_mode INTEGER DEFAULT 0"

    .line 7567
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1
    const-string v1, "im"

    .line 7570
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    const-string v5, "upgradeDatabaseToVersion78 im.secret_mode Column Exist"

    if-eqz v1, :cond_2

    .line 7571
    invoke-static {v0, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :cond_2
    const-string v1, "ALTER TABLE im ADD COLUMN secret_mode INTEGER DEFAULT 0"

    .line 7573
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_2
    const-string v1, "ft"

    .line 7576
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    const-string v6, "upgradeDatabaseToVersion78 ft.secret_mode Column Exist"

    if-eqz v1, :cond_3

    .line 7577
    invoke-static {v0, v6}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    :cond_3
    const-string v1, "ALTER TABLE ft ADD COLUMN secret_mode INTEGER DEFAULT 0"

    .line 7579
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_3
    const-string v1, "spam_pdu"

    .line 7582
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_4

    .line 7583
    invoke-static {v0, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    :cond_4
    const-string v1, "ALTER TABLE spam_pdu ADD COLUMN secret_mode INTEGER DEFAULT 0"

    .line 7585
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_4
    const-string v1, "spam_sms"

    .line 7588
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_5

    .line 7589
    invoke-static {v0, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_5

    :cond_5
    const-string v1, "ALTER TABLE spam_sms ADD COLUMN secret_mode INTEGER DEFAULT 0"

    .line 7591
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_5
    const-string v1, "spam_im"

    .line 7594
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_6

    .line 7595
    invoke-static {v0, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_6

    :cond_6
    const-string v1, "ALTER TABLE spam_im ADD COLUMN secret_mode INTEGER DEFAULT 0"

    .line 7597
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_6
    const-string v1, "spam_ft"

    .line 7600
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_7

    .line 7601
    invoke-static {v0, v6}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_7

    :cond_7
    const-string p0, "ALTER TABLE spam_ft ADD COLUMN secret_mode INTEGER DEFAULT 0"

    .line 7603
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_7
    const-string p0, "upgradeDatabaseToVersion78 end"

    .line 7606
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion79(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion79 start"

    .line 7611
    invoke-static {v0, v1}, Landroid/util/Log;->secV(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "im"

    const-string v2, "ext_info"

    .line 7612
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    const-string v1, "upgradeDatabaseToVersion79 im ext_info Column Exist"

    .line 7613
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string v1, "ALTER TABLE im ADD COLUMN ext_info TEXT"

    .line 7615
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string v1, "ft"

    .line 7617
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    const-string v1, "upgradeDatabaseToVersion79 ft ext_info Column Exist"

    .line 7618
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :cond_1
    const-string v1, "ALTER TABLE ft ADD COLUMN ext_info TEXT"

    .line 7620
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1
    const-string v1, "spam_im"

    .line 7622
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_2

    const-string v1, "upgradeDatabaseToVersion79 spam_im ext_info Column Exist"

    .line 7623
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :cond_2
    const-string v1, "ALTER TABLE spam_im ADD COLUMN ext_info TEXT"

    .line 7625
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_2
    const-string v1, "spam_ft"

    .line 7627
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_3

    const-string v1, "upgradeDatabaseToVersion79 spam_ft ext_info Column Exist"

    .line 7628
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    :cond_3
    const-string v1, "ALTER TABLE spam_ft ADD COLUMN ext_info TEXT"

    .line 7630
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_3
    const-string v1, "im_threads"

    const-string v2, "admin"

    .line 7633
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_4

    const-string v2, "upgradeDatabaseToVersion79 im_threads.admin Column Exist"

    .line 7634
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    :cond_4
    const-string v2, "ALTER TABLE im_threads ADD COLUMN admin TEXT"

    .line 7636
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_4
    const-string v2, "remark"

    .line 7639
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_5

    const-string v2, "upgradeDatabaseToVersion79 im_threads.remark Column Exist"

    .line 7640
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_5

    :cond_5
    const-string v2, "ALTER TABLE im_threads ADD remark admin TEXT"

    .line 7642
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_5
    const-string v2, "nick_name"

    .line 7645
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_6

    const-string v2, "upgradeDatabaseToVersion79 im_threads.nick_name Column Exist"

    .line 7646
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_6

    :cond_6
    const-string v2, "ALTER TABLE im_threads ADD COLUMN nick_name TEXT"

    .line 7648
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_6
    const-string v2, "is_mute"

    .line 7651
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_7

    const-string p0, "upgradeDatabaseToVersion79 im_threads.is_mute Column Exist"

    .line 7652
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_7

    :cond_7
    const-string p0, "ALTER TABLE im_threads ADD COLUMN is_mute INTEGER DEFAULT 0"

    .line 7654
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_7
    const-string p0, "upgradeDatabaseToVersion79 end"

    .line 7657
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion80(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion80 start"

    .line 7663
    invoke-static {v0, v1}, Landroid/util/Log;->secV(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "threads"

    const-string v2, "classification"

    .line 7664
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_0

    const-string p0, "upgradeDatabaseToVersion80 threads.classification Column Exist"

    .line 7665
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string p0, "ALTER TABLE threads ADD COLUMN classification INTEGER DEFAULT 0"

    .line 7667
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string p0, "upgradeDatabaseToVersion80 end"

    .line 7669
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion81(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 5

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion81 start"

    .line 7674
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "im"

    const-string v2, "app_id"

    .line 7675
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_0

    const-string v3, "upgradeDatabaseToVersion81 im app_id Column Exist"

    .line 7676
    invoke-static {v0, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string v3, "ALTER TABLE im ADD COLUMN app_id INTEGER DEFAULT 0"

    .line 7678
    invoke-virtual {p1, v3}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string v3, "msg_id"

    .line 7681
    invoke-direct {p0, p1, v1, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    const-string v1, "upgradeDatabaseToVersion81 im msg_id Column Exist"

    .line 7682
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :cond_1
    const-string v1, "ALTER TABLE im ADD COLUMN msg_id INTEGER DEFAULT 0"

    .line 7684
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1
    const-string v1, "ft"

    .line 7687
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_2

    const-string v4, "upgradeDatabaseToVersion81 ft app_id Column Exist"

    .line 7688
    invoke-static {v0, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :cond_2
    const-string v4, "ALTER TABLE ft ADD COLUMN app_id INTEGER DEFAULT 0"

    .line 7690
    invoke-virtual {p1, v4}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7693
    :goto_2
    invoke-direct {p0, p1, v1, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_3

    const-string v1, "upgradeDatabaseToVersion81 ft msg_id Column Exist"

    .line 7694
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    :cond_3
    const-string v1, "ALTER TABLE ft ADD COLUMN msg_id INTEGER DEFAULT 0"

    .line 7696
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_3
    const-string v1, "spam_im"

    .line 7699
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_4

    const-string v4, "upgradeDatabaseToVersion81 spam_im app_id Column Exist"

    .line 7700
    invoke-static {v0, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    :cond_4
    const-string v4, "ALTER TABLE spam_im ADD COLUMN app_id INTEGER DEFAULT 0"

    .line 7702
    invoke-virtual {p1, v4}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7705
    :goto_4
    invoke-direct {p0, p1, v1, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_5

    const-string v1, "upgradeDatabaseToVersion81 spam_im msg_id Column Exist"

    .line 7706
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_5

    :cond_5
    const-string v1, "ALTER TABLE spam_im ADD COLUMN msg_id INTEGER DEFAULT 0"

    .line 7708
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_5
    const-string v1, "spam_ft"

    .line 7711
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_6

    const-string v2, "upgradeDatabaseToVersion81 spam_ft app_id Column Exist"

    .line 7712
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_6

    :cond_6
    const-string v2, "ALTER TABLE spam_ft ADD COLUMN app_id INTEGER DEFAULT 0"

    .line 7714
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7717
    :goto_6
    invoke-direct {p0, p1, v1, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_7

    const-string p0, "upgradeDatabaseToVersion81 spam_ft msg_id Column Exist"

    .line 7718
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_7

    :cond_7
    const-string p0, "ALTER TABLE spam_ft ADD COLUMN msg_id INTEGER DEFAULT 0"

    .line 7720
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_7
    const-string p0, "upgradeDatabaseToVersion81 end"

    .line 7722
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion82(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion82 start"

    .line 7726
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "threads"

    const-string v2, "is_mute"

    .line 7727
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_0

    const-string p0, "upgradeDatabaseToVersion82 threads is_mute Column Exist"

    .line 7728
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string p0, "ALTER TABLE threads ADD COLUMN is_mute INTEGER DEFAULT 0"

    .line 7730
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string p0, "upgradeDatabaseToVersion82 end"

    .line 7733
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion83(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 11

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion83 start"

    .line 7738
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "im"

    const-string v2, "secret_message"

    .line 7741
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_0

    const-string v3, "upgradeDatabaseToVersion83 im.secret_message Column Exist"

    .line 7742
    invoke-static {v0, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string v3, "ALTER TABLE im ADD COLUMN secret_message INTEGER DEFAULT 0"

    .line 7744
    invoke-virtual {p1, v3}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string v3, "ft"

    .line 7746
    invoke-direct {p0, p1, v3, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_1

    const-string v4, "upgradeDatabaseToVersion83 ft.secret_message Column Exist"

    .line 7747
    invoke-static {v0, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :cond_1
    const-string v4, "ALTER TABLE ft ADD COLUMN secret_message INTEGER DEFAULT 0"

    .line 7749
    invoke-virtual {p1, v4}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1
    const-string v4, "spam_im"

    .line 7751
    invoke-direct {p0, p1, v4, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_2

    const-string v5, "upgradeDatabaseToVersion83 spam_im.secret_message Column Exist"

    .line 7752
    invoke-static {v0, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :cond_2
    const-string v5, "ALTER TABLE spam_im ADD COLUMN secret_message INTEGER DEFAULT 0"

    .line 7754
    invoke-virtual {p1, v5}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_2
    const-string v5, "spam_ft"

    .line 7756
    invoke-direct {p0, p1, v5, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_3

    const-string v2, "upgradeDatabaseToVersion83 spam_ft.secret_message Column Exist"

    .line 7757
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    :cond_3
    const-string v2, "ALTER TABLE spam_ft ADD COLUMN secret_message INTEGER DEFAULT 0"

    .line 7759
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_3
    const-string v2, "threads"

    const-string v6, "chat_type"

    .line 7763
    invoke-direct {p0, p1, v2, v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_4

    const-string v7, "upgradeDatabaseToVersion83 threads.chat_type Column Exist"

    .line 7764
    invoke-static {v0, v7}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    :cond_4
    const-string v7, "ALTER TABLE threads ADD COLUMN chat_type INTEGER DEFAULT 0"

    .line 7766
    invoke-virtual {p1, v7}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_4
    const-string v7, "pa_uuid"

    .line 7768
    invoke-direct {p0, p1, v2, v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v8

    if-eqz v8, :cond_5

    const-string v8, "upgradeDatabaseToVersion83 threads pa_uuid Column Exist"

    .line 7769
    invoke-static {v0, v8}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_5

    :cond_5
    const-string v8, "ALTER TABLE threads ADD COLUMN pa_uuid TEXT"

    .line 7771
    invoke-virtual {p1, v8}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_5
    const-string v8, "pa_thread"

    .line 7773
    invoke-direct {p0, p1, v2, v8}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v9

    if-eqz v9, :cond_6

    const-string v9, "upgradeDatabaseToVersion83 threads pa_thread Column Exist"

    .line 7774
    invoke-static {v0, v9}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_6

    :cond_6
    const-string v9, "ALTER TABLE threads ADD COLUMN pa_thread INTEGER DEFAULT 0"

    .line 7776
    invoke-virtual {p1, v9}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_6
    const-string v9, "menustring"

    .line 7778
    invoke-direct {p0, p1, v2, v9}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v10

    if-eqz v10, :cond_7

    const-string v10, "upgradeDatabaseToVersion83 threads menustring Column Exist"

    .line 7779
    invoke-static {v0, v10}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_7

    :cond_7
    const-string v10, "ALTER TABLE threads ADD COLUMN menustring TEXT"

    .line 7781
    invoke-virtual {p1, v10}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_7
    const-string v10, "im_threads"

    .line 7783
    invoke-direct {p0, p1, v10, v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_8

    const-string v6, "upgradeDatabaseToVersion83 im_threads.chat_type Column Exist"

    .line 7784
    invoke-static {v0, v6}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_8

    :cond_8
    const-string v6, "ALTER TABLE im_threads ADD COLUMN chat_type INTEGER DEFAULT 0"

    .line 7786
    invoke-virtual {p1, v6}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7788
    :goto_8
    invoke-direct {p0, p1, v10, v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_9

    const-string v6, "upgradeDatabaseToVersion83 im_threads pa_uuid Column Exist"

    .line 7789
    invoke-static {v0, v6}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_9

    :cond_9
    const-string v6, "ALTER TABLE im_threads ADD COLUMN pa_uuid TEXT"

    .line 7791
    invoke-virtual {p1, v6}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7793
    :goto_9
    invoke-direct {p0, p1, v10, v8}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_a

    const-string v6, "upgradeDatabaseToVersion83 im_threads pa_thread Column Exist"

    .line 7794
    invoke-static {v0, v6}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_a

    :cond_a
    const-string v6, "ALTER TABLE im_threads ADD COLUMN pa_thread INTEGER DEFAULT 0"

    .line 7796
    invoke-virtual {p1, v6}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7798
    :goto_a
    invoke-direct {p0, p1, v10, v9}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_b

    const-string v6, "upgradeDatabaseToVersion83 im_threads menustring Column Exist"

    .line 7799
    invoke-static {v0, v6}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_b

    :cond_b
    const-string v6, "ALTER TABLE im_threads ADD COLUMN menustring TEXT"

    .line 7801
    invoke-virtual {p1, v6}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_b
    const-string v6, "mcloud_filename"

    .line 7805
    invoke-direct {p0, p1, v1, v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_c

    const-string v7, "upgradeDatabaseToVersion83 im.mcloud_filename Column Exist"

    .line 7806
    invoke-static {v0, v7}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_c

    :cond_c
    const-string v7, "ALTER TABLE im ADD COLUMN mcloud_filename TEXT"

    .line 7808
    invoke-virtual {p1, v7}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7810
    :goto_c
    invoke-direct {p0, p1, v4, v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_d

    const-string v6, "upgradeDatabaseToVersion83 spam_im.mcloud_filename Column Exist"

    .line 7811
    invoke-static {v0, v6}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_d

    :cond_d
    const-string v6, "ALTER TABLE spam_im ADD COLUMN mcloud_filename TEXT"

    .line 7813
    invoke-virtual {p1, v6}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_d
    const-string v6, "pin_to_top"

    .line 7817
    invoke-direct {p0, p1, v2, v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_e

    const-string v2, "upgradeDatabaseToVersion83 : threads pin_to_top Column Exist"

    .line 7818
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_e

    :cond_e
    const-string v2, "ALTER TABLE threads ADD COLUMN pin_to_top INTEGER DEFAULT -1"

    .line 7820
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7822
    :goto_e
    invoke-direct {p0, p1, v10, v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_f

    const-string v2, "upgradeDatabaseToVersion83 : im_threads pin_to_top Column Exist"

    .line 7823
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_f

    :cond_f
    const-string v2, "ALTER TABLE im_threads ADD COLUMN pin_to_top INTEGER DEFAULT -1"

    .line 7825
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_f
    const-string v2, "sms"

    const-string v6, "favorite"

    .line 7830
    invoke-direct {p0, p1, v2, v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_10

    const-string v2, "upgradeDatabaseToVersion83 Sms.favorite Column Exist"

    .line 7831
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_10

    :cond_10
    const-string v2, "ALTER TABLE sms ADD COLUMN favorite INTEGER DEFAULT 0"

    .line 7833
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_10
    const-string v2, "pdu"

    .line 7835
    invoke-direct {p0, p1, v2, v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_11

    const-string v2, "upgradeDatabaseToVersion83 Mms.favorite Column Exist"

    .line 7836
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_11

    :cond_11
    const-string v2, "ALTER TABLE pdu ADD COLUMN favorite INTEGER DEFAULT 0"

    .line 7838
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_11
    const-string v2, "wpm"

    .line 7840
    invoke-direct {p0, p1, v2, v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_12

    const-string v2, "upgradeDatabaseToVersion83 wpm.favorite Column Exist"

    .line 7841
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_12

    :cond_12
    const-string v2, "ALTER TABLE wpm ADD COLUMN favorite INTEGER DEFAULT 0"

    .line 7843
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7845
    :goto_12
    invoke-direct {p0, p1, v1, v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_13

    const-string v1, "upgradeDatabaseToVersion83 im favorite Column Exist"

    .line 7846
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_13

    :cond_13
    const-string v1, "ALTER TABLE im ADD COLUMN favorite TEXT"

    .line 7848
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7850
    :goto_13
    invoke-direct {p0, p1, v3, v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_14

    const-string v1, "upgradeDatabaseToVersion83 ft favorite Column Exist"

    .line 7851
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_14

    :cond_14
    const-string v1, "ALTER TABLE ft ADD COLUMN favorite TEXT"

    .line 7853
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_14
    const-string v1, "spam_sms"

    .line 7857
    invoke-direct {p0, p1, v1, v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_15

    const-string v1, "upgradeDatabaseToVersion83 Spam Sms.favorite Column Exist"

    .line 7858
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_15

    :cond_15
    const-string v1, "ALTER TABLE spam_sms ADD COLUMN favorite INTEGER DEFAULT 0"

    .line 7860
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_15
    const-string v1, "spam_pdu"

    .line 7862
    invoke-direct {p0, p1, v1, v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_16

    const-string v1, "upgradeDatabaseToVersion83 Spam Mms.favorite Column Exist"

    .line 7863
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_16

    :cond_16
    const-string v1, "ALTER TABLE spam_pdu ADD COLUMN favorite INTEGER DEFAULT 0"

    .line 7865
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7867
    :goto_16
    invoke-direct {p0, p1, v4, v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_17

    const-string v1, "upgradeDatabaseToVersion83 spam_im favorite Column Exist"

    .line 7868
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_17

    :cond_17
    const-string v1, "ALTER TABLE spam_im ADD COLUMN favorite TEXT"

    .line 7870
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7872
    :goto_17
    invoke-direct {p0, p1, v5, v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_18

    const-string v1, "upgradeDatabaseToVersion83 spam_ft favorite Column Exist"

    .line 7873
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_18

    :cond_18
    const-string v1, "ALTER TABLE spam_ft ADD COLUMN favorite TEXT"

    .line 7875
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_18
    const-string v1, "time_len"

    .line 7881
    invoke-direct {p0, p1, v3, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_19

    const-string v2, "upgradeDatabaseToVersion83 ft time_len Column Exist"

    .line 7882
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_19

    :cond_19
    const-string v2, "ALTER TABLE ft ADD COLUMN time_len INTEGER DEFAULT 0"

    .line 7884
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7887
    :goto_19
    invoke-direct {p0, p1, v5, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_1a

    const-string p0, "upgradeDatabaseToVersion83 spam_ft time_len Column Exist"

    .line 7888
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1a

    :cond_1a
    const-string p0, "ALTER TABLE spam_ft ADD COLUMN time_len INTEGER DEFAULT 0"

    .line 7890
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1a
    const-string p0, "upgradeDatabaseToVersion83 end"

    .line 7893
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion84(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string v0, "upgradeDatabaseToVersion84 start"

    .line 7898
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "DROP TRIGGER IF EXISTS pdu_update_thread_on_delete;"

    .line 7900
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER pdu_update_thread_on_delete AFTER DELETE ON pdu BEGIN   UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = old.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = old.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = old.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3)    , unread_count =    (SELECT count(*) FROM sms LEFT JOIN threads    ON threads._id = thread_id   WHERE thread_id = old.thread_id   AND sms.read = 0 AND sms.type = 1) +    (SELECT count(*) FROM wpm LEFT JOIN threads    ON threads._id = thread_id   WHERE thread_id = old.thread_id   AND wpm.read = 0) +    (SELECT count(*) FROM pdu LEFT JOIN threads    ON threads._id = thread_id   WHERE thread_id = old.thread_id    AND pdu.read = 0    AND (m_type = 128 OR m_type = 132 OR m_type = 130)   AND msg_box = 1)   WHERE threads._id = old.thread_id;   UPDATE threads SET snippet =    (SELECT substr(snippet,1,300) FROM     (SELECT date * 1000 AS date, sub AS snippet, sub_cs AS snippet_cs, thread_id FROM pdu WHERE thread_id = OLD.thread_id      UNION SELECT date, body AS snippet, 0 AS snippet_cs, thread_id FROM sms WHERE thread_id = OLD.thread_id)    ORDER BY date DESC LIMIT 1)   WHERE threads._id = OLD.thread_id;   UPDATE threads SET snippet_cs =    (SELECT snippet_cs FROM     (SELECT date * 1000 AS date, sub AS snippet, sub_cs AS snippet_cs, thread_id FROM pdu WHERE thread_id = OLD.thread_id      UNION SELECT date, body AS snippet, 0 AS snippet_cs, thread_id FROM sms WHERE thread_id = OLD.thread_id)    ORDER BY date DESC LIMIT 1)   WHERE threads._id = OLD.thread_id;   UPDATE threads SET snippet_type =    (SELECT snippet_type FROM     (SELECT date * 1000 AS date, sub AS snippet, sub_cs AS snippet_cs, thread_id, msg_box AS snippet_type FROM pdu WHERE thread_id = OLD.thread_id      UNION SELECT date, body AS snippet, 0 AS snippet_cs, thread_id, type AS snippet_type FROM sms WHERE thread_id = OLD.thread_id)    ORDER BY date DESC LIMIT 1)   WHERE threads._id = OLD.thread_id; END;"

    .line 7901
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p1, "upgradeDatabaseToVersion84 end"

    .line 7912
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion85(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 4

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion85 start"

    .line 7916
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "pdu"

    const-string v2, "d_rpt_st"

    .line 7919
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_0

    const-string v3, "upgradeDatabaseToVersion85 Mms.d_rpt_st Column Exist"

    .line 7920
    invoke-static {v0, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string v3, "ALTER TABLE pdu ADD COLUMN d_rpt_st INTEGER DEFAULT 0"

    .line 7922
    invoke-virtual {p1, v3}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string v3, "rr_st"

    .line 7925
    invoke-direct {p0, p1, v1, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    const-string v1, "upgradeDatabaseToVersion85 Mms.rr_st Column Exist"

    .line 7926
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :cond_1
    const-string v1, "ALTER TABLE pdu ADD COLUMN rr_st INTEGER DEFAULT 0"

    .line 7928
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1
    const-string v1, "spam_pdu"

    .line 7931
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_2

    const-string v2, "upgradeDatabaseToVersion85 SpamMms.d_rpt_st Column Exist"

    .line 7932
    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :cond_2
    const-string v2, "ALTER TABLE spam_pdu ADD COLUMN d_rpt_st INTEGER DEFAULT 0"

    .line 7934
    invoke-virtual {p1, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 7937
    :goto_2
    invoke-direct {p0, p1, v1, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_3

    const-string v1, "upgradeDatabaseToVersion85 SpamMms.rr_st Column Exist"

    .line 7938
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    :cond_3
    const-string v1, "ALTER TABLE spam_pdu ADD COLUMN rr_st INTEGER DEFAULT 0"

    .line 7940
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_3
    const-string v1, "sms"

    const-string v2, "d_rpt_cnt"

    .line 7943
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_4

    const-string v1, "upgradeDatabaseToVersion85 Sms.d_rpt_cnt Column Exist"

    .line 7944
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    :cond_4
    const-string v1, "ALTER TABLE sms ADD COLUMN d_rpt_cnt INTEGER DEFAULT 0"

    .line 7946
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_4
    const-string v1, "spam_sms"

    .line 7949
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_5

    const-string p0, "upgradeDatabaseToVersion85 SpamSms.d_rpt_cnt Column Exist"

    .line 7950
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_5

    :cond_5
    const-string p0, "ALTER TABLE spam_sms ADD COLUMN d_rpt_cnt INTEGER DEFAULT 0"

    .line 7952
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_5
    const-string p0, "upgradeDatabaseToVersion85 end"

    .line 7954
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion86(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 17

    move-object/from16 v0, p1

    const-string v1, "using_mode"

    const-string v2, "TP/MmsSmsDatabaseHelper"

    const-string v3, "upgradeDatabaseToVersion86 start"

    .line 7959
    invoke-static {v2, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v4, "threads"

    const-string v5, "pdu"

    const-string v6, "sms"

    const-string v7, "wpm"

    const-string v8, "cmas"

    const-string v9, "im_threads"

    const-string v10, "im"

    const-string v11, "ft"

    const-string v12, "spam_filter"

    const-string v13, "spam_pdu"

    const-string v14, "spam_sms"

    const-string v15, "spam_ft"

    const-string v16, "spam_im"

    .line 7977
    filled-new-array/range {v4 .. v16}, [Ljava/lang/String;

    move-result-object v3

    const/4 v4, 0x0

    :goto_0
    const/16 v5, 0xd

    if-ge v4, v5, :cond_1

    .line 7985
    :try_start_0
    aget-object v5, v3, v4

    invoke-virtual {v5}, Ljava/lang/String;->toString()Ljava/lang/String;

    move-result-object v5
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    move-object/from16 v6, p0

    :try_start_1
    invoke-direct {v6, v0, v5, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_0

    .line 7986
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "upgradeDatabaseToVersion86 "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    aget-object v7, v3, v4

    invoke-virtual {v7}, Ljava/lang/String;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v7, " "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v7, " Column Exist"

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v2, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    .line 7988
    :cond_0
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "ALTER TABLE "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    aget-object v7, v3, v4

    invoke-virtual {v7}, Ljava/lang/String;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v7, " ADD COLUMN "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v7, " INTEGER DEFAULT 0"

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v0, v5}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1

    goto :goto_1

    :catch_0
    move-object/from16 v6, p0

    :catch_1
    :goto_1
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    :cond_1
    const-string v0, "upgradeDatabaseToVersion86 end"

    .line 7993
    invoke-static {v2, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion87(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string v0, "upgradeDatabaseToVersion87 start"

    .line 7997
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "CREATE VIEW sms_restricted AS SELECT * FROM sms WHERE type=1 OR type=2;"

    .line 7998
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE VIEW pdu_restricted  AS SELECT * FROM pdu WHERE (msg_box=1 OR msg_box=2) AND (m_type!=130);"

    .line 8003
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p1, "upgradeDatabaseToVersion87 end"

    .line 8010
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion88(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion88 start"

    .line 8014
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion88 end"

    .line 8016
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion89(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion89 start"

    .line 8022
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion89 end"

    .line 8024
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion90(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion90 start"

    .line 8029
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "im_threads"

    const-string v2, "delete_expiry"

    .line 8030
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_0

    const-string p0, "upgradeDatabaseToVersion90 : im_threads,  delete_expiry Column Exist"

    .line 8031
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string p0, "ALTER TABLE im_threads ADD COLUMN delete_expiry INTEGER DEFAULT 0"

    .line 8033
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string p0, "upgradeDatabaseToVersion90 end"

    .line 8035
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion91(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion91 start"

    .line 8040
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion91 end"

    .line 8042
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion92(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion92 start"

    .line 8047
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "im"

    const-string v2, "updated_timestamp"

    .line 8050
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    const-string v1, "upgradeDatabaseToVersion92 : im, updated_timestamp Column Exist"

    .line 8051
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string v1, "ALTER TABLE im ADD COLUMN updated_timestamp INTEGER DEFAULT 0"

    .line 8053
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string v1, "ft"

    .line 8056
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    const-string v1, "upgradeDatabaseToVersion92 : ft, updated_timestamp Column Exist"

    .line 8057
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :cond_1
    const-string v1, "ALTER TABLE ft ADD COLUMN updated_timestamp INTEGER DEFAULT 0"

    .line 8059
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1
    const-string v1, "spam_im"

    .line 8063
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_2

    const-string v1, "upgradeDatabaseToVersion92 : spam_im, updated_timestamp Column Exist"

    .line 8064
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :cond_2
    const-string v1, "ALTER TABLE spam_im ADD COLUMN updated_timestamp INTEGER DEFAULT 0"

    .line 8066
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_2
    const-string v1, "spam_ft"

    .line 8069
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_3

    const-string p0, "upgradeDatabaseToVersion92 : spam_ft, updated_timestamp Column Exist"

    .line 8070
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    :cond_3
    const-string p0, "ALTER TABLE spam_ft ADD COLUMN updated_timestamp INTEGER DEFAULT 0"

    .line 8072
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_3
    const-string p0, "upgradeDatabaseToVersion92 end"

    .line 8075
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion93(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion93 start"

    .line 8079
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion93 end"

    .line 8081
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion94(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion94 start"

    .line 8085
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion94 end"

    .line 8087
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion95(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion95 start"

    .line 8091
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion95 end"

    .line 8093
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion96(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "TP/MmsSmsDatabaseHelper"

    const-string v1, "upgradeDatabaseToVersion96 start"

    .line 8098
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "threads"

    const-string v2, "from_address"

    .line 8100
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    const-string v1, "upgradeDatabaseToVersion96 threads.from_address Column Exist"

    .line 8101
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :cond_0
    const-string v1, "ALTER TABLE threads ADD COLUMN from_address TEXT"

    .line 8103
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_0
    const-string v1, "sms"

    .line 8105
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    const-string v1, "upgradeDatabaseToVersion96 sms.from_address Column Exist"

    .line 8106
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :cond_1
    const-string v1, "ALTER TABLE sms ADD COLUMN from_address TEXT"

    .line 8108
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_1
    const-string v1, "pdu"

    .line 8110
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_2

    const-string v1, "upgradeDatabaseToVersion96 pdu.from_address Column Exist"

    .line 8111
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :cond_2
    const-string v1, "ALTER TABLE pdu ADD COLUMN from_address TEXT"

    .line 8113
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_2
    const-string v1, "wpm"

    .line 8115
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_3

    const-string v1, "upgradeDatabaseToVersion96 wpm.from_address Column Exist"

    .line 8116
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    :cond_3
    const-string v1, "ALTER TABLE wpm ADD COLUMN from_address TEXT"

    .line 8118
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_3
    const-string v1, "spam_sms"

    .line 8120
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_4

    const-string v1, "upgradeDatabaseToVersion96 spam_sms.from_address Column Exist"

    .line 8121
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    :cond_4
    const-string v1, "ALTER TABLE spam_sms ADD COLUMN from_address TEXT"

    .line 8123
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_4
    const-string v1, "spam_pdu"

    .line 8125
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_5

    const-string v1, "upgradeDatabaseToVersion96 spam_pdu.from_address Column Exist"

    .line 8126
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_5

    :cond_5
    const-string v1, "ALTER TABLE spam_pdu ADD COLUMN from_address TEXT"

    .line 8128
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_5
    const-string v1, "im_threads"

    .line 8130
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_6

    const-string v1, "upgradeDatabaseToVersion96 im_threads.from_address Column Exist"

    .line 8131
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_6

    :cond_6
    const-string v1, "ALTER TABLE im_threads ADD COLUMN from_address TEXT"

    .line 8133
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_6
    const-string v1, "im"

    .line 8135
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_7

    const-string v1, "upgradeDatabaseToVersion96 im.from_address Column Exist"

    .line 8136
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_7

    :cond_7
    const-string v1, "ALTER TABLE im ADD COLUMN from_address TEXT"

    .line 8138
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_7
    const-string v1, "ft"

    .line 8140
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_8

    const-string v1, "upgradeDatabaseToVersion96 ft.from_address Column Exist"

    .line 8141
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_8

    :cond_8
    const-string v1, "ALTER TABLE ft ADD COLUMN from_address TEXT"

    .line 8143
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_8
    const-string v1, "spam_im"

    .line 8145
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_9

    const-string v1, "upgradeDatabaseToVersion96 spam_im.from_address Column Exist"

    .line 8146
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_9

    :cond_9
    const-string v1, "ALTER TABLE spam_im ADD COLUMN from_address TEXT"

    .line 8148
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_9
    const-string v1, "spam_ft"

    .line 8150
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_a

    const-string v1, "upgradeDatabaseToVersion96 spam_ft.from_address Column Exist"

    .line 8151
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_a

    :cond_a
    const-string v1, "ALTER TABLE spam_ft ADD COLUMN from_address TEXT"

    .line 8153
    invoke-virtual {p1, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_a
    const-string v1, "spam_filter"

    .line 8155
    invoke-direct {p0, p1, v1, v2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->findExistColumnInTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_b

    const-string p0, "upgradeDatabaseToVersion96 spam_filter.from_address Column Exist"

    .line 8156
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_b

    :cond_b
    const-string p0, "ALTER TABLE spam_filter ADD COLUMN from_address TEXT"

    .line 8158
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :goto_b
    const-string p0, "upgradeDatabaseToVersion96 end"

    .line 8160
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion97(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion97 start"

    .line 8165
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion97 end"

    .line 8167
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion98(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion98 start"

    .line 8171
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion98 end"

    .line 8173
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradeDatabaseToVersion99(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string p1, "upgradeDatabaseToVersion99 start"

    .line 8177
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p1, "upgradeDatabaseToVersion99 end"

    .line 8179
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgradePartTableToAutoIncrement(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2

    const-string v0, "part"

    .line 10176
    invoke-direct {p0, p1, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->hasAutoIncrement(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)Z

    move-result v0

    const-string v1, "TP/MmsSmsDatabaseHelper"

    if-eqz v0, :cond_0

    const-string p0, "[MmsSmsDb] upgradePartTableToAutoIncrement: already upgraded"

    .line 10177
    invoke-static {v1, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    :cond_0
    const-string v0, "[MmsSmsDb] upgradePartTableToAutoIncrement: upgrading"

    .line 10180
    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "CREATE TABLE part_temp (_id INTEGER PRIMARY KEY AUTOINCREMENT,mid INTEGER,seq INTEGER DEFAULT 0,ct TEXT,name TEXT,chset INTEGER,cd TEXT,fn TEXT,cid TEXT,cl TEXT,ctt_s INTEGER,ctt_t TEXT,_data TEXT,text TEXT);"

    .line 10185
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "INSERT INTO part_temp SELECT * from part;"

    .line 10201
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TABLE part;"

    .line 10202
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "ALTER TABLE part_temp RENAME TO part;"

    .line 10203
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE INDEX partIndex1 ON part (mid);"

    .line 10205
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 10208
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createMmsTriggers(Landroid/database/sqlite/SQLiteDatabase;)V

    return-void
.end method

.method private upgradePduTableToAutoIncrement(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "pdu"

    .line 10216
    invoke-direct {p0, p1, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->hasAutoIncrement(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)Z

    move-result v0

    const-string v1, "TP/MmsSmsDatabaseHelper"

    if-eqz v0, :cond_0

    const-string p0, "[MmsSmsDb] upgradePduTableToAutoIncrement: already upgraded"

    .line 10217
    invoke-static {v1, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    :cond_0
    const-string v0, "[MmsSmsDb] upgradePduTableToAutoIncrement: upgrading"

    .line 10220
    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10226
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "CREATE TABLE pdu_temp (_id INTEGER PRIMARY KEY AUTOINCREMENT,thread_id INTEGER,date INTEGER,date_sent INTEGER DEFAULT 0,msg_box INTEGER,read INTEGER DEFAULT 0,m_id TEXT,sub TEXT,sub_cs INTEGER,ct_t TEXT,ct_l TEXT,exp INTEGER,m_cls TEXT,m_type INTEGER,v INTEGER,m_size INTEGER,pri INTEGER,rr INTEGER,rpt_a INTEGER,resp_st INTEGER,st INTEGER,tr_id TEXT,retr_st INTEGER,retr_txt TEXT,retr_txt_cs INTEGER,read_status INTEGER,ct_cls INTEGER,resp_txt TEXT,d_tm INTEGER,d_rpt INTEGER,locked INTEGER DEFAULT 0,"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "mms"

    .line 10258
    invoke-static {v1}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " INTEGER DEFAULT "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "default"

    invoke-static {v1}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, ", "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "seen"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " INTEGER DEFAULT 0,deletable INTEGER DEFAULT 0,hidden INTEGER DEFAULT 0,app_id INTEGER DEFAULT 0,msg_id INTEGER DEFAULT 0,callback_set INTEGER DEFAULT 0,"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "reserved"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " INTEGER DEFAULT 0,"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "text_only"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "d_rpt_st"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "rr_st"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " INTEGER DEFAULT 0);"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 10226
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "INSERT INTO pdu_temp SELECT * from pdu;"

    .line 10271
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TABLE pdu;"

    .line 10272
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "ALTER TABLE pdu_temp RENAME TO pdu;"

    .line 10273
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE INDEX pduIndex1 ON pdu (thread_id,locked);"

    .line 10275
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 10278
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createMmsTriggers(Landroid/database/sqlite/SQLiteDatabase;)V

    return-void
.end method

.method private upgradeThreadsTableToAutoIncrement(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string v0, "threads"

    .line 10110
    invoke-direct {p0, p1, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->hasAutoIncrement(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)Z

    move-result p0

    const-string v0, "TP/MmsSmsDatabaseHelper"

    if-eqz p0, :cond_0

    const-string p0, "[MmsSmsDb] upgradeThreadsTableToAutoIncrement: already upgraded"

    .line 10111
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    :cond_0
    const-string p0, "[MmsSmsDb] upgradeThreadsTableToAutoIncrement: upgrading"

    .line 10114
    invoke-static {v0, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string p0, "CREATE TABLE threads_temp (_id INTEGER PRIMARY KEY AUTOINCREMENT,date INTEGER DEFAULT 0,message_count INTEGER DEFAULT 0,recipient_ids TEXT,snippet TEXT,snippet_cs INTEGER DEFAULT 0,read INTEGER DEFAULT 1,type INTEGER DEFAULT 0,error INTEGER DEFAULT 0,has_attachment INTEGER DEFAULT 0,unread_count INTEGER DEFAULT 0,alert_expired INTEGER DEFAULT 1,reply_all INTEGER DEFAULT -1,group_snippet TEXT,message_type INTEGER DEFAULT 0,display_recipient_ids TEXT);"

    .line 10120
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "INSERT INTO threads_temp SELECT * from threads;"

    .line 10142
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "DROP TABLE threads;"

    .line 10143
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "ALTER TABLE threads_temp RENAME TO threads;"

    .line 10144
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE INDEX threadsIndex1 ON threads (date);"

    .line 10146
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method private upgrade_pdu_Table_trigger(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string v0, "upgrade_pdu_Table_trigger start"

    .line 6175
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "DROP TRIGGER IF EXISTS pdu_update_thread_on_insert;"

    .line 6178
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER pdu_update_thread_on_insert AFTER INSERT ON pdu   WHEN new.m_type=132    OR new.m_type=130    OR new.m_type=128 BEGIN  UPDATE threads SET    date = new.date * 1000,     snippet = substr(new.sub,1,500),     snippet_cs = new.sub_cs,    snippet_type = new.msg_box  WHERE threads._id = new.thread_id;   UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM pdu          WHERE read = 0            AND thread_id = threads._id             AND (m_type=132 OR m_type=130 OR m_type=128))       WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; END;"

    .line 6179
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS pdu_update_thread_date_on_update;"

    .line 6185
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER pdu_update_thread_date_on_update AFTER  UPDATE OF date, sub  ON pdu   WHEN new.m_type=132    OR new.m_type=130    OR new.m_type=128 BEGIN  UPDATE threads SET    date = new.date * 1000,     snippet = substr(new.sub,1,500),     snippet_cs = new.sub_cs,    snippet_type = new.msg_box  WHERE threads._id = new.thread_id; END;"

    .line 6186
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS insert_mms_pending_on_insert"

    .line 6193
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER insert_mms_pending_on_insert AFTER INSERT ON pdu WHEN new.m_type=130  OR new.m_type=135 BEGIN   INSERT INTO pending_msgs    (proto_type,     msg_id,     msg_type,     sim_slot2,     err_type,     err_code,     retry_index,     due_time)   VALUES     (1,      new._id,      new.m_type,      new.sim_slot,0,0,0,0);END;"

    .line 6194
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS insert_mms_pending_on_update"

    .line 6218
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER insert_mms_pending_on_update AFTER UPDATE ON pdu WHEN new.m_type=128  AND new.msg_box=4  AND old.msg_box!=4 BEGIN   INSERT INTO pending_msgs    (proto_type,     msg_id,     msg_type,     sim_slot2,     err_type,     err_code,     retry_index,     due_time)   VALUES     (1,      new._id,      new.m_type,      new.sim_slot,0,0,0,0);END;"

    .line 6219
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p1, "upgrade_pdu_Table_trigger end"

    .line 6241
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgrade_sms_Table_trigger(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string v0, "upgrade_sms_Table_trigger start"

    .line 6245
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "DROP TRIGGER IF EXISTS sms_update_thread_on_insert;"

    .line 6248
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER sms_update_thread_on_insert AFTER INSERT ON sms BEGIN  UPDATE threads SET    date = new.date,     snippet = substr(new.body,1,300),     snippet_cs = 0,    snippet_type = new.type  WHERE threads._id = new.thread_id  AND (new.reserved = 0 OR (new.reserved = 1 AND new.type = 3));   UPDATE threads SET date = NULL        WHERE (threads._id = new.thread_id)           AND new.reserved > 0           AND 1 = (SELECT COUNT(sms._id) FROM sms WHERE thread_id = new.thread_id)           AND 0 = (SELECT COUNT(wpm._id) FROM wpm WHERE thread_id = new.thread_id)           AND 0 = (SELECT COUNT(pdu._id) FROM pdu WHERE thread_id = new.thread_id AND (m_type=132 OR m_type=130 OR m_type=128));   UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM sms          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; END;"

    .line 6249
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS sms_update_thread_date_on_update;"

    .line 6252
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER sms_update_thread_date_on_update AFTER  UPDATE OF body, date  ON sms BEGIN  UPDATE threads SET    date = new.date,     snippet = substr(new.body,1,300),     snippet_cs = 0,    snippet_type = new.type  WHERE threads._id = new.thread_id; END;"

    .line 6253
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p1, "upgrade_sms_Table_trigger end"

    .line 6258
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method private upgrade_wpm_Table_trigger(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string p0, "TP/MmsSmsDatabaseHelper"

    const-string v0, "upgrade_wpm_Table_trigger start"

    .line 6262
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "DROP TRIGGER IF EXISTS wpm_update_thread_on_insert;"

    .line 6265
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER wpm_update_thread_on_insert AFTER INSERT ON wpm BEGIN  UPDATE threads SET    date = new.date,     snippet = substr(new.body,1,300),     snippet_cs = 0,    snippet_type = 1  WHERE threads._id = new.thread_id;   UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(wpm._id) FROM wpm LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id      ) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3) , unread_count =        (SELECT count(*) FROM sms LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND sms.read = 0 AND sms.type = 1) +        (SELECT count(*) FROM wpm LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id       AND wpm.read = 0 ) +        (SELECT count(*) FROM pdu LEFT JOIN threads        ON threads._id = thread_id       WHERE thread_id = new.thread_id        AND pdu.read = 0        AND (m_type = 128 OR m_type = 132 OR m_type = 130)       AND msg_box = 1)        WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM wpm          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; END;"

    .line 6266
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "DROP TRIGGER IF EXISTS wpm_update_thread_date_on_update;"

    .line 6269
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TRIGGER wpm_update_thread_date_on_update AFTER  UPDATE OF date, body  ON wpm BEGIN  UPDATE threads SET    date = new.date,     snippet = substr(new.body,1,300),     snippet_cs = 0,    snippet_type = 1  WHERE threads._id = new.thread_id; END;"

    .line 6270
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p1, "upgrade_wpm_Table_trigger end"

    .line 6275
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method


# virtual methods
.method createBotServiceIdSmsNumberTable(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "CREATE TABLE IF NOT EXISTS bot_service_id_sms_number (_id INTEGER PRIMARY KEY AUTOINCREMENT,service_id TEXT NOT NULL,sms_number TEXT NOT NULL)"

    .line 2920
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method createCategoryTables(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0

    const-string p0, "CREATE TABLE IF NOT EXISTS thread_categories (_id INTEGER PRIMARY KEY AUTOINCREMENT,thread_id INTEGER NOT NULL,category_id INTEGER NOT NULL)"

    .line 2907
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TABLE IF NOT EXISTS categories (_id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT NOT NULL,is_enable INTEGER DEFAULT 1,order_num INTEGER DEFAULT 0)"

    .line 2912
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method createCommonTables(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    const-string p0, "CREATE TABLE canonical_addresses (_id INTEGER PRIMARY KEY AUTOINCREMENT,address TEXT);"

    .line 2940
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TABLE threads (_id INTEGER PRIMARY KEY AUTOINCREMENT,date INTEGER DEFAULT 0,message_count INTEGER DEFAULT 0,recipient_ids TEXT,snippet TEXT,snippet_cs INTEGER DEFAULT 0,read INTEGER DEFAULT 1,archived INTEGER DEFAULT 0,type INTEGER DEFAULT 0,error INTEGER DEFAULT 0,has_attachment INTEGER DEFAULT 0,unread_count INTEGER DEFAULT 0,alert_expired INTEGER DEFAULT 1,reply_all INTEGER DEFAULT -1,group_snippet TEXT,message_type INTEGER DEFAULT 0,display_recipient_ids TEXT,translate_mode TEXT default \'off\',secret_mode INTEGER DEFAULT 0,safe_message INTEGER DEFAULT 0,classification INTEGER DEFAULT 0,is_mute INTEGER DEFAULT 0,chat_type INTEGER DEFAULT 0,pa_uuid TEXT,pa_thread INTEGER DEFAULT 0,menustring TEXT,pin_to_top INTEGER DEFAULT -1,using_mode INTEGER DEFAULT 0,from_address TEXT,message_date INTEGER,pa_ownnumber TEXT,snippet_type INTEGER,bin_status INTEGER DEFAULT 0);"

    .line 2953
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE INDEX threadsIndex1 ON threads (date);"

    .line 2996
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 3001
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "CREATE TABLE pending_msgs (_id INTEGER PRIMARY KEY,proto_type INTEGER,msg_id INTEGER,msg_type INTEGER,sim_slot2 INTEGER DEFAULT 0,err_type INTEGER,err_code INTEGER,retry_index INTEGER NOT NULL DEFAULT 0,due_time INTEGER,"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "pending"

    .line 3011
    invoke-static {v0}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "  INTEGER DEFAULT "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "default0"

    invoke-static {v0}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, ", "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "last_try"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, " INTEGER);"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    .line 3001
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE INDEX pending_msgsIndex1 ON pending_msgs (msg_id);"

    .line 3015
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method createMmsTables(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .line 2369
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "CREATE TABLE pdu (_id INTEGER PRIMARY KEY AUTOINCREMENT,thread_id INTEGER,date INTEGER,date_sent INTEGER DEFAULT 0,msg_box INTEGER,read INTEGER DEFAULT 0,m_id TEXT,sub TEXT,sub_cs INTEGER,ct_t TEXT,ct_l TEXT,exp INTEGER,m_cls TEXT,m_type INTEGER,v INTEGER,m_size INTEGER,pri INTEGER,rr INTEGER,rpt_a INTEGER,resp_st INTEGER,st INTEGER,tr_id TEXT,retr_st INTEGER,retr_txt TEXT,retr_txt_cs INTEGER,read_status INTEGER,ct_cls INTEGER,resp_txt TEXT,d_tm INTEGER,d_rpt INTEGER,locked INTEGER DEFAULT 0,"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "mms"

    .line 2401
    invoke-static {v0}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, " INTEGER DEFAULT "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "default"

    invoke-static {v0}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, ", "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "seen"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, " INTEGER DEFAULT 0,"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "creator"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " TEXT,"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "sim_slot"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "sim_imsi"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " TEXT,deletable INTEGER DEFAULT 0,hidden INTEGER DEFAULT 0,app_id INTEGER DEFAULT 0,msg_id INTEGER DEFAULT 0,callback_set INTEGER DEFAULT 0,"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "reserved"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "text_only"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " INTEGER DEFAULT 0,spam_report INTEGER DEFAULT 0,secret_mode INTEGER DEFAULT 0,safe_message INTEGER DEFAULT 0,favorite INTEGER DEFAULT 0,"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "d_rpt_st"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "rr_st"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "using_mode"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "from_address"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "device_name"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "correlation_tag"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "object_id"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "cmc_prop"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "bin_info"

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_original_body"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_body"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_original_key"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_recipient_address"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_content_uri"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_content_type"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_file_name"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_type"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, " INTEGER DEFAULT -1,"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "re_count_info"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, " TEXT);"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    .line 2369
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE INDEX pduIndex1 ON pdu (thread_id,locked);"

    .line 2438
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TABLE addr (_id INTEGER PRIMARY KEY,msg_id INTEGER,contact_id INTEGER,address TEXT,type INTEGER,charset INTEGER);"

    .line 2441
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE INDEX addrIndex1 ON addr (msg_id);"

    .line 2450
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TABLE part (_id INTEGER PRIMARY KEY AUTOINCREMENT,mid INTEGER,seq INTEGER DEFAULT 0,ct TEXT,name TEXT,chset INTEGER,cd TEXT,fn TEXT,cid TEXT,cl TEXT,ctt_s INTEGER,ctt_t TEXT,_data TEXT,text TEXT,sef_type INTEGER DEFAULT 0);"

    .line 2453
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE INDEX partIndex1 ON part (mid);"

    .line 2472
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TABLE rate (sent_time INTEGER);"

    .line 2475
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TABLE drm (_id INTEGER PRIMARY KEY,_data TEXT);"

    .line 2478
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE VIEW pdu_restricted AS SELECT * FROM pdu WHERE (msg_box=1 OR msg_box=2) AND (m_type!=130);"

    .line 2483
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    return-void
.end method

.method createSmsTables(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 2
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .line 2741
    sget-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->CREATE_SMS_TABLE_STRING:Ljava/lang/String;

    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 2747
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "CREATE TABLE raw (_id INTEGER PRIMARY KEY,date INTEGER,reference_number INTEGER,count INTEGER,sequence INTEGER,destination_port INTEGER,address TEXT,format TEXT,sim_slot INTEGER DEFAULT 0,"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "sms"

    .line 2757
    invoke-static {v1}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "  INTEGER DEFAULT "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "default"

    invoke-static {v1}, Lcom/android/providers/telephony/TelephonyReflector;->getSubIdString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, ", pdu TEXT,deleted INTEGER DEFAULT 0,message_body TEXT,display_originating_addr TEXT);"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 2747
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TABLE incomplete_lms (_id INTEGER PRIMARY KEY,address TEXT,reference_number INTEGER,uri TEXT);"

    .line 2767
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 2774
    sget-object v0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->CREATE_ATTACHMENTS_TABLE_STRING:Ljava/lang/String;

    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE TABLE sr_pending (reference_number INTEGER,action TEXT,data TEXT);"

    .line 2780
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string v0, "CREATE VIEW sms_restricted AS SELECT * FROM sms WHERE type=1 OR type=2;"

    .line 2786
    invoke-virtual {p1, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    .line 2792
    iget-object p0, p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mContext:Landroid/content/Context;

    invoke-virtual {p0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object p0

    const-string v0, "android.hardware.type.automotive"

    invoke-virtual {p0, v0}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_0

    const-string p0, "CREATE TABLE sms_changes (_id INTEGER PRIMARY KEY,orig_rowid INTEGER,sub_id INTEGER,type INTEGER,new_read_status INTEGER);"

    .line 2795
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER sms_update_on_read_change_row AFTER UPDATE OF read ON sms WHEN NEW.read != OLD.read BEGIN   INSERT INTO sms_changes VALUES(null, NEW._id, NEW.sub_id, 0, NEW.read); END;"

    .line 2802
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "CREATE TRIGGER sms_delete_change_row AFTER DELETE ON sms BEGIN   INSERT INTO sms_changes values(null, OLD._id, OLD.sub_id, 1, null); END;"

    .line 2808
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    :cond_0
    return-void
.end method

.method getRCSContentValues(Landroid/database/Cursor;Ljava/lang/String;)Landroid/content/ContentValues;
    .locals 18

    move-object/from16 v0, p1

    move-object/from16 v1, p2

    .line 9452
    new-instance v2, Landroid/content/ContentValues;

    invoke-direct {v2}, Landroid/content/ContentValues;-><init>()V

    const-string v3, "rcs_threads"

    .line 9453
    invoke-virtual {v3, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    const-string v11, "date"

    const-string v15, "session_id"

    const/4 v5, 0x7

    const-string v6, "read"

    const/4 v7, 0x6

    const/4 v8, 0x5

    const/4 v9, 0x3

    const/4 v10, 0x2

    const/4 v12, 0x0

    const/4 v13, 0x4

    const/4 v14, 0x1

    .line 9502
    invoke-static {v14}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    if-eqz v3, :cond_1

    .line 9454
    invoke-interface {v0, v13}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_0

    const-string v3, "/fileAttach/"

    .line 9455
    invoke-virtual {v1, v3}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_0

    const/16 v3, 0x2f

    .line 9456
    invoke-virtual {v1, v3}, Ljava/lang/String;->lastIndexOf(I)I

    move-result v3

    add-int/2addr v3, v14

    invoke-virtual {v1, v3}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v1

    .line 9459
    :cond_0
    invoke-interface {v0, v12}, Landroid/database/Cursor;->getInt(I)I

    move-result v3

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    const-string v4, "normal_thread_id"

    invoke-virtual {v2, v4, v3}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    .line 9460
    invoke-interface {v0, v14}, Landroid/database/Cursor;->getLong(I)J

    move-result-wide v3

    invoke-static {v3, v4}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v3

    invoke-virtual {v2, v11, v3}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Long;)V

    .line 9461
    invoke-interface {v0, v10}, Landroid/database/Cursor;->getInt(I)I

    move-result v3

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    const-string v4, "message_count"

    invoke-virtual {v2, v4, v3}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    .line 9462
    invoke-interface {v0, v9}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v3

    const-string v4, "recipient_ids"

    invoke-virtual {v2, v4, v3}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const-string v3, "snippet"

    .line 9463
    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    .line 9464
    invoke-interface {v0, v8}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "snippet_cs"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    .line 9465
    invoke-interface {v0, v7}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-virtual {v2, v6, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    .line 9466
    invoke-interface {v0, v5}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "im_type"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0x8

    .line 9467
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "error"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0x9

    .line 9468
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "has_attachment"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0xa

    .line 9469
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "unread_count"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0xb

    .line 9470
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "alert_expired"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0xc

    .line 9471
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "reply_all"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0xd

    .line 9472
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v1

    const-string v3, "group_snippet"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const/16 v1, 0xe

    .line 9473
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "message_type"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0xf

    .line 9474
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v1

    const-string v3, "display_recipient_ids"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const/16 v1, 0x10

    .line 9475
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v2, v15, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const/16 v1, 0x11

    .line 9476
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v1

    const-string v3, "alias"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const/16 v1, 0x12

    .line 9477
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "opened"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0x13

    .line 9478
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v0

    const-string v1, "translate_mode"

    invoke-virtual {v2, v1, v0}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    goto/16 :goto_1

    :cond_1
    const-string v3, "rcs_msgs"

    .line 9479
    invoke-virtual {v3, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_4

    const-string v3, "spam_rcs_msgs"

    invoke-virtual {v3, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_2

    goto/16 :goto_0

    :cond_2
    const-string v3, "rcs_ft"

    .line 9503
    invoke-virtual {v3, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_3

    const-string v3, "spam_rcs_ft"

    invoke-virtual {v3, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_5

    .line 9504
    :cond_3
    invoke-interface {v0, v14}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v1

    const/16 v3, 0x2f

    .line 9505
    invoke-virtual {v1, v3}, Ljava/lang/String;->lastIndexOf(I)I

    move-result v3

    add-int/2addr v3, v14

    invoke-virtual {v1, v3}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v3

    .line 9507
    invoke-interface {v0, v12}, Landroid/database/Cursor;->getInt(I)I

    move-result v12

    invoke-static {v12}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v12

    const-string v14, "bytes_transf"

    invoke-virtual {v2, v14, v12}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const-string v12, "file_path"

    .line 9508
    invoke-virtual {v2, v12, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const-string v1, "file_name"

    .line 9509
    invoke-virtual {v2, v1, v3}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    .line 9510
    invoke-interface {v0, v10}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "file_size"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    .line 9511
    invoke-interface {v0, v9}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v1

    const-string v3, "thumbnail_path"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    .line 9512
    invoke-interface {v0, v13}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "cancel_reason"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    .line 9513
    invoke-interface {v0, v8}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "reject_reason"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    .line 9514
    invoke-interface {v0, v7}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "display_notification_status"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    .line 9515
    invoke-interface {v0, v5}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v1

    const-string v3, "chat_session_id"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const/16 v1, 0x8

    .line 9516
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v2, v15, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const/16 v1, 0x9

    .line 9517
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v1

    const-string v3, "content_type"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const/16 v1, 0xa

    .line 9518
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "rcsdb_id"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0xb

    .line 9519
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getLong(I)J

    move-result-wide v7

    invoke-static {v7, v8}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v1

    const-string v3, "delivered_timestamp"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Long;)V

    const/16 v1, 0xc

    .line 9520
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v1

    const-string v3, "remote_uri"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const/16 v1, 0xd

    .line 9521
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "seen"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0xe

    .line 9522
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-virtual {v2, v6, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0xf

    .line 9523
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "type"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0x10

    .line 9524
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "thread_id"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0x11

    .line 9525
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v1

    const-string v3, "address"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const/16 v1, 0x12

    .line 9526
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getLong(I)J

    move-result-wide v5

    invoke-static {v5, v6}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v1

    invoke-virtual {v2, v11, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Long;)V

    const/16 v1, 0x13

    .line 9527
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getLong(I)J

    move-result-wide v5

    invoke-static {v5, v6}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v1

    const-string v3, "date_sent"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Long;)V

    const/16 v1, 0x14

    .line 9528
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "status"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0x15

    .line 9529
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "hidden"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0x16

    .line 9530
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "locked"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0x17

    .line 9531
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v1

    const-string v3, "user_alias"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const/16 v1, 0x18

    .line 9532
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "displayed_counter"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0x19

    .line 9533
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v0

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    const-string v1, "reserved"

    invoke-virtual {v2, v1, v0}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const-string v0, "service_type"

    .line 9534
    invoke-virtual {v2, v0, v4}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    goto/16 :goto_1

    .line 9480
    :cond_4
    :goto_0
    invoke-interface {v0, v12}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v1

    const-string v3, "body"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    .line 9481
    invoke-interface {v0, v14}, Landroid/database/Cursor;->getLong(I)J

    move-result-wide v16

    invoke-static/range {v16 .. v17}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v1

    const-string v3, "delivered_timestamp"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Long;)V

    .line 9482
    invoke-interface {v0, v10}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "display_notification_status"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    .line 9483
    invoke-interface {v0, v9}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v1

    const-string v3, "imdn_message_id"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    .line 9484
    invoke-interface {v0, v13}, Landroid/database/Cursor;->getLong(I)J

    move-result-wide v9

    invoke-static {v9, v10}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v1

    const-string v3, "date_sent"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Long;)V

    .line 9485
    invoke-interface {v0, v8}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "thread_id"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    .line 9486
    invoke-interface {v0, v7}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "seen"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    .line 9487
    invoke-interface {v0, v5}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-virtual {v2, v6, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0x8

    .line 9488
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    move-object/from16 v3, p0

    invoke-direct {v3, v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->getNewRCSMessageType(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "message_type"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0x9

    .line 9489
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v2, v15, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const/16 v1, 0xa

    .line 9490
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v1

    const-string v3, "rcsdb_id"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const/16 v1, 0xb

    .line 9491
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v1

    const-string v3, "content_type"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const/16 v1, 0xc

    .line 9492
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getLong(I)J

    move-result-wide v5

    invoke-static {v5, v6}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v1

    invoke-virtual {v2, v11, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Long;)V

    const/16 v1, 0xd

    .line 9493
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v1

    const-string v3, "address"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const/16 v1, 0xe

    .line 9494
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v1

    const-string v3, "remote_uri"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const/16 v1, 0xf

    .line 9495
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "type"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0x10

    .line 9496
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "status"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0x11

    .line 9497
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "hidden"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0x12

    .line 9498
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "locked"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0x13

    .line 9499
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v1

    const-string v3, "user_alias"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    const/16 v1, 0x14

    .line 9500
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const-string v3, "displayed_counter"

    invoke-virtual {v2, v3, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const/16 v1, 0x15

    .line 9501
    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I

    move-result v0

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    const-string v1, "reserved"

    invoke-virtual {v2, v1, v0}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    const-string v0, "service_type"

    .line 9502
    invoke-virtual {v2, v0, v4}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    :cond_5
    :goto_1
    return-object v2
.end method

.method public declared-synchronized getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase;
    .locals 2

    monitor-enter p0

    .line 9924
    :try_start_0
    invoke-super {p0}, Landroid/database/sqlite/SQLiteOpenHelper;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;

    move-result-object v0

    .line 9928
    iget-object v1, p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->isCredentialProtectedStorage()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 9929
    invoke-direct {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->setInitialCreateDone()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 9932
    :cond_0
    monitor-exit p0

    return-object v0

    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public declared-synchronized getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;
    .locals 10

    monitor-enter p0

    .line 9937
    :try_start_0
    invoke-super {p0}, Landroid/database/sqlite/SQLiteOpenHelper;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;

    move-result-object v0

    .line 9941
    iget-object v1, p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->isCredentialProtectedStorage()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 9942
    invoke-direct {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->setInitialCreateDone()V

    .line 9945
    :cond_0
    sget-boolean v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sIsFirstCall:Z

    const/4 v2, 0x0

    if-eqz v1, :cond_1

    .line 9946
    sput-boolean v2, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sIsFirstCall:Z

    const-string v1, "TP/MmsSmsDatabaseHelper"

    const-string v3, "getWritableDatabase(): first call start"

    .line 9947
    invoke-static {v1, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_8

    .line 9949
    :try_start_1
    invoke-static {v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createSmsTableDeleteTriggers(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 9950
    invoke-static {v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createTriggersDeleteOnPdu(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 9951
    invoke-static {v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createTriggersDeleteOnImFt(Landroid/database/sqlite/SQLiteDatabase;)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_8

    goto :goto_0

    :catch_0
    :try_start_2
    const-string v1, "TP/MmsSmsDatabaseHelper"

    const-string v3, "getWritableDatabase(): Create triggers on first call failed!"

    .line 9953
    invoke-static {v1, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    :goto_0
    const-string v1, "TP/MmsSmsDatabaseHelper"

    const-string v3, "getWritableDatabase(): first call end"

    .line 9955
    invoke-static {v1, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9958
    :cond_1
    sget-boolean v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sTriedAutoIncrement:Z

    if-nez v1, :cond_8

    const/4 v1, 0x1

    .line 9959
    sput-boolean v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sTriedAutoIncrement:Z

    const-string v3, "threads"

    .line 9960
    invoke-direct {p0, v0, v3}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->hasAutoIncrement(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)Z

    move-result v3

    const-string v4, "canonical_addresses"

    .line 9961
    invoke-direct {p0, v0, v4}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->hasAutoIncrement(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)Z

    move-result v4

    const-string v5, "part"

    .line 9962
    invoke-direct {p0, v0, v5}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->hasAutoIncrement(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)Z

    move-result v5

    const-string v6, "pdu"

    .line 9963
    invoke-direct {p0, v0, v6}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->hasAutoIncrement(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)Z

    move-result v6

    .line 9964
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "[getWritableDatabase] hasAutoIncrementThreads: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v8, " hasAutoIncrementAddresses: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v8, " hasAutoIncrementPart: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v8, " hasAutoIncrementPdu: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v6}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    const-string v8, "TP/MmsSmsDatabaseHelper"

    .line 9969
    invoke-static {v8, v7}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9970
    invoke-static {v7}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->localLog(Ljava/lang/String;)V

    if-nez v3, :cond_2

    .line 9976
    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_8

    .line 9983
    :try_start_3
    invoke-direct {p0, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeThreadsTableToAutoIncrement(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 9984
    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 9989
    :try_start_4
    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_8

    goto :goto_1

    :catchall_0
    move-exception v3

    :try_start_5
    const-string v7, "TP/MmsSmsDatabaseHelper"

    .line 9986
    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Failed to add autoIncrement to threads;: "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 9989
    :try_start_6
    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    move v3, v2

    goto :goto_2

    :catchall_1
    move-exception v1

    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 9990
    throw v1

    :cond_2
    :goto_1
    move v3, v1

    :goto_2
    if-nez v4, :cond_3

    .line 9993
    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_8

    .line 10000
    :try_start_7
    invoke-direct {p0, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeAddressTableToAutoIncrement(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 10001
    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    .line 10007
    :try_start_8
    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_8

    goto :goto_3

    :catchall_2
    move-exception v4

    :try_start_9
    const-string v7, "TP/MmsSmsDatabaseHelper"

    .line 10003
    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Failed to add autoIncrement to canonical_addresses: "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10004
    invoke-virtual {v4}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    .line 10003
    invoke-static {v7, v8, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    .line 10007
    :try_start_a
    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    move v4, v2

    goto :goto_4

    :catchall_3
    move-exception v1

    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 10008
    throw v1

    :cond_3
    :goto_3
    move v4, v1

    :goto_4
    if-nez v5, :cond_4

    .line 10011
    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_8

    .line 10018
    :try_start_b
    invoke-direct {p0, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradePartTableToAutoIncrement(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 10019
    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_4

    .line 10025
    :try_start_c
    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_8

    goto :goto_5

    :catchall_4
    move-exception v5

    :try_start_d
    const-string v7, "TP/MmsSmsDatabaseHelper"

    .line 10021
    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Failed to add autoIncrement to part: "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10022
    invoke-virtual {v5}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    .line 10021
    invoke-static {v7, v8, v5}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_5

    .line 10025
    :try_start_e
    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    move v5, v2

    goto :goto_6

    :catchall_5
    move-exception v1

    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 10026
    throw v1

    :cond_4
    :goto_5
    move v5, v1

    :goto_6
    if-nez v6, :cond_5

    .line 10029
    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_8

    .line 10036
    :try_start_f
    invoke-direct {p0, v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradePduTableToAutoIncrement(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 10037
    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_6

    .line 10043
    :try_start_10
    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_8

    goto :goto_7

    :catchall_6
    move-exception v1

    :try_start_11
    const-string v6, "TP/MmsSmsDatabaseHelper"

    .line 10039
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Failed to add autoIncrement to pdu: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10040
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    .line 10039
    invoke-static {v6, v7, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_7

    .line 10043
    :try_start_12
    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    move v1, v2

    goto :goto_7

    :catchall_7
    move-exception v1

    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 10044
    throw v1

    :cond_5
    :goto_7
    if-eqz v3, :cond_6

    if-eqz v4, :cond_6

    if-eqz v5, :cond_6

    if-eqz v1, :cond_6

    .line 10050
    iget-object v1, p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mLowStorageMonitor:Lcom/android/providers/telephony/MmsSmsDatabaseHelper$LowStorageMonitor;

    if-eqz v1, :cond_8

    const-string v1, "TP/MmsSmsDatabaseHelper"

    const-string v2, "Unregistering mLowStorageMonitor - we\'ve upgraded"

    .line 10052
    invoke-static {v1, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10053
    iget-object v1, p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mContext:Landroid/content/Context;

    iget-object v2, p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mLowStorageMonitor:Lcom/android/providers/telephony/MmsSmsDatabaseHelper$LowStorageMonitor;

    invoke-virtual {v1, v2}, Landroid/content/Context;->unregisterReceiver(Landroid/content/BroadcastReceiver;)V

    const/4 v1, 0x0

    .line 10054
    iput-object v1, p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mLowStorageMonitor:Lcom/android/providers/telephony/MmsSmsDatabaseHelper$LowStorageMonitor;

    goto :goto_8

    .line 10057
    :cond_6
    sget-boolean v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sFakeLowStorageTest:Z

    if-eqz v1, :cond_7

    .line 10058
    sput-boolean v2, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sFakeLowStorageTest:Z

    .line 10063
    :cond_7
    iget-object v1, p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mLowStorageMonitor:Lcom/android/providers/telephony/MmsSmsDatabaseHelper$LowStorageMonitor;

    if-nez v1, :cond_8

    const-string v1, "TP/MmsSmsDatabaseHelper"

    const-string v2, "[getWritableDatabase] turning on storage monitor"

    .line 10064
    invoke-static {v1, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10065
    new-instance v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper$LowStorageMonitor;

    invoke-direct {v1, p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper$LowStorageMonitor;-><init>(Lcom/android/providers/telephony/MmsSmsDatabaseHelper;)V

    iput-object v1, p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mLowStorageMonitor:Lcom/android/providers/telephony/MmsSmsDatabaseHelper$LowStorageMonitor;

    .line 10066
    new-instance v1, Landroid/content/IntentFilter;

    invoke-direct {v1}, Landroid/content/IntentFilter;-><init>()V

    const-string v2, "android.intent.action.DEVICE_STORAGE_LOW"

    .line 10067
    invoke-virtual {v1, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    const-string v2, "android.intent.action.DEVICE_STORAGE_OK"

    .line 10068
    invoke-virtual {v1, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 10069
    iget-object v2, p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mContext:Landroid/content/Context;

    iget-object v3, p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mLowStorageMonitor:Lcom/android/providers/telephony/MmsSmsDatabaseHelper$LowStorageMonitor;

    invoke-virtual {v2, v3, v1}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 10074
    :cond_8
    :goto_8
    iget-object v1, p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mUserAccountReceiver:Lcom/android/providers/telephony/MmsSmsDatabaseHelper$UserAccountReceiver;

    if-nez v1, :cond_9

    .line 10075
    new-instance v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper$UserAccountReceiver;

    invoke-direct {v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper$UserAccountReceiver;-><init>()V

    iput-object v1, p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mUserAccountReceiver:Lcom/android/providers/telephony/MmsSmsDatabaseHelper$UserAccountReceiver;

    .line 10076
    new-instance v1, Landroid/content/IntentFilter;

    invoke-direct {v1}, Landroid/content/IntentFilter;-><init>()V

    const-string v2, "android.intent.action.USER_REMOVED"

    .line 10077
    invoke-virtual {v1, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 10078
    iget-object v2, p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mContext:Landroid/content/Context;

    iget-object v3, p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mUserAccountReceiver:Lcom/android/providers/telephony/MmsSmsDatabaseHelper$UserAccountReceiver;

    invoke-virtual {v2, v3, v1}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_8

    .line 10081
    :cond_9
    monitor-exit p0

    return-object v0

    :catchall_8
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public onConfigure(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1

    const-string p0, "PRAGMA synchronous=NORMAL"

    .line 4356
    invoke-virtual {p1, p0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V

    const-string p0, "PRAGMA wal_autocheckpoint=1000"

    const/4 v0, 0x0

    .line 4357
    invoke-static {p1, p0, v0}, Landroid/database/DatabaseUtils;->longForQuery(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;)J

    const-string p0, "PRAGMA journal_size_limit=8388608"

    .line 4358
    invoke-static {p1, p0, v0}, Landroid/database/DatabaseUtils;->longForQuery(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;)J

    return-void
.end method

.method public onCreate(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 3

    const-string v0, "onCreate: Creating all SMS-MMS tables."

    .line 2116
    invoke-static {v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->localLog(Ljava/lang/String;)V

    .line 2118
    invoke-static {}, Landroid/os/storage/StorageManager;->isFileEncryptedNativeOrEmulated()Z

    move-result v0

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mContext:Landroid/content/Context;

    if-eqz v0, :cond_2

    .line 2119
    invoke-virtual {v0}, Landroid/content/Context;->isCredentialProtectedStorage()Z

    move-result v0

    if-eqz v0, :cond_2

    :cond_0
    const-string v0, "onCreate: broadcasting ACTION_SMS_MMS_DB_CREATED"

    .line 2120
    invoke-static {v0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->localLog(Ljava/lang/String;)V

    .line 2122
    new-instance v0, Landroid/content/Intent;

    const-string v1, "android.provider.action.SMS_MMS_DB_CREATED"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    const/high16 v1, 0x1000000

    .line 2123
    invoke-virtual {v0, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 2125
    invoke-direct {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->isInitialCreateDone()Z

    move-result v1

    const-string v2, "android.provider.extra.IS_INITIAL_CREATE"

    if-eqz v1, :cond_1

    const-string v1, "onCreate: was already called once earlier"

    .line 2128
    invoke-static {v1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->localLogWtf(Ljava/lang/String;)V

    const/4 v1, 0x0

    .line 2129
    invoke-virtual {v0, v2, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    goto :goto_0

    .line 2131
    :cond_1
    invoke-direct {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->setInitialCreateDone()V

    const/4 v1, 0x1

    .line 2132
    invoke-virtual {v0, v2, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 2135
    :goto_0
    iget-object v1, p0, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->mContext:Landroid/content/Context;

    invoke-virtual {v1, v0}, Landroid/content/Context;->sendBroadcast(Landroid/content/Intent;)V

    .line 2138
    :cond_2
    invoke-virtual {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createMmsTables(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2139
    invoke-virtual {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createSmsTables(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2141
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createImTables(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2142
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createFtTables(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2144
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createFTRetryTable(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2146
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createImThreadsTables(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2149
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createCmasTable(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2152
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createWpmTable(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2154
    invoke-virtual {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createCommonTables(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2156
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createChannelTable(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2158
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createThreadsSnippetTriggers(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2159
    invoke-static {p1}, Lcom/android/providers/telephony/bin/BinCommonDbUtil;->createBinTables(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2160
    invoke-static {p1}, Lcom/android/providers/telephony/bin/BinCommonDbUtil;->createBinStatusAllTrigger(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2161
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createThreadsView(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2162
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createImThreadsView(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2165
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createCommonTriggers(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2166
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createThreadsMessageTypeTriggers(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2167
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createMmsTriggers(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2169
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createCmasTriggers(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2171
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createWordsTables(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2174
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createSpamMmsTables(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2175
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createSpamSmsTables(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2176
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createSpamMmsTriggers(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2177
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createSpamFilterTable(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2179
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createSpamImTable(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2180
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createSpamFtTable(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2184
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createThreadsSafeMessageTriggers(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2187
    invoke-virtual {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createCategoryTables(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2189
    invoke-virtual {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createBotServiceIdSmsNumberTable(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 2191
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createIndices(Landroid/database/sqlite/SQLiteDatabase;)V

    return-void
.end method

.method public onUpgrade(Landroid/database/sqlite/SQLiteDatabase;II)V
    .locals 5

    .line 4363
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Upgrading database from version "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " to "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, "."

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v2, "TP/MmsSmsDatabaseHelper"

    invoke-static {v2, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4365
    sput p2, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sUpgradeVersion:I

    const/16 v0, 0x58

    packed-switch p2, :pswitch_data_0

    goto/16 :goto_aa

    :pswitch_0
    const/16 v3, 0x28

    if-gt p3, v3, :cond_0

    return-void

    .line 4373
    :cond_0
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4375
    :try_start_0
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion41(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4376
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_d0

    .line 4381
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    :pswitch_1
    const/16 v3, 0x29

    if-gt p3, v3, :cond_1

    return-void

    .line 4389
    :cond_1
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4391
    :try_start_1
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion42(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4392
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_ce

    .line 4397
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    :pswitch_2
    const/16 v3, 0x2a

    if-gt p3, v3, :cond_2

    return-void

    .line 4405
    :cond_2
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4407
    :try_start_2
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion43(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4408
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_cc

    .line 4413
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    :pswitch_3
    const/16 v3, 0x2b

    if-gt p3, v3, :cond_3

    return-void

    .line 4421
    :cond_3
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4423
    :try_start_3
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion44(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4424
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_ca

    .line 4429
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    :pswitch_4
    const/16 v3, 0x2c

    if-gt p3, v3, :cond_4

    return-void

    .line 4437
    :cond_4
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4439
    :try_start_4
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion45(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4440
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_c8

    .line 4445
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    :pswitch_5
    const/16 v3, 0x2d

    if-gt p3, v3, :cond_5

    return-void

    .line 4452
    :cond_5
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4454
    :try_start_5
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion46(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4455
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_c6

    .line 4460
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    :pswitch_6
    const/16 v3, 0x2e

    if-gt p3, v3, :cond_6

    return-void

    .line 4468
    :cond_6
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4470
    :try_start_6
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion47(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4471
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_c4

    .line 4476
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    :pswitch_7
    const/16 v3, 0x2f

    if-gt p3, v3, :cond_7

    return-void

    .line 4484
    :cond_7
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4486
    :try_start_7
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion48(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4487
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_c2

    .line 4492
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    :pswitch_8
    const/16 v3, 0x30

    if-gt p3, v3, :cond_8

    return-void

    .line 4500
    :cond_8
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4502
    :try_start_8
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion49(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4503
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_c0

    .line 4508
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4511
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4513
    :try_start_9
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createWordsTables(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4514
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_be

    .line 4519
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    :pswitch_9
    const/16 v3, 0x31

    if-gt p3, v3, :cond_9

    return-void

    .line 4526
    :cond_9
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4528
    :try_start_a
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->createThreadIdIndex(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4529
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_bc

    .line 4534
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    :pswitch_a
    const/16 v3, 0x32

    if-gt p3, v3, :cond_a

    return-void

    .line 4542
    :cond_a
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4544
    :try_start_b
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion51(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4545
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_ba

    .line 4550
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    :pswitch_b
    const/16 v3, 0x33

    if-gt p3, v3, :cond_b

    return-void

    :cond_b
    :pswitch_c
    const/16 v3, 0x34

    if-gt p3, v3, :cond_c

    return-void

    .line 4564
    :cond_c
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4566
    :try_start_c
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion53(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4567
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_b8

    .line 4572
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    :pswitch_d
    const/16 v3, 0x35

    if-gt p3, v3, :cond_d

    return-void

    .line 4581
    :cond_d
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4583
    :try_start_d
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion54(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4584
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_b6

    .line 4589
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    :pswitch_e
    const/16 v3, 0x36

    if-gt p3, v3, :cond_e

    return-void

    .line 4597
    :cond_e
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4599
    :try_start_e
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion55(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4600
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_b4

    .line 4605
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    :pswitch_f
    const/16 v3, 0x37

    if-gt p3, v3, :cond_f

    return-void

    .line 4613
    :cond_f
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4615
    :try_start_f
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion56(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4616
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_b2

    .line 4621
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    :pswitch_10
    const/16 v3, 0x38

    if-gt p3, v3, :cond_10

    return-void

    .line 4629
    :cond_10
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4631
    :try_start_10
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion57(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4632
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_b0

    .line 4637
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    :pswitch_11
    const/16 v3, 0x39

    if-gt p3, v3, :cond_11

    return-void

    .line 4644
    :cond_11
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4646
    :try_start_11
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion58(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4647
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_0

    .line 4651
    :goto_0
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_1

    :catchall_0
    move-exception v3

    .line 4649
    :try_start_12
    invoke-virtual {v3}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_af

    goto :goto_0

    :goto_1
    :pswitch_12
    const/16 v3, 0x3a

    if-gt p3, v3, :cond_12

    return-void

    .line 4658
    :cond_12
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4660
    :try_start_13
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion59(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4661
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_1

    .line 4665
    :goto_2
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_3

    :catchall_1
    move-exception v3

    .line 4663
    :try_start_14
    invoke-virtual {v3}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_14
    .catchall {:try_start_14 .. :try_end_14} :catchall_ae

    goto :goto_2

    :goto_3
    :pswitch_13
    const/16 v3, 0x3b

    if-gt p3, v3, :cond_13

    return-void

    .line 4672
    :cond_13
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4674
    :try_start_15
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion60(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4675
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_15
    .catchall {:try_start_15 .. :try_end_15} :catchall_2

    .line 4679
    :goto_4
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_5

    :catchall_2
    move-exception v3

    .line 4677
    :try_start_16
    invoke-virtual {v3}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_16
    .catchall {:try_start_16 .. :try_end_16} :catchall_ad

    goto :goto_4

    :goto_5
    :pswitch_14
    const/16 v3, 0x3c

    if-gt p3, v3, :cond_14

    return-void

    .line 4688
    :cond_14
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4690
    :try_start_17
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion61(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4691
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_17
    .catchall {:try_start_17 .. :try_end_17} :catchall_ab

    .line 4696
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    :pswitch_15
    const/16 v3, 0x3d

    if-gt p3, v3, :cond_15

    return-void

    .line 4705
    :cond_15
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4707
    :try_start_18
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion62(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4708
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_18
    .catchall {:try_start_18 .. :try_end_18} :catchall_a9

    .line 4713
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    :pswitch_16
    const/16 v3, 0x3e

    if-gt p3, v3, :cond_16

    return-void

    .line 4721
    :cond_16
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4723
    :try_start_19
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion63(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4724
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_19
    .catchall {:try_start_19 .. :try_end_19} :catchall_a7

    .line 4729
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    :pswitch_17
    const/16 v1, 0x3f

    if-gt p3, v1, :cond_17

    return-void

    .line 4736
    :cond_17
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4738
    :try_start_1a
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion64(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4739
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_1a
    .catchall {:try_start_1a .. :try_end_1a} :catchall_3

    .line 4743
    :goto_6
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_7

    :catchall_3
    move-exception v1

    .line 4741
    :try_start_1b
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_1b
    .catchall {:try_start_1b .. :try_end_1b} :catchall_a6

    goto :goto_6

    :goto_7
    :pswitch_18
    const/16 v1, 0x40

    if-gt p3, v1, :cond_18

    return-void

    .line 4750
    :cond_18
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4752
    :try_start_1c
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion65(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4753
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_1c
    .catchall {:try_start_1c .. :try_end_1c} :catchall_4

    .line 4757
    :goto_8
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_9

    :catchall_4
    move-exception v1

    .line 4755
    :try_start_1d
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_1d
    .catchall {:try_start_1d .. :try_end_1d} :catchall_a5

    goto :goto_8

    :goto_9
    :pswitch_19
    const/16 v1, 0x41

    if-gt p3, v1, :cond_19

    return-void

    .line 4764
    :cond_19
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4766
    :try_start_1e
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion66(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4767
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_1e
    .catchall {:try_start_1e .. :try_end_1e} :catchall_5

    .line 4771
    :goto_a
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_b

    :catchall_5
    move-exception v1

    .line 4769
    :try_start_1f
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_1f
    .catchall {:try_start_1f .. :try_end_1f} :catchall_a4

    goto :goto_a

    :goto_b
    :pswitch_1a
    const/16 v1, 0x42

    if-gt p3, v1, :cond_1a

    return-void

    .line 4778
    :cond_1a
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4780
    :try_start_20
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion67(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4781
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_20
    .catchall {:try_start_20 .. :try_end_20} :catchall_6

    .line 4785
    :goto_c
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_d

    :catchall_6
    move-exception v1

    .line 4783
    :try_start_21
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_21
    .catchall {:try_start_21 .. :try_end_21} :catchall_a3

    goto :goto_c

    .line 4790
    :goto_d
    :pswitch_1b
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4792
    :try_start_22
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion68(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4793
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_22
    .catchall {:try_start_22 .. :try_end_22} :catchall_7

    .line 4797
    :goto_e
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_f

    :catchall_7
    move-exception v1

    .line 4795
    :try_start_23
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_23
    .catchall {:try_start_23 .. :try_end_23} :catchall_a2

    goto :goto_e

    :goto_f
    :pswitch_1c
    const/16 v1, 0x44

    if-gt p3, v1, :cond_1b

    return-void

    .line 4806
    :cond_1b
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4808
    :try_start_24
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion69(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4809
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_24
    .catchall {:try_start_24 .. :try_end_24} :catchall_8

    .line 4813
    :goto_10
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_11

    :catchall_8
    move-exception v1

    .line 4811
    :try_start_25
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_25
    .catchall {:try_start_25 .. :try_end_25} :catchall_a1

    goto :goto_10

    :goto_11
    :pswitch_1d
    const/16 v1, 0x45

    if-gt p3, v1, :cond_1c

    return-void

    .line 4821
    :cond_1c
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4823
    :try_start_26
    sput v1, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->sUpgradeVersion:I

    .line 4824
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion70(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4825
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_26
    .catchall {:try_start_26 .. :try_end_26} :catchall_9

    .line 4829
    :goto_12
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_13

    :catchall_9
    move-exception v1

    .line 4827
    :try_start_27
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_27
    .catchall {:try_start_27 .. :try_end_27} :catchall_a0

    goto :goto_12

    :goto_13
    :pswitch_1e
    const/16 v1, 0x46

    if-gt p3, v1, :cond_1d

    return-void

    .line 4837
    :cond_1d
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4839
    :try_start_28
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion71(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4840
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_28
    .catchall {:try_start_28 .. :try_end_28} :catchall_a

    .line 4844
    :goto_14
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_15

    :catchall_a
    move-exception v1

    .line 4842
    :try_start_29
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_29
    .catchall {:try_start_29 .. :try_end_29} :catchall_9f

    goto :goto_14

    :goto_15
    :pswitch_1f
    const/16 v1, 0x47

    if-gt p3, v1, :cond_1e

    return-void

    .line 4850
    :cond_1e
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4852
    :try_start_2a
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion72(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4853
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_2a
    .catchall {:try_start_2a .. :try_end_2a} :catchall_b

    .line 4857
    :goto_16
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_17

    :catchall_b
    move-exception v1

    .line 4855
    :try_start_2b
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_2b
    .catchall {:try_start_2b .. :try_end_2b} :catchall_9e

    goto :goto_16

    :goto_17
    :pswitch_20
    const/16 v1, 0x48

    if-gt p3, v1, :cond_1f

    return-void

    .line 4863
    :cond_1f
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4866
    :try_start_2c
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion73(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4868
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_2c
    .catchall {:try_start_2c .. :try_end_2c} :catchall_c

    .line 4872
    :goto_18
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_19

    :catchall_c
    move-exception v1

    .line 4870
    :try_start_2d
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_2d
    .catchall {:try_start_2d .. :try_end_2d} :catchall_9d

    goto :goto_18

    :goto_19
    :pswitch_21
    const/16 v1, 0x49

    if-gt p3, v1, :cond_20

    return-void

    .line 4881
    :cond_20
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4884
    :try_start_2e
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion74(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4886
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_2e
    .catchall {:try_start_2e .. :try_end_2e} :catchall_d

    .line 4890
    :goto_1a
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_1b

    :catchall_d
    move-exception v1

    .line 4888
    :try_start_2f
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_2f
    .catchall {:try_start_2f .. :try_end_2f} :catchall_9c

    goto :goto_1a

    :goto_1b
    :pswitch_22
    const/16 v1, 0x4a

    if-gt p3, v1, :cond_21

    return-void

    .line 4897
    :cond_21
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4899
    :try_start_30
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion75(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4900
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_30
    .catchall {:try_start_30 .. :try_end_30} :catchall_e

    .line 4904
    :goto_1c
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_1d

    :catchall_e
    move-exception v1

    .line 4902
    :try_start_31
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_31
    .catchall {:try_start_31 .. :try_end_31} :catchall_9b

    goto :goto_1c

    :goto_1d
    :pswitch_23
    const/16 v1, 0x4b

    if-gt p3, v1, :cond_22

    return-void

    .line 4911
    :cond_22
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4913
    :try_start_32
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion76(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4914
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_32
    .catchall {:try_start_32 .. :try_end_32} :catchall_f

    .line 4918
    :goto_1e
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_1f

    :catchall_f
    move-exception v1

    .line 4916
    :try_start_33
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_33
    .catchall {:try_start_33 .. :try_end_33} :catchall_9a

    goto :goto_1e

    :goto_1f
    :pswitch_24
    const/16 v1, 0x4c

    if-gt p3, v1, :cond_23

    return-void

    .line 4924
    :cond_23
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4926
    :try_start_34
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion77(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4927
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_34
    .catchall {:try_start_34 .. :try_end_34} :catchall_10

    .line 4931
    :goto_20
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_21

    :catchall_10
    move-exception v1

    .line 4929
    :try_start_35
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_35
    .catchall {:try_start_35 .. :try_end_35} :catchall_99

    goto :goto_20

    :goto_21
    :pswitch_25
    const/16 v1, 0x4d

    if-gt p3, v1, :cond_24

    return-void

    .line 4938
    :cond_24
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4940
    :try_start_36
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion78(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4941
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_36
    .catchall {:try_start_36 .. :try_end_36} :catchall_11

    .line 4945
    :goto_22
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_23

    :catchall_11
    move-exception v1

    .line 4943
    :try_start_37
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_37
    .catchall {:try_start_37 .. :try_end_37} :catchall_98

    goto :goto_22

    :goto_23
    :pswitch_26
    const/16 v1, 0x4e

    if-gt p3, v1, :cond_25

    return-void

    .line 4954
    :cond_25
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4956
    :try_start_38
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion79(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4957
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_38
    .catchall {:try_start_38 .. :try_end_38} :catchall_12

    .line 4961
    :goto_24
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_25

    :catchall_12
    move-exception v1

    .line 4959
    :try_start_39
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_39
    .catchall {:try_start_39 .. :try_end_39} :catchall_97

    goto :goto_24

    :goto_25
    :pswitch_27
    const/16 v1, 0x4f

    if-gt p3, v1, :cond_26

    return-void

    .line 4970
    :cond_26
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4972
    :try_start_3a
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion80(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4973
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_3a
    .catchall {:try_start_3a .. :try_end_3a} :catchall_13

    .line 4977
    :goto_26
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_27

    :catchall_13
    move-exception v1

    .line 4975
    :try_start_3b
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_3b
    .catchall {:try_start_3b .. :try_end_3b} :catchall_96

    goto :goto_26

    :goto_27
    :pswitch_28
    const/16 v1, 0x50

    if-gt p3, v1, :cond_27

    return-void

    .line 4986
    :cond_27
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 4988
    :try_start_3c
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion81(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 4989
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_3c
    .catchall {:try_start_3c .. :try_end_3c} :catchall_14

    .line 4993
    :goto_28
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_29

    :catchall_14
    move-exception v1

    .line 4991
    :try_start_3d
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_3d
    .catchall {:try_start_3d .. :try_end_3d} :catchall_95

    goto :goto_28

    :goto_29
    :pswitch_29
    const/16 v1, 0x51

    if-gt p3, v1, :cond_28

    return-void

    .line 5000
    :cond_28
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5002
    :try_start_3e
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion82(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5003
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_3e
    .catchall {:try_start_3e .. :try_end_3e} :catchall_15

    .line 5007
    :goto_2a
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_2b

    :catchall_15
    move-exception v1

    .line 5005
    :try_start_3f
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_3f
    .catchall {:try_start_3f .. :try_end_3f} :catchall_94

    goto :goto_2a

    :goto_2b
    :pswitch_2a
    const/16 v1, 0x52

    if-gt p3, v1, :cond_29

    return-void

    .line 5014
    :cond_29
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5017
    :try_start_40
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion82(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5018
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion83(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5019
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_40
    .catchall {:try_start_40 .. :try_end_40} :catchall_16

    .line 5023
    :goto_2c
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_2d

    :catchall_16
    move-exception v1

    .line 5021
    :try_start_41
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_41
    .catchall {:try_start_41 .. :try_end_41} :catchall_93

    goto :goto_2c

    :goto_2d
    :pswitch_2b
    const/16 v1, 0x53

    if-gt p3, v1, :cond_2a

    return-void

    .line 5030
    :cond_2a
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5032
    :try_start_42
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion84(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5033
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_42
    .catchall {:try_start_42 .. :try_end_42} :catchall_17

    .line 5037
    :goto_2e
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_2f

    :catchall_17
    move-exception v1

    .line 5035
    :try_start_43
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_43
    .catchall {:try_start_43 .. :try_end_43} :catchall_92

    goto :goto_2e

    :goto_2f
    :pswitch_2c
    const/16 v1, 0x54

    if-gt p3, v1, :cond_2b

    return-void

    .line 5044
    :cond_2b
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5046
    :try_start_44
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion85(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5047
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_44
    .catchall {:try_start_44 .. :try_end_44} :catchall_18

    .line 5051
    :goto_30
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_31

    :catchall_18
    move-exception v1

    .line 5049
    :try_start_45
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_45
    .catchall {:try_start_45 .. :try_end_45} :catchall_91

    goto :goto_30

    :goto_31
    :pswitch_2d
    const/16 v1, 0x55

    if-gt p3, v1, :cond_2c

    return-void

    .line 5058
    :cond_2c
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5060
    :try_start_46
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion86(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5061
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_46
    .catchall {:try_start_46 .. :try_end_46} :catchall_19

    .line 5065
    :goto_32
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_33

    :catchall_19
    move-exception v1

    .line 5063
    :try_start_47
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_47
    .catchall {:try_start_47 .. :try_end_47} :catchall_90

    goto :goto_32

    :goto_33
    :pswitch_2e
    const/16 v1, 0x56

    if-gt p3, v1, :cond_2d

    return-void

    .line 5073
    :cond_2d
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5075
    :try_start_48
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion87(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5076
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_48
    .catchall {:try_start_48 .. :try_end_48} :catchall_1a

    .line 5080
    :goto_34
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_35

    :catchall_1a
    move-exception v1

    .line 5078
    :try_start_49
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_49
    .catchall {:try_start_49 .. :try_end_49} :catchall_8f

    goto :goto_34

    :goto_35
    :pswitch_2f
    const/16 v1, 0x57

    if-gt p3, v1, :cond_2e

    return-void

    .line 5087
    :cond_2e
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5089
    :try_start_4a
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion88(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5090
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_4a
    .catchall {:try_start_4a .. :try_end_4a} :catchall_1b

    .line 5094
    :goto_36
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_37

    :catchall_1b
    move-exception v1

    .line 5092
    :try_start_4b
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_4b
    .catchall {:try_start_4b .. :try_end_4b} :catchall_8e

    goto :goto_36

    :goto_37
    :pswitch_30
    if-gt p3, v0, :cond_2f

    return-void

    .line 5101
    :cond_2f
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5103
    :try_start_4c
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion89(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5104
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_4c
    .catchall {:try_start_4c .. :try_end_4c} :catchall_1c

    .line 5108
    :goto_38
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_39

    :catchall_1c
    move-exception v1

    .line 5106
    :try_start_4d
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_4d
    .catchall {:try_start_4d .. :try_end_4d} :catchall_8d

    goto :goto_38

    :goto_39
    :pswitch_31
    const/16 v1, 0x59

    if-gt p3, v1, :cond_30

    return-void

    .line 5115
    :cond_30
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5117
    :try_start_4e
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion90(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5118
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_4e
    .catchall {:try_start_4e .. :try_end_4e} :catchall_1d

    .line 5122
    :goto_3a
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_3b

    :catchall_1d
    move-exception v1

    .line 5120
    :try_start_4f
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_4f
    .catchall {:try_start_4f .. :try_end_4f} :catchall_8c

    goto :goto_3a

    :goto_3b
    :pswitch_32
    const/16 v1, 0x5a

    if-gt p3, v1, :cond_31

    return-void

    .line 5129
    :cond_31
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5131
    :try_start_50
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion91(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5132
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_50
    .catchall {:try_start_50 .. :try_end_50} :catchall_1e

    .line 5136
    :goto_3c
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_3d

    :catchall_1e
    move-exception v1

    .line 5134
    :try_start_51
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_51
    .catchall {:try_start_51 .. :try_end_51} :catchall_8b

    goto :goto_3c

    :goto_3d
    :pswitch_33
    const/16 v1, 0x5b

    if-gt p3, v1, :cond_32

    return-void

    .line 5143
    :cond_32
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5145
    :try_start_52
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion92(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5146
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_52
    .catchall {:try_start_52 .. :try_end_52} :catchall_1f

    .line 5150
    :goto_3e
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_3f

    :catchall_1f
    move-exception v1

    .line 5148
    :try_start_53
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_53
    .catchall {:try_start_53 .. :try_end_53} :catchall_8a

    goto :goto_3e

    :goto_3f
    :pswitch_34
    const/16 v1, 0x5c

    if-gt p3, v1, :cond_33

    return-void

    .line 5157
    :cond_33
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5159
    :try_start_54
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion93(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5160
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_54
    .catchall {:try_start_54 .. :try_end_54} :catchall_20

    .line 5164
    :goto_40
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_41

    :catchall_20
    move-exception v1

    .line 5162
    :try_start_55
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_55
    .catchall {:try_start_55 .. :try_end_55} :catchall_89

    goto :goto_40

    :goto_41
    :pswitch_35
    const/16 v1, 0x5d

    if-gt p3, v1, :cond_34

    return-void

    .line 5171
    :cond_34
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5173
    :try_start_56
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion94(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5174
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_56
    .catchall {:try_start_56 .. :try_end_56} :catchall_21

    .line 5178
    :goto_42
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_43

    :catchall_21
    move-exception v1

    .line 5176
    :try_start_57
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_57
    .catchall {:try_start_57 .. :try_end_57} :catchall_88

    goto :goto_42

    :goto_43
    :pswitch_36
    const/16 v1, 0x5e

    if-gt p3, v1, :cond_35

    return-void

    .line 5185
    :cond_35
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5187
    :try_start_58
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion95(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5188
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_58
    .catchall {:try_start_58 .. :try_end_58} :catchall_22

    .line 5192
    :goto_44
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_45

    :catchall_22
    move-exception v1

    .line 5190
    :try_start_59
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_59
    .catchall {:try_start_59 .. :try_end_59} :catchall_87

    goto :goto_44

    :goto_45
    :pswitch_37
    const/16 v1, 0x5f

    if-gt p3, v1, :cond_36

    return-void

    .line 5198
    :cond_36
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5200
    :try_start_5a
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion96(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5201
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_5a
    .catchall {:try_start_5a .. :try_end_5a} :catchall_23

    .line 5205
    :goto_46
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_47

    :catchall_23
    move-exception v1

    .line 5203
    :try_start_5b
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_5b
    .catchall {:try_start_5b .. :try_end_5b} :catchall_86

    goto :goto_46

    :goto_47
    :pswitch_38
    const/16 v1, 0x60

    if-gt p3, v1, :cond_37

    return-void

    .line 5211
    :cond_37
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5213
    :try_start_5c
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion97(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5214
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_5c
    .catchall {:try_start_5c .. :try_end_5c} :catchall_24

    .line 5218
    :goto_48
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_49

    :catchall_24
    move-exception v1

    .line 5216
    :try_start_5d
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_5d
    .catchall {:try_start_5d .. :try_end_5d} :catchall_85

    goto :goto_48

    :goto_49
    :pswitch_39
    const/16 v1, 0x61

    if-gt p3, v1, :cond_38

    return-void

    .line 5224
    :cond_38
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5226
    :try_start_5e
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion98(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5227
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_5e
    .catchall {:try_start_5e .. :try_end_5e} :catchall_25

    .line 5231
    :goto_4a
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_4b

    :catchall_25
    move-exception v1

    .line 5229
    :try_start_5f
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_5f
    .catchall {:try_start_5f .. :try_end_5f} :catchall_84

    goto :goto_4a

    :goto_4b
    :pswitch_3a
    const/16 v1, 0x62

    if-gt p3, v1, :cond_39

    return-void

    .line 5237
    :cond_39
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5239
    :try_start_60
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion99(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5240
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_60
    .catchall {:try_start_60 .. :try_end_60} :catchall_26

    .line 5244
    :goto_4c
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_4d

    :catchall_26
    move-exception v1

    .line 5242
    :try_start_61
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_61
    .catchall {:try_start_61 .. :try_end_61} :catchall_83

    goto :goto_4c

    :goto_4d
    :pswitch_3b
    const/16 v1, 0x63

    if-gt p3, v1, :cond_3a

    return-void

    .line 5250
    :cond_3a
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5252
    :try_start_62
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion100(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5253
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_62
    .catchall {:try_start_62 .. :try_end_62} :catchall_27

    .line 5257
    :goto_4e
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_4f

    :catchall_27
    move-exception v1

    .line 5255
    :try_start_63
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_63
    .catchall {:try_start_63 .. :try_end_63} :catchall_82

    goto :goto_4e

    :goto_4f
    :pswitch_3c
    const/16 v1, 0x64

    if-gt p3, v1, :cond_3b

    return-void

    :cond_3b
    if-lt p2, v0, :cond_3c

    .line 5264
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5266
    :try_start_64
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion101(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5267
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_64
    .catchall {:try_start_64 .. :try_end_64} :catchall_28

    .line 5271
    :goto_50
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_51

    :catchall_28
    move-exception v1

    .line 5269
    :try_start_65
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_65
    .catchall {:try_start_65 .. :try_end_65} :catchall_29

    goto :goto_50

    :catchall_29
    move-exception p0

    .line 5271
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5272
    throw p0

    :cond_3c
    :goto_51
    :pswitch_3d
    const/16 v1, 0x65

    if-gt p3, v1, :cond_3d

    return-void

    .line 5278
    :cond_3d
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5280
    :try_start_66
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion102(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5281
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_66
    .catchall {:try_start_66 .. :try_end_66} :catchall_2a

    .line 5285
    :goto_52
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_53

    :catchall_2a
    move-exception v1

    .line 5283
    :try_start_67
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_67
    .catchall {:try_start_67 .. :try_end_67} :catchall_81

    goto :goto_52

    :goto_53
    :pswitch_3e
    const/16 v1, 0x66

    if-gt p3, v1, :cond_3e

    return-void

    .line 5291
    :cond_3e
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5293
    :try_start_68
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion103(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5294
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_68
    .catchall {:try_start_68 .. :try_end_68} :catchall_2b

    .line 5298
    :goto_54
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_55

    :catchall_2b
    move-exception v1

    .line 5296
    :try_start_69
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_69
    .catchall {:try_start_69 .. :try_end_69} :catchall_80

    goto :goto_54

    :goto_55
    :pswitch_3f
    const/16 v1, 0x67

    if-gt p3, v1, :cond_3f

    return-void

    .line 5305
    :cond_3f
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5307
    :try_start_6a
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion104(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5308
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_6a
    .catchall {:try_start_6a .. :try_end_6a} :catchall_2c

    .line 5312
    :goto_56
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_57

    :catchall_2c
    move-exception v1

    .line 5310
    :try_start_6b
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_6b
    .catchall {:try_start_6b .. :try_end_6b} :catchall_7f

    goto :goto_56

    :goto_57
    :pswitch_40
    const/16 v1, 0x68

    if-gt p3, v1, :cond_40

    return-void

    .line 5319
    :cond_40
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5321
    :try_start_6c
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion105(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5322
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_6c
    .catchall {:try_start_6c .. :try_end_6c} :catchall_2d

    .line 5326
    :goto_58
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_59

    :catchall_2d
    move-exception v1

    .line 5324
    :try_start_6d
    invoke-virtual {v1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_6d
    .catchall {:try_start_6d .. :try_end_6d} :catchall_7e

    goto :goto_58

    :goto_59
    :pswitch_41
    const/16 v1, 0x69

    if-gt p3, v1, :cond_41

    return-void

    :cond_41
    if-lt p2, v0, :cond_42

    .line 5334
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5336
    :try_start_6e
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion106(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5337
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_6e
    .catchall {:try_start_6e .. :try_end_6e} :catchall_2e

    .line 5341
    :goto_5a
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_5b

    :catchall_2e
    move-exception p2

    .line 5339
    :try_start_6f
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_6f
    .catchall {:try_start_6f .. :try_end_6f} :catchall_2f

    goto :goto_5a

    :catchall_2f
    move-exception p0

    .line 5341
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5342
    throw p0

    :cond_42
    :goto_5b
    :pswitch_42
    const/16 p2, 0x6a

    if-gt p3, p2, :cond_43

    return-void

    .line 5348
    :cond_43
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5350
    :try_start_70
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion107(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5351
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_70
    .catchall {:try_start_70 .. :try_end_70} :catchall_30

    .line 5355
    :goto_5c
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_5d

    :catchall_30
    move-exception p2

    .line 5353
    :try_start_71
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_71
    .catchall {:try_start_71 .. :try_end_71} :catchall_7d

    goto :goto_5c

    :goto_5d
    :pswitch_43
    const/16 p2, 0x6b

    if-gt p3, p2, :cond_44

    return-void

    .line 5361
    :cond_44
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5363
    :try_start_72
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion108(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5364
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_72
    .catchall {:try_start_72 .. :try_end_72} :catchall_31

    .line 5368
    :goto_5e
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_5f

    :catchall_31
    move-exception p2

    .line 5366
    :try_start_73
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_73
    .catchall {:try_start_73 .. :try_end_73} :catchall_7c

    goto :goto_5e

    :goto_5f
    :pswitch_44
    const/16 p2, 0x6c

    if-gt p3, p2, :cond_45

    return-void

    .line 5374
    :cond_45
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5379
    :try_start_74
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion109(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5380
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_74
    .catchall {:try_start_74 .. :try_end_74} :catchall_32

    .line 5384
    :goto_60
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_61

    :catchall_32
    move-exception p2

    .line 5382
    :try_start_75
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_75
    .catchall {:try_start_75 .. :try_end_75} :catchall_7b

    goto :goto_60

    :goto_61
    :pswitch_45
    const/16 p2, 0x6d

    if-gt p3, p2, :cond_46

    return-void

    .line 5391
    :cond_46
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5393
    :try_start_76
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion110(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5394
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_76
    .catchall {:try_start_76 .. :try_end_76} :catchall_33

    .line 5398
    :goto_62
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_63

    :catchall_33
    move-exception p2

    .line 5396
    :try_start_77
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_77
    .catchall {:try_start_77 .. :try_end_77} :catchall_7a

    goto :goto_62

    :goto_63
    :pswitch_46
    const/16 p2, 0x6e

    if-gt p3, p2, :cond_47

    return-void

    .line 5405
    :cond_47
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5407
    :try_start_78
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion111(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5408
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_78
    .catchall {:try_start_78 .. :try_end_78} :catchall_34

    .line 5412
    :goto_64
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_65

    :catchall_34
    move-exception p2

    .line 5410
    :try_start_79
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_79
    .catchall {:try_start_79 .. :try_end_79} :catchall_79

    goto :goto_64

    :goto_65
    :pswitch_47
    const/16 p2, 0x6f

    if-gt p3, p2, :cond_48

    return-void

    .line 5419
    :cond_48
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5421
    :try_start_7a
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion112(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5422
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_7a
    .catchall {:try_start_7a .. :try_end_7a} :catchall_35

    .line 5426
    :goto_66
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_67

    :catchall_35
    move-exception p2

    .line 5424
    :try_start_7b
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_7b
    .catchall {:try_start_7b .. :try_end_7b} :catchall_78

    goto :goto_66

    :goto_67
    :pswitch_48
    const/16 p2, 0x70

    if-gt p3, p2, :cond_49

    return-void

    .line 5433
    :cond_49
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5436
    :try_start_7c
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion113(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5437
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_7c
    .catchall {:try_start_7c .. :try_end_7c} :catchall_36

    .line 5441
    :goto_68
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_69

    :catchall_36
    move-exception p2

    .line 5439
    :try_start_7d
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_7d
    .catchall {:try_start_7d .. :try_end_7d} :catchall_77

    goto :goto_68

    :goto_69
    :pswitch_49
    const/16 p2, 0x71

    if-gt p3, p2, :cond_4a

    return-void

    .line 5447
    :cond_4a
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5451
    :try_start_7e
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion114(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5452
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_7e
    .catchall {:try_start_7e .. :try_end_7e} :catchall_37

    .line 5456
    :goto_6a
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_6b

    :catchall_37
    move-exception p2

    .line 5454
    :try_start_7f
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_7f
    .catchall {:try_start_7f .. :try_end_7f} :catchall_76

    goto :goto_6a

    :goto_6b
    :pswitch_4a
    const/16 p2, 0x72

    if-gt p3, p2, :cond_4b

    return-void

    .line 5464
    :cond_4b
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5466
    :try_start_80
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion115(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5467
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_80
    .catchall {:try_start_80 .. :try_end_80} :catchall_38

    .line 5471
    :goto_6c
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_6d

    :catchall_38
    move-exception p2

    .line 5469
    :try_start_81
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_81
    .catchall {:try_start_81 .. :try_end_81} :catchall_75

    goto :goto_6c

    :goto_6d
    :pswitch_4b
    const/16 p2, 0x73

    if-gt p3, p2, :cond_4c

    return-void

    .line 5478
    :cond_4c
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5480
    :try_start_82
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion116(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5481
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_82
    .catchall {:try_start_82 .. :try_end_82} :catchall_39

    .line 5485
    :goto_6e
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_6f

    :catchall_39
    move-exception p2

    .line 5483
    :try_start_83
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_83
    .catchall {:try_start_83 .. :try_end_83} :catchall_74

    goto :goto_6e

    :goto_6f
    :pswitch_4c
    const/16 p2, 0x74

    if-gt p3, p2, :cond_4d

    return-void

    .line 5492
    :cond_4d
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5494
    :try_start_84
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion117(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5495
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_84
    .catchall {:try_start_84 .. :try_end_84} :catchall_3a

    .line 5499
    :goto_70
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_71

    :catchall_3a
    move-exception p2

    .line 5497
    :try_start_85
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_85
    .catchall {:try_start_85 .. :try_end_85} :catchall_73

    goto :goto_70

    :goto_71
    :pswitch_4d
    const/16 p2, 0x75

    if-gt p3, p2, :cond_4e

    return-void

    .line 5506
    :cond_4e
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5508
    :try_start_86
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion118(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5509
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_86
    .catchall {:try_start_86 .. :try_end_86} :catchall_3b

    .line 5513
    :goto_72
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_73

    :catchall_3b
    move-exception p2

    .line 5511
    :try_start_87
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_87
    .catchall {:try_start_87 .. :try_end_87} :catchall_72

    goto :goto_72

    :goto_73
    :pswitch_4e
    const/16 p2, 0x76

    if-gt p3, p2, :cond_4f

    return-void

    .line 5519
    :cond_4f
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5521
    :try_start_88
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion119(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5522
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_88
    .catchall {:try_start_88 .. :try_end_88} :catchall_3c

    .line 5526
    :goto_74
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_75

    :catchall_3c
    move-exception p2

    .line 5524
    :try_start_89
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_89
    .catchall {:try_start_89 .. :try_end_89} :catchall_71

    goto :goto_74

    :goto_75
    :pswitch_4f
    const/16 p2, 0x77

    if-gt p3, p2, :cond_50

    return-void

    .line 5532
    :cond_50
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5534
    :try_start_8a
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion120(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5535
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_8a
    .catchall {:try_start_8a .. :try_end_8a} :catchall_3d

    .line 5539
    :goto_76
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_77

    :catchall_3d
    move-exception p2

    .line 5537
    :try_start_8b
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_8b
    .catchall {:try_start_8b .. :try_end_8b} :catchall_70

    goto :goto_76

    :goto_77
    :pswitch_50
    const/16 p2, 0x78

    if-gt p3, p2, :cond_51

    return-void

    .line 5547
    :cond_51
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5549
    :try_start_8c
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion121(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5550
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_8c
    .catchall {:try_start_8c .. :try_end_8c} :catchall_3e

    .line 5554
    :goto_78
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_79

    :catchall_3e
    move-exception p2

    .line 5552
    :try_start_8d
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_8d
    .catchall {:try_start_8d .. :try_end_8d} :catchall_6f

    goto :goto_78

    :goto_79
    :pswitch_51
    const/16 p2, 0x79

    if-gt p3, p2, :cond_52

    return-void

    .line 5562
    :cond_52
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5564
    :try_start_8e
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion122(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5565
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_8e
    .catchall {:try_start_8e .. :try_end_8e} :catchall_3f

    .line 5569
    :goto_7a
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_7b

    :catchall_3f
    move-exception p2

    .line 5567
    :try_start_8f
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_8f
    .catchall {:try_start_8f .. :try_end_8f} :catchall_6e

    goto :goto_7a

    :goto_7b
    :pswitch_52
    const/16 p2, 0x7a

    if-gt p3, p2, :cond_53

    return-void

    .line 5576
    :cond_53
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5578
    :try_start_90
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion123(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5579
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_90
    .catchall {:try_start_90 .. :try_end_90} :catchall_40

    .line 5583
    :goto_7c
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_7d

    :catchall_40
    move-exception p2

    .line 5581
    :try_start_91
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_91
    .catchall {:try_start_91 .. :try_end_91} :catchall_6d

    goto :goto_7c

    :goto_7d
    :pswitch_53
    const/16 p2, 0x7b

    if-gt p3, p2, :cond_54

    return-void

    .line 5592
    :cond_54
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5594
    :try_start_92
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion124(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5595
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_92
    .catchall {:try_start_92 .. :try_end_92} :catchall_41

    .line 5599
    :goto_7e
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_7f

    :catchall_41
    move-exception p2

    .line 5597
    :try_start_93
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_93
    .catchall {:try_start_93 .. :try_end_93} :catchall_6c

    goto :goto_7e

    :goto_7f
    :pswitch_54
    const/16 p2, 0x7c

    if-gt p3, p2, :cond_55

    return-void

    .line 5606
    :cond_55
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5608
    :try_start_94
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion125(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5609
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_94
    .catchall {:try_start_94 .. :try_end_94} :catchall_42

    .line 5613
    :goto_80
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_81

    :catchall_42
    move-exception p2

    .line 5611
    :try_start_95
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_95
    .catchall {:try_start_95 .. :try_end_95} :catchall_6b

    goto :goto_80

    :goto_81
    :pswitch_55
    const/16 p2, 0x7d

    if-gt p3, p2, :cond_56

    return-void

    .line 5619
    :cond_56
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5621
    :try_start_96
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion126(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5622
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_96
    .catchall {:try_start_96 .. :try_end_96} :catchall_43

    .line 5626
    :goto_82
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_83

    :catchall_43
    move-exception p2

    .line 5624
    :try_start_97
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_97
    .catchall {:try_start_97 .. :try_end_97} :catchall_6a

    goto :goto_82

    :goto_83
    :pswitch_56
    const/16 p2, 0x7f

    if-gt p3, p2, :cond_57

    return-void

    .line 5634
    :cond_57
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5636
    :try_start_98
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion128(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5637
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_98
    .catchall {:try_start_98 .. :try_end_98} :catchall_44

    .line 5641
    :goto_84
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_85

    :catchall_44
    move-exception p2

    .line 5639
    :try_start_99
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_99
    .catchall {:try_start_99 .. :try_end_99} :catchall_69

    goto :goto_84

    :goto_85
    :pswitch_57
    const/16 p2, 0x80

    if-gt p3, p2, :cond_58

    return-void

    .line 5647
    :cond_58
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5649
    :try_start_9a
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion129(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5650
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_9a
    .catchall {:try_start_9a .. :try_end_9a} :catchall_45

    .line 5654
    :goto_86
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_87

    :catchall_45
    move-exception p2

    .line 5652
    :try_start_9b
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_9b
    .catchall {:try_start_9b .. :try_end_9b} :catchall_68

    goto :goto_86

    :goto_87
    :pswitch_58
    const/16 p2, 0x95

    if-gt p3, p2, :cond_59

    return-void

    .line 5665
    :cond_59
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5667
    :try_start_9c
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion150(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5668
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_9c
    .catchall {:try_start_9c .. :try_end_9c} :catchall_46

    .line 5672
    :goto_88
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_89

    :catchall_46
    move-exception p2

    .line 5670
    :try_start_9d
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_9d
    .catchall {:try_start_9d .. :try_end_9d} :catchall_67

    goto :goto_88

    :goto_89
    :pswitch_59
    const/16 p2, 0x96

    if-gt p3, p2, :cond_5a

    return-void

    .line 5679
    :cond_5a
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion151(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_5a
    const/16 p2, 0x97

    if-gt p3, p2, :cond_5b

    return-void

    .line 5686
    :cond_5b
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5688
    :try_start_9e
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion152(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5689
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_9e
    .catchall {:try_start_9e .. :try_end_9e} :catchall_47

    .line 5693
    :goto_8a
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_8b

    :catchall_47
    move-exception p2

    .line 5691
    :try_start_9f
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_9f
    .catchall {:try_start_9f .. :try_end_9f} :catchall_66

    goto :goto_8a

    :goto_8b
    :pswitch_5b
    const/16 p2, 0x98

    if-gt p3, p2, :cond_5c

    return-void

    .line 5700
    :cond_5c
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5702
    :try_start_a0
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion153(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5703
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_a0
    .catchall {:try_start_a0 .. :try_end_a0} :catchall_48

    .line 5707
    :goto_8c
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_8d

    :catchall_48
    move-exception p2

    .line 5705
    :try_start_a1
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_a1
    .catchall {:try_start_a1 .. :try_end_a1} :catchall_65

    goto :goto_8c

    :goto_8d
    :pswitch_5c
    const/16 p2, 0x99

    if-gt p3, p2, :cond_5d

    return-void

    .line 5714
    :cond_5d
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5716
    :try_start_a2
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion154(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5717
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_a2
    .catchall {:try_start_a2 .. :try_end_a2} :catchall_49

    .line 5721
    :goto_8e
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_8f

    :catchall_49
    move-exception p2

    .line 5719
    :try_start_a3
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_a3
    .catchall {:try_start_a3 .. :try_end_a3} :catchall_64

    goto :goto_8e

    :goto_8f
    :pswitch_5d
    const/16 p2, 0x9a

    if-gt p3, p2, :cond_5e

    return-void

    .line 5728
    :cond_5e
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5730
    :try_start_a4
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion155(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5731
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_a4
    .catchall {:try_start_a4 .. :try_end_a4} :catchall_4a

    .line 5735
    :goto_90
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_91

    :catchall_4a
    move-exception p2

    .line 5733
    :try_start_a5
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_a5
    .catchall {:try_start_a5 .. :try_end_a5} :catchall_63

    goto :goto_90

    :goto_91
    :pswitch_5e
    const/16 p2, 0x9b

    if-gt p3, p2, :cond_5f

    return-void

    .line 5742
    :cond_5f
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5744
    :try_start_a6
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion156(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5745
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_a6
    .catchall {:try_start_a6 .. :try_end_a6} :catchall_4b

    .line 5749
    :goto_92
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_93

    :catchall_4b
    move-exception p2

    .line 5747
    :try_start_a7
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_a7
    .catchall {:try_start_a7 .. :try_end_a7} :catchall_62

    goto :goto_92

    :goto_93
    :pswitch_5f
    const/16 p2, 0x9c

    if-gt p3, p2, :cond_60

    return-void

    .line 5756
    :cond_60
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5758
    :try_start_a8
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion157(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5759
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_a8
    .catchall {:try_start_a8 .. :try_end_a8} :catchall_4c

    .line 5763
    :goto_94
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_95

    :catchall_4c
    move-exception p2

    .line 5761
    :try_start_a9
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_a9
    .catchall {:try_start_a9 .. :try_end_a9} :catchall_61

    goto :goto_94

    :goto_95
    :pswitch_60
    const/16 p2, 0x9d

    if-gt p3, p2, :cond_61

    return-void

    .line 5770
    :cond_61
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5772
    :try_start_aa
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion158(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5773
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_aa
    .catchall {:try_start_aa .. :try_end_aa} :catchall_4d

    .line 5777
    :goto_96
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_97

    :catchall_4d
    move-exception p2

    .line 5775
    :try_start_ab
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_ab
    .catchall {:try_start_ab .. :try_end_ab} :catchall_60

    goto :goto_96

    :goto_97
    :pswitch_61
    const/16 p2, 0x9e

    if-gt p3, p2, :cond_62

    return-void

    :cond_62
    const-string p2, "upgradeDatabaseToVersion159, for new URI"

    .line 5784
    invoke-static {v2, p2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    :pswitch_62
    const/16 p2, 0x9f

    if-gt p3, p2, :cond_63

    return-void

    .line 5790
    :cond_63
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5792
    :try_start_ac
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion160(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5793
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_ac
    .catchall {:try_start_ac .. :try_end_ac} :catchall_4e

    .line 5797
    :goto_98
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_99

    :catchall_4e
    move-exception p2

    .line 5795
    :try_start_ad
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_ad
    .catchall {:try_start_ad .. :try_end_ad} :catchall_5f

    goto :goto_98

    :goto_99
    :pswitch_63
    const/16 p2, 0xa0

    if-gt p3, p2, :cond_64

    return-void

    .line 5804
    :cond_64
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5806
    :try_start_ae
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion161(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5807
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_ae
    .catchall {:try_start_ae .. :try_end_ae} :catchall_4f

    .line 5811
    :goto_9a
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_9b

    :catchall_4f
    move-exception p2

    .line 5809
    :try_start_af
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_af
    .catchall {:try_start_af .. :try_end_af} :catchall_5e

    goto :goto_9a

    :goto_9b
    :pswitch_64
    const/16 p2, 0xa1

    if-gt p3, p2, :cond_65

    return-void

    .line 5818
    :cond_65
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5820
    :try_start_b0
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion162(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5821
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_b0
    .catchall {:try_start_b0 .. :try_end_b0} :catchall_50

    .line 5825
    :goto_9c
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_9d

    :catchall_50
    move-exception p2

    .line 5823
    :try_start_b1
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_b1
    .catchall {:try_start_b1 .. :try_end_b1} :catchall_5d

    goto :goto_9c

    :goto_9d
    :pswitch_65
    const/16 p2, 0xc7

    if-gt p3, p2, :cond_66

    return-void

    :cond_66
    const-string p2, "upgradeDatabaseToVersion200, for Oreo"

    .line 5838
    invoke-static {v2, p2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    :pswitch_66
    const/16 p2, 0xc8

    if-gt p3, p2, :cond_67

    return-void

    .line 5844
    :cond_67
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5846
    :try_start_b2
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion201(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5847
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_b2
    .catchall {:try_start_b2 .. :try_end_b2} :catchall_51

    .line 5851
    :goto_9e
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_9f

    :catchall_51
    move-exception p2

    .line 5849
    :try_start_b3
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_b3
    .catchall {:try_start_b3 .. :try_end_b3} :catchall_5c

    goto :goto_9e

    :goto_9f
    :pswitch_67
    const/16 p2, 0xc9

    if-gt p3, p2, :cond_68

    return-void

    .line 5858
    :cond_68
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5860
    :try_start_b4
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion202(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5861
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_b4
    .catchall {:try_start_b4 .. :try_end_b4} :catchall_52

    .line 5865
    :goto_a0
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_a1

    :catchall_52
    move-exception p2

    .line 5863
    :try_start_b5
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_b5
    .catchall {:try_start_b5 .. :try_end_b5} :catchall_5b

    goto :goto_a0

    :goto_a1
    :pswitch_68
    const/16 p2, 0xca

    if-gt p3, p2, :cond_69

    return-void

    .line 5871
    :cond_69
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5873
    :try_start_b6
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion203(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5874
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_b6
    .catchall {:try_start_b6 .. :try_end_b6} :catchall_53

    .line 5878
    :goto_a2
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_a3

    :catchall_53
    move-exception p2

    .line 5876
    :try_start_b7
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_b7
    .catchall {:try_start_b7 .. :try_end_b7} :catchall_5a

    goto :goto_a2

    :goto_a3
    :pswitch_69
    const/16 p2, 0xcb

    if-gt p3, p2, :cond_6a

    return-void

    .line 5884
    :cond_6a
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5886
    :try_start_b8
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion204(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5887
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_b8
    .catchall {:try_start_b8 .. :try_end_b8} :catchall_54

    .line 5891
    :goto_a4
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_a5

    :catchall_54
    move-exception p2

    .line 5889
    :try_start_b9
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_b9
    .catchall {:try_start_b9 .. :try_end_b9} :catchall_59

    goto :goto_a4

    :goto_a5
    :pswitch_6a
    const/16 p2, 0xcc

    if-gt p3, p2, :cond_6b

    return-void

    .line 5897
    :cond_6b
    invoke-direct {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion205()V

    :pswitch_6b
    const/16 p2, 0xcd

    if-gt p3, p2, :cond_6c

    return-void

    .line 5902
    :cond_6c
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion206(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_6c
    const/16 p2, 0xf9

    if-gt p3, p2, :cond_6d

    return-void

    :cond_6d
    const-string p2, "upgradeDatabaseToVersion250, for Oreo MR1"

    .line 5913
    invoke-static {v2, p2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    :pswitch_6d
    const/16 p2, 0xfa

    if-gt p3, p2, :cond_6e

    return-void

    .line 5918
    :cond_6e
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5920
    :try_start_ba
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion251(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5921
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_ba
    .catchall {:try_start_ba .. :try_end_ba} :catchall_55

    .line 5925
    :goto_a6
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_a7

    :catchall_55
    move-exception p2

    .line 5923
    :try_start_bb
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_bb
    .catchall {:try_start_bb .. :try_end_bb} :catchall_58

    goto :goto_a6

    :goto_a7
    const-string p2, "upgradeDatabaseToVersion251, Add Rcs Column"

    .line 5927
    invoke-static {v2, p2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    :pswitch_6e
    const/16 p2, 0xfb

    if-gt p3, p2, :cond_6f

    return-void

    .line 5932
    :cond_6f
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion252(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_6f
    const/16 p2, 0x12b

    if-gt p3, p2, :cond_70

    return-void

    .line 5942
    :cond_70
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V

    .line 5944
    :try_start_bc
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion300(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 5945
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
    :try_end_bc
    .catchall {:try_start_bc .. :try_end_bc} :catchall_56

    .line 5949
    :goto_a8
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_a9

    :catchall_56
    move-exception p2

    .line 5947
    :try_start_bd
    invoke-virtual {p2}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_bd
    .catchall {:try_start_bd .. :try_end_bd} :catchall_57

    goto :goto_a8

    :goto_a9
    const-string p2, "upgradeDatabaseToVersion300, for P OS"

    .line 5951
    invoke-static {v2, p2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    :pswitch_70
    const/16 p2, 0x12c

    if-gt p3, p2, :cond_71

    return-void

    .line 5956
    :cond_71
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion301(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_71
    const/16 p2, 0x12d

    if-gt p3, p2, :cond_72

    return-void

    .line 5961
    :cond_72
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion302(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_72
    const/16 p2, 0x12e

    if-gt p3, p2, :cond_73

    return-void

    .line 5966
    :cond_73
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion303(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_73
    const/16 p2, 0x12f

    if-gt p3, p2, :cond_74

    return-void

    .line 5971
    :cond_74
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion304(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_74
    const/16 p2, 0x130

    if-gt p3, p2, :cond_75

    return-void

    .line 5976
    :cond_75
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion305(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_75
    const/16 p2, 0x131

    if-gt p3, p2, :cond_76

    return-void

    .line 5981
    :cond_76
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion306(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_76
    const/16 p2, 0x132

    if-gt p3, p2, :cond_77

    return-void

    .line 5986
    :cond_77
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion307(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_77
    const/16 p2, 0x133

    if-gt p3, p2, :cond_78

    return-void

    .line 5991
    :cond_78
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion308(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_78
    const/16 p2, 0x15d

    if-gt p3, p2, :cond_79

    return-void

    .line 6002
    :cond_79
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion350(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string p2, "upgradeDatabaseToVersion350, for Q OS"

    .line 6003
    invoke-static {v2, p2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    :pswitch_79
    const/16 p2, 0x15e

    if-gt p3, p2, :cond_7a

    return-void

    .line 6009
    :cond_7a
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion351(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_7a
    const/16 p2, 0x15f

    if-gt p3, p2, :cond_7b

    return-void

    .line 6014
    :cond_7b
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion352(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_7b
    const/16 p2, 0x160

    if-gt p3, p2, :cond_7c

    return-void

    .line 6019
    :cond_7c
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion353(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_7c
    const/16 p2, 0x161

    if-gt p3, p2, :cond_7d

    return-void

    .line 6024
    :cond_7d
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion354(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_7d
    const/16 p2, 0x162

    if-gt p3, p2, :cond_7e

    return-void

    .line 6029
    :cond_7e
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion355(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_7e
    const/16 p2, 0x163

    if-gt p3, p2, :cond_7f

    return-void

    .line 6036
    :cond_7f
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion356(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_7f
    const/16 p2, 0x164

    if-gt p3, p2, :cond_80

    return-void

    .line 6041
    :cond_80
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion357(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_80
    const/16 p2, 0x165

    if-gt p3, p2, :cond_81

    return-void

    .line 6046
    :cond_81
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion358(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_81
    const/16 p2, 0x18f

    if-gt p3, p2, :cond_82

    return-void

    .line 6057
    :cond_82
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion400(Landroid/database/sqlite/SQLiteDatabase;)V

    const-string p2, "upgradeDatabaseToVersion400, for R OS"

    .line 6058
    invoke-static {v2, p2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    :pswitch_82
    const/16 p2, 0x190

    if-gt p3, p2, :cond_83

    return-void

    .line 6063
    :cond_83
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion401(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_83
    const/16 p2, 0x191

    if-gt p3, p2, :cond_84

    return-void

    .line 6068
    :cond_84
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion402(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_84
    const/16 p2, 0x192

    if-gt p3, p2, :cond_85

    return-void

    .line 6073
    :cond_85
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion403(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_85
    const/16 p2, 0x193

    if-gt p3, p2, :cond_86

    return-void

    .line 6078
    :cond_86
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion404(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_86
    const/16 p2, 0x194

    if-gt p3, p2, :cond_87

    return-void

    .line 6083
    :cond_87
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion405(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_87
    const/16 p2, 0x195

    if-gt p3, p2, :cond_88

    return-void

    .line 6088
    :cond_88
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion406(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_88
    const/16 p2, 0x196

    if-gt p3, p2, :cond_89

    return-void

    .line 6093
    :cond_89
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion407(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_89
    const/16 p2, 0x197

    if-gt p3, p2, :cond_8a

    return-void

    .line 6098
    :cond_8a
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion408(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_8a
    const/16 p2, 0x198

    if-gt p3, p2, :cond_8b

    return-void

    .line 6103
    :cond_8b
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion409(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_8b
    const/16 p2, 0x199

    if-gt p3, p2, :cond_8c

    return-void

    .line 6108
    :cond_8c
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion410(Landroid/database/sqlite/SQLiteDatabase;)V

    :pswitch_8c
    const/16 p2, 0x19a

    if-gt p3, p2, :cond_8d

    return-void

    .line 6113
    :cond_8d
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->upgradeDatabaseToVersion411(Landroid/database/sqlite/SQLiteDatabase;)V

    return-void

    :catchall_57
    move-exception p0

    .line 5949
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5950
    throw p0

    :catchall_58
    move-exception p0

    .line 5925
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5926
    throw p0

    :catchall_59
    move-exception p0

    .line 5891
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5892
    throw p0

    :catchall_5a
    move-exception p0

    .line 5878
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5879
    throw p0

    :catchall_5b
    move-exception p0

    .line 5865
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5866
    throw p0

    :catchall_5c
    move-exception p0

    .line 5851
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5852
    throw p0

    :catchall_5d
    move-exception p0

    .line 5825
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5826
    throw p0

    :catchall_5e
    move-exception p0

    .line 5811
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5812
    throw p0

    :catchall_5f
    move-exception p0

    .line 5797
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5798
    throw p0

    :catchall_60
    move-exception p0

    .line 5777
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5778
    throw p0

    :catchall_61
    move-exception p0

    .line 5763
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5764
    throw p0

    :catchall_62
    move-exception p0

    .line 5749
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5750
    throw p0

    :catchall_63
    move-exception p0

    .line 5735
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5736
    throw p0

    :catchall_64
    move-exception p0

    .line 5721
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5722
    throw p0

    :catchall_65
    move-exception p0

    .line 5707
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5708
    throw p0

    :catchall_66
    move-exception p0

    .line 5693
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5694
    throw p0

    :catchall_67
    move-exception p0

    .line 5672
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5673
    throw p0

    :catchall_68
    move-exception p0

    .line 5654
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5655
    throw p0

    :catchall_69
    move-exception p0

    .line 5641
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5642
    throw p0

    :catchall_6a
    move-exception p0

    .line 5626
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5627
    throw p0

    :catchall_6b
    move-exception p0

    .line 5613
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5614
    throw p0

    :catchall_6c
    move-exception p0

    .line 5599
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5600
    throw p0

    :catchall_6d
    move-exception p0

    .line 5583
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5584
    throw p0

    :catchall_6e
    move-exception p0

    .line 5569
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5570
    throw p0

    :catchall_6f
    move-exception p0

    .line 5554
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5555
    throw p0

    :catchall_70
    move-exception p0

    .line 5539
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5540
    throw p0

    :catchall_71
    move-exception p0

    .line 5526
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5527
    throw p0

    :catchall_72
    move-exception p0

    .line 5513
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5514
    throw p0

    :catchall_73
    move-exception p0

    .line 5499
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5500
    throw p0

    :catchall_74
    move-exception p0

    .line 5485
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5486
    throw p0

    :catchall_75
    move-exception p0

    .line 5471
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5472
    throw p0

    :catchall_76
    move-exception p0

    .line 5456
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5457
    throw p0

    :catchall_77
    move-exception p0

    .line 5441
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5442
    throw p0

    :catchall_78
    move-exception p0

    .line 5426
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5427
    throw p0

    :catchall_79
    move-exception p0

    .line 5412
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5413
    throw p0

    :catchall_7a
    move-exception p0

    .line 5398
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5399
    throw p0

    :catchall_7b
    move-exception p0

    .line 5384
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5385
    throw p0

    :catchall_7c
    move-exception p0

    .line 5368
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5369
    throw p0

    :catchall_7d
    move-exception p0

    .line 5355
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5356
    throw p0

    :catchall_7e
    move-exception p0

    .line 5326
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5327
    throw p0

    :catchall_7f
    move-exception p0

    .line 5312
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5313
    throw p0

    :catchall_80
    move-exception p0

    .line 5298
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5299
    throw p0

    :catchall_81
    move-exception p0

    .line 5285
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5286
    throw p0

    :catchall_82
    move-exception p0

    .line 5257
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5258
    throw p0

    :catchall_83
    move-exception p0

    .line 5244
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5245
    throw p0

    :catchall_84
    move-exception p0

    .line 5231
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5232
    throw p0

    :catchall_85
    move-exception p0

    .line 5218
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5219
    throw p0

    :catchall_86
    move-exception p0

    .line 5205
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5206
    throw p0

    :catchall_87
    move-exception p0

    .line 5192
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5193
    throw p0

    :catchall_88
    move-exception p0

    .line 5178
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5179
    throw p0

    :catchall_89
    move-exception p0

    .line 5164
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5165
    throw p0

    :catchall_8a
    move-exception p0

    .line 5150
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5151
    throw p0

    :catchall_8b
    move-exception p0

    .line 5136
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5137
    throw p0

    :catchall_8c
    move-exception p0

    .line 5122
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5123
    throw p0

    :catchall_8d
    move-exception p0

    .line 5108
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5109
    throw p0

    :catchall_8e
    move-exception p0

    .line 5094
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5095
    throw p0

    :catchall_8f
    move-exception p0

    .line 5080
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5081
    throw p0

    :catchall_90
    move-exception p0

    .line 5065
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5066
    throw p0

    :catchall_91
    move-exception p0

    .line 5051
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5052
    throw p0

    :catchall_92
    move-exception p0

    .line 5037
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5038
    throw p0

    :catchall_93
    move-exception p0

    .line 5023
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5024
    throw p0

    :catchall_94
    move-exception p0

    .line 5007
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 5008
    throw p0

    :catchall_95
    move-exception p0

    .line 4993
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4994
    throw p0

    :catchall_96
    move-exception p0

    .line 4977
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4978
    throw p0

    :catchall_97
    move-exception p0

    .line 4961
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4962
    throw p0

    :catchall_98
    move-exception p0

    .line 4945
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4946
    throw p0

    :catchall_99
    move-exception p0

    .line 4931
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4932
    throw p0

    :catchall_9a
    move-exception p0

    .line 4918
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4919
    throw p0

    :catchall_9b
    move-exception p0

    .line 4904
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4905
    throw p0

    :catchall_9c
    move-exception p0

    .line 4890
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4891
    throw p0

    :catchall_9d
    move-exception p0

    .line 4872
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4873
    throw p0

    :catchall_9e
    move-exception p0

    .line 4857
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4858
    throw p0

    :catchall_9f
    move-exception p0

    .line 4844
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4845
    throw p0

    :catchall_a0
    move-exception p0

    .line 4829
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4830
    throw p0

    :catchall_a1
    move-exception p0

    .line 4813
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4814
    throw p0

    :catchall_a2
    move-exception p0

    .line 4797
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4798
    throw p0

    :catchall_a3
    move-exception p0

    .line 4785
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4786
    throw p0

    :catchall_a4
    move-exception p0

    .line 4771
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4772
    throw p0

    :catchall_a5
    move-exception p0

    .line 4757
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4758
    throw p0

    :catchall_a6
    move-exception p0

    .line 4743
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4744
    throw p0

    :catchall_a7
    move-exception v0

    .line 4726
    :try_start_be
    invoke-virtual {v0}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_be
    .catchall {:try_start_be .. :try_end_be} :catchall_a8

    .line 4729
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto/16 :goto_aa

    :catchall_a8
    move-exception p0

    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4730
    throw p0

    :catchall_a9
    move-exception v0

    .line 4710
    :try_start_bf
    invoke-virtual {v0}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_bf
    .catchall {:try_start_bf .. :try_end_bf} :catchall_aa

    .line 4713
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto/16 :goto_aa

    :catchall_aa
    move-exception p0

    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4714
    throw p0

    :catchall_ab
    move-exception v0

    .line 4693
    :try_start_c0
    invoke-virtual {v0}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_c0
    .catchall {:try_start_c0 .. :try_end_c0} :catchall_ac

    .line 4696
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto/16 :goto_aa

    :catchall_ac
    move-exception p0

    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4697
    throw p0

    :catchall_ad
    move-exception p0

    .line 4679
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4680
    throw p0

    :catchall_ae
    move-exception p0

    .line 4665
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4666
    throw p0

    :catchall_af
    move-exception p0

    .line 4651
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4652
    throw p0

    :catchall_b0
    move-exception v0

    .line 4634
    :try_start_c1
    invoke-virtual {v0}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_c1
    .catchall {:try_start_c1 .. :try_end_c1} :catchall_b1

    .line 4637
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto/16 :goto_aa

    :catchall_b1
    move-exception p0

    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4638
    throw p0

    :catchall_b2
    move-exception v0

    .line 4618
    :try_start_c2
    invoke-virtual {v0}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_c2
    .catchall {:try_start_c2 .. :try_end_c2} :catchall_b3

    .line 4621
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto/16 :goto_aa

    :catchall_b3
    move-exception p0

    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4622
    throw p0

    :catchall_b4
    move-exception v0

    .line 4602
    :try_start_c3
    invoke-virtual {v0}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_c3
    .catchall {:try_start_c3 .. :try_end_c3} :catchall_b5

    .line 4605
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto/16 :goto_aa

    :catchall_b5
    move-exception p0

    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4606
    throw p0

    :catchall_b6
    move-exception v0

    .line 4586
    :try_start_c4
    invoke-virtual {v0}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_c4
    .catchall {:try_start_c4 .. :try_end_c4} :catchall_b7

    .line 4589
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto/16 :goto_aa

    :catchall_b7
    move-exception p0

    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4590
    throw p0

    :catchall_b8
    move-exception v0

    .line 4569
    :try_start_c5
    invoke-virtual {v0}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_c5
    .catchall {:try_start_c5 .. :try_end_c5} :catchall_b9

    .line 4572
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto/16 :goto_aa

    :catchall_b9
    move-exception p0

    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4573
    throw p0

    :catchall_ba
    move-exception v0

    .line 4547
    :try_start_c6
    invoke-virtual {v0}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_c6
    .catchall {:try_start_c6 .. :try_end_c6} :catchall_bb

    .line 4550
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto/16 :goto_aa

    :catchall_bb
    move-exception p0

    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4551
    throw p0

    :catchall_bc
    move-exception v0

    .line 4531
    :try_start_c7
    invoke-virtual {v0}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_c7
    .catchall {:try_start_c7 .. :try_end_c7} :catchall_bd

    .line 4534
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto/16 :goto_aa

    :catchall_bd
    move-exception p0

    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4535
    throw p0

    :catchall_be
    move-exception v0

    .line 4516
    :try_start_c8
    invoke-virtual {v0}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_c8
    .catchall {:try_start_c8 .. :try_end_c8} :catchall_bf

    .line 4519
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto/16 :goto_aa

    :catchall_bf
    move-exception p0

    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4520
    throw p0

    :catchall_c0
    move-exception v0

    .line 4505
    :try_start_c9
    invoke-virtual {v0}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_c9
    .catchall {:try_start_c9 .. :try_end_c9} :catchall_c1

    .line 4508
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto/16 :goto_aa

    :catchall_c1
    move-exception p0

    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4509
    throw p0

    :catchall_c2
    move-exception v0

    .line 4489
    :try_start_ca
    invoke-virtual {v0}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_ca
    .catchall {:try_start_ca .. :try_end_ca} :catchall_c3

    .line 4492
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto/16 :goto_aa

    :catchall_c3
    move-exception p0

    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4493
    throw p0

    :catchall_c4
    move-exception v0

    .line 4473
    :try_start_cb
    invoke-virtual {v0}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_cb
    .catchall {:try_start_cb .. :try_end_cb} :catchall_c5

    .line 4476
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_aa

    :catchall_c5
    move-exception p0

    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4477
    throw p0

    :catchall_c6
    move-exception v0

    .line 4457
    :try_start_cc
    invoke-virtual {v0}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_cc
    .catchall {:try_start_cc .. :try_end_cc} :catchall_c7

    .line 4460
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_aa

    :catchall_c7
    move-exception p0

    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4461
    throw p0

    :catchall_c8
    move-exception v0

    .line 4442
    :try_start_cd
    invoke-virtual {v0}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_cd
    .catchall {:try_start_cd .. :try_end_cd} :catchall_c9

    .line 4445
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_aa

    :catchall_c9
    move-exception p0

    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4446
    throw p0

    :catchall_ca
    move-exception v0

    .line 4426
    :try_start_ce
    invoke-virtual {v0}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_ce
    .catchall {:try_start_ce .. :try_end_ce} :catchall_cb

    .line 4429
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_aa

    :catchall_cb
    move-exception p0

    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4430
    throw p0

    :catchall_cc
    move-exception v0

    .line 4410
    :try_start_cf
    invoke-virtual {v0}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_cf
    .catchall {:try_start_cf .. :try_end_cf} :catchall_cd

    .line 4413
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_aa

    :catchall_cd
    move-exception p0

    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4414
    throw p0

    :catchall_ce
    move-exception v0

    .line 4394
    :try_start_d0
    invoke-virtual {v0}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_d0
    .catchall {:try_start_d0 .. :try_end_d0} :catchall_cf

    .line 4397
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_aa

    :catchall_cf
    move-exception p0

    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4398
    throw p0

    :catchall_d0
    move-exception v0

    .line 4378
    :try_start_d1
    invoke-virtual {v0}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_d1
    .catchall {:try_start_d1 .. :try_end_d1} :catchall_d1

    .line 4381
    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    goto :goto_aa

    :catchall_d1
    move-exception p0

    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V

    .line 4382
    throw p0

    :goto_aa
    const-string v0, "Destroying all old data."

    .line 6118
    invoke-static {v2, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 6119
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "onUpgrade: Calling dropAll() and onCreate(). Upgrading database from version "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, "failed."

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-static {p2}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->localLog(Ljava/lang/String;)V

    .line 6121
    invoke-direct {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->dropAll(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 6122
    invoke-virtual {p0, p1}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->onCreate(Landroid/database/sqlite/SQLiteDatabase;)V

    return-void

    nop

    :pswitch_data_0
    .packed-switch 0x28
        :pswitch_0
        :pswitch_1
        :pswitch_2
        :pswitch_3
        :pswitch_4
        :pswitch_5
        :pswitch_6
        :pswitch_7
        :pswitch_8
        :pswitch_9
        :pswitch_a
        :pswitch_b
        :pswitch_c
        :pswitch_d
        :pswitch_e
        :pswitch_f
        :pswitch_10
        :pswitch_11
        :pswitch_12
        :pswitch_13
        :pswitch_14
        :pswitch_15
        :pswitch_16
        :pswitch_17
        :pswitch_18
        :pswitch_19
        :pswitch_1a
        :pswitch_1b
        :pswitch_1c
        :pswitch_1d
        :pswitch_1e
        :pswitch_1f
        :pswitch_20
        :pswitch_21
        :pswitch_22
        :pswitch_23
        :pswitch_24
        :pswitch_25
        :pswitch_26
        :pswitch_27
        :pswitch_28
        :pswitch_29
        :pswitch_2a
        :pswitch_2b
        :pswitch_2c
        :pswitch_2d
        :pswitch_2e
        :pswitch_2f
        :pswitch_30
        :pswitch_31
        :pswitch_32
        :pswitch_33
        :pswitch_34
        :pswitch_35
        :pswitch_36
        :pswitch_37
        :pswitch_38
        :pswitch_39
        :pswitch_3a
        :pswitch_3b
        :pswitch_3c
        :pswitch_3d
        :pswitch_3e
        :pswitch_3f
        :pswitch_40
        :pswitch_41
        :pswitch_42
        :pswitch_43
        :pswitch_44
        :pswitch_45
        :pswitch_46
        :pswitch_47
        :pswitch_48
        :pswitch_49
        :pswitch_4a
        :pswitch_4b
        :pswitch_4c
        :pswitch_4d
        :pswitch_4e
        :pswitch_4f
        :pswitch_50
        :pswitch_51
        :pswitch_52
        :pswitch_53
        :pswitch_54
        :pswitch_55
        :pswitch_56
        :pswitch_56
        :pswitch_57
        :pswitch_58
        :pswitch_58
        :pswitch_58
        :pswitch_58
        :pswitch_58
        :pswitch_58
        :pswitch_58
        :pswitch_58
        :pswitch_58
        :pswitch_58
        :pswitch_58
        :pswitch_58
        :pswitch_58
        :pswitch_58
        :pswitch_58
        :pswitch_58
        :pswitch_58
        :pswitch_58
        :pswitch_58
        :pswitch_58
        :pswitch_58
        :pswitch_59
        :pswitch_5a
        :pswitch_5b
        :pswitch_5c
        :pswitch_5d
        :pswitch_5e
        :pswitch_5f
        :pswitch_60
        :pswitch_61
        :pswitch_62
        :pswitch_63
        :pswitch_64
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_65
        :pswitch_66
        :pswitch_67
        :pswitch_68
        :pswitch_69
        :pswitch_6a
        :pswitch_6b
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6c
        :pswitch_6d
        :pswitch_6e
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_6f
        :pswitch_70
        :pswitch_71
        :pswitch_72
        :pswitch_73
        :pswitch_74
        :pswitch_75
        :pswitch_76
        :pswitch_77
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_78
        :pswitch_79
        :pswitch_7a
        :pswitch_7b
        :pswitch_7c
        :pswitch_7d
        :pswitch_7e
        :pswitch_7f
        :pswitch_80
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_81
        :pswitch_82
        :pswitch_83
        :pswitch_84
        :pswitch_85
        :pswitch_86
        :pswitch_87
        :pswitch_88
        :pswitch_89
        :pswitch_8a
        :pswitch_8b
        :pswitch_8c
    .end packed-switch
.end method
